<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Plan testów" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Zmienne zdefiniowane przez użytkownika" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Konfiguracja skryptu" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="liczbaPowtorzenPetli" elementType="Argument">
            <stringProp name="Argument.name">liczbaPowtorzenPetli</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="liczbaWatkowDoSynchronizacji" elementType="Argument">
            <stringProp name="Argument.name">liczbaWatkowDoSynchronizacji</stringProp>
            <stringProp name="Argument.value">${__threadNum}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="gaussianTimerDeviation" elementType="Argument">
            <stringProp name="Argument.name">gaussianTimerDeviation</stringProp>
            <stringProp name="Argument.value">1000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="gaussianTimerConstantDelay" elementType="Argument">
            <stringProp name="Argument.name">gaussianTimerConstantDelay</stringProp>
            <stringProp name="Argument.value">1000</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="CZAS_TRWANIA" elementType="Argument">
            <stringProp name="Argument.name">CZAS_TRWANIA</stringProp>
            <stringProp name="Argument.value">300</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="wersja_jezykowa" elementType="Argument">
            <stringProp name="Argument.name">wersja_jezykowa</stringProp>
            <stringProp name="Argument.value">POL</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="debugMode" elementType="Argument">
            <stringProp name="Argument.name">debugMode</stringProp>
            <stringProp name="Argument.value">true</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Konfiguracja serwera (wybór środowiska)" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="IP" elementType="Argument">
            <stringProp name="Argument.name">IP</stringProp>
            <stringProp name="Argument.value">192.168.122.88</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">IP_STAGE 192.168.121.83</stringProp>
          </elementProp>
          <elementProp name="PORT" elementType="Argument">
            <stringProp name="Argument.name">PORT</stringProp>
            <stringProp name="Argument.value">6500</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">IP_TST02 192.168.122.88</stringProp>
          </elementProp>
          <elementProp name="PROTOCOL" elementType="Argument">
            <stringProp name="Argument.name">PROTOCOL</stringProp>
            <stringProp name="Argument.value">http</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">IP_TST01 192.168.122.76</stringProp>
          </elementProp>
          <elementProp name="ENCODING" elementType="Argument">
            <stringProp name="Argument.name">ENCODING</stringProp>
            <stringProp name="Argument.value">UTF-8</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">IP_ENERGA_10.7.72.55:6506</stringProp>
          </elementProp>
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value">PAMIĘTAJ O DACIE SYSTEMOWEJ 01.02.2014</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value">PAMIĘTAJ O DACIE SYSTEMOWEJ 01.02.2014</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value">PAMIĘTAJ O DACIE SYSTEMOWEJ 01.02.2014</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value">PAMIĘTAJ O DACIE SYSTEMOWEJ 01.02.2014</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value">PAMIĘTAJ O DACIE SYSTEMOWEJ 01.02.2014</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value">PAMIĘTAJ O DACIE SYSTEMOWEJ 01.02.2014</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value">PAMIĘTAJ O DACIE SYSTEMOWEJ 01.02.2014</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value">PAMIĘTAJ O DACIE SYSTEMOWEJ 01.02.2014</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value">PAMIĘTAJ O DACIE SYSTEMOWEJ 01.02.2014</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value">PAMIĘTAJ O dateShort </stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value">PAMIĘTAJ TEŻ O KODOWANIU ANSI</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="" elementType="Argument">
            <stringProp name="Argument.name"></stringProp>
            <stringProp name="Argument.value">PAMIĘTAJ O ALERT INFO</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Konfiguracja watkow" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="ST001_THR" elementType="Argument">
            <stringProp name="Argument.name">ST001_THR</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ST002_THR" elementType="Argument">
            <stringProp name="Argument.name">ST002_THR</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ST003_THR" elementType="Argument">
            <stringProp name="Argument.name">ST003_THR</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ST004_THR" elementType="Argument">
            <stringProp name="Argument.name">ST004_THR</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ST005_THR" elementType="Argument">
            <stringProp name="Argument.name">ST005_THR</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ST006_THR" elementType="Argument">
            <stringProp name="Argument.name">ST006_THR</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ST007_THR" elementType="Argument">
            <stringProp name="Argument.name">ST007_THR</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ST008_THR" elementType="Argument">
            <stringProp name="Argument.name">ST008_THR</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ST009_THR" elementType="Argument">
            <stringProp name="Argument.name">ST009_THR</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ST010_THR" elementType="Argument">
            <stringProp name="Argument.name">ST010_THR</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ST011_THR" elementType="Argument">
            <stringProp name="Argument.name">ST011_THR</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ST012_THR" elementType="Argument">
            <stringProp name="Argument.name">ST012_THR</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="RAMP_UP" elementType="Argument">
            <stringProp name="Argument.name">RAMP_UP</stringProp>
            <stringProp name="Argument.value">1</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Konfiguracja JDBC" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="JDBC_IP" elementType="Argument">
            <stringProp name="Argument.name">JDBC_IP</stringProp>
            <stringProp name="Argument.value">192.168.122.76</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">192.168.116.233</stringProp>
          </elementProp>
          <elementProp name="JDBC_PORT" elementType="Argument">
            <stringProp name="Argument.name">JDBC_PORT</stringProp>
            <stringProp name="Argument.value">3306</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DB_NAME" elementType="Argument">
            <stringProp name="Argument.name">DB_NAME</stringProp>
            <stringProp name="Argument.value">energa_test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Konfiguracja JDBC Konrad" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="JDBC_IP" elementType="Argument">
            <stringProp name="Argument.name">JDBC_IP</stringProp>
            <stringProp name="Argument.value">192.168.122.76</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
            <stringProp name="Argument.desc">192.168.116.233</stringProp>
          </elementProp>
          <elementProp name="JDBC_PORT" elementType="Argument">
            <stringProp name="Argument.name">JDBC_PORT</stringProp>
            <stringProp name="Argument.value">3306</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="DB_NAME" elementType="Argument">
            <stringProp name="Argument.name">DB_NAME</stringProp>
            <stringProp name="Argument.value">energa_test</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="Zmienne zdefiniowane przez użytkownika" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${IP}</stringProp>
        <stringProp name="HTTPSampler.port">${PORT}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding">${ENCODING}</stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">4</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="KK_13" enabled="true">
        <stringProp name="TestPlan.comments">zmień datę systemową na 2014-03-01, dodaj kontrolkę depozytu i kontrolkę wpłaty, zmień w konfiguracji scenariusza KlasaKlienta = klasaklienta_13</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1383568121000</longProp>
        <longProp name="ThreadGroup.end_time">1383568121000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies">
            <elementProp name="ORA_OUAF_Start_Login" elementType="Cookie" testname="ORA_OUAF_Start_Login">
              <stringProp name="Cookie.value">true</stringProp>
              <stringProp name="Cookie.domain">${IP}</stringProp>
              <stringProp name="Cookie.path"></stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
            <elementProp name="ORA_OUAF_Login_language" elementType="Cookie" testname="ORA_OUAF_Login_language">
              <stringProp name="Cookie.value">ENG</stringProp>
              <stringProp name="Cookie.domain">${IP}</stringProp>
              <stringProp name="Cookie.path"></stringProp>
              <boolProp name="Cookie.secure">false</boolProp>
              <longProp name="Cookie.expires">0</longProp>
              <boolProp name="Cookie.path_specified">true</boolProp>
              <boolProp name="Cookie.domain_specified">true</boolProp>
            </elementProp>
          </collectionProp>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">true</boolProp>
        </CacheManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Konfiguracja JDBC Konrad" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="JDBC_IP" elementType="Argument">
              <stringProp name="Argument.name">JDBC_IP</stringProp>
              <stringProp name="Argument.value">192.168.122.87</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">192.168.116.233</stringProp>
            </elementProp>
            <elementProp name="JDBC_PORT" elementType="Argument">
              <stringProp name="Argument.name">JDBC_PORT</stringProp>
              <stringProp name="Argument.value">3306</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="DB_NAME" elementType="Argument">
              <stringProp name="Argument.name">DB_NAME</stringProp>
              <stringProp name="Argument.value">tst_energa</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Konfiguracja scenariusza" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="timestamp" elementType="Argument">
              <stringProp name="Argument.name">timestamp</stringProp>
              <stringProp name="Argument.value">${__javaScript(new Date().getTime();)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="data" elementType="Argument">
              <stringProp name="Argument.name">data</stringProp>
              <stringProp name="Argument.value">${__time(&quot;yyyy-MM-dd hh:mm:ss&quot;)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="dateShort" elementType="Argument">
              <stringProp name="Argument.name">dateShort</stringProp>
              <stringProp name="Argument.value">2014-03-01</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">DATA KSIĘGOWANIA ${__time(&quot;yyyy-MM-dd&quot;)}</stringProp>
            </elementProp>
            <elementProp name="dataProgowa" elementType="Argument">
              <stringProp name="Argument.name">dataProgowa</stringProp>
              <stringProp name="Argument.value">2014-02-28</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">DATA PROGOWA (data ostatniego odczytu)</stringProp>
            </elementProp>
            <elementProp name="dateStart" elementType="Argument">
              <stringProp name="Argument.name">dateStart</stringProp>
              <stringProp name="Argument.value">2014-03-01</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="zrodloDanych" elementType="Argument">
              <stringProp name="Argument.name">zrodloDanych</stringProp>
              <stringProp name="Argument.value">csv</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="czyZapisacDaneDobazy" elementType="Argument">
              <stringProp name="Argument.name">czyZapisacDaneDobazy</stringProp>
              <stringProp name="Argument.value">true</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="SEARCH_TYPE" elementType="Argument">
              <stringProp name="Argument.name">SEARCH_TYPE</stringProp>
              <stringProp name="Argument.value">MN</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">AL - adres || etykieta licznika, MN - SP_ID || ID licznika , A2 - PREM_ID</stringProp>
            </elementProp>
            <elementProp name="***********************************************************************" elementType="Argument">
              <stringProp name="Argument.name">***********************************************************************</stringProp>
              <stringProp name="Argument.value">FAKTURA</stringProp>
              <stringProp name="Argument.desc">***********************************************************************</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="//CUTOFF_DT_SA" elementType="Argument">
              <stringProp name="Argument.name">//CUTOFF_DT_SA</stringProp>
              <stringProp name="Argument.value">2014-01-31</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">data progowa (data ostatniego odczytu)</stringProp>
            </elementProp>
            <elementProp name="ACCOUNTING_DT" elementType="Argument">
              <stringProp name="Argument.name">ACCOUNTING_DT</stringProp>
              <stringProp name="Argument.value">${__time( 2014-02-01,ACCOUNTING_DT)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">data ksiegowania 2014-01-22               yyyy-MM-dd</stringProp>
            </elementProp>
            <elementProp name="OBC_BILL_DT" elementType="Argument">
              <stringProp name="Argument.name">OBC_BILL_DT</stringProp>
              <stringProp name="Argument.value">${__time(yyyy-MM-dd,OBC_BILL_DT)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">data zakonczenia</stringProp>
            </elementProp>
            <elementProp name="//LosowaLiczba" elementType="Argument">
              <stringProp name="Argument.name">//LosowaLiczba</stringProp>
              <stringProp name="Argument.value">${__RandomString(3,1234567890)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="PROCESS_DT" elementType="Argument">
              <stringProp name="Argument.name">PROCESS_DT</stringProp>
              <stringProp name="Argument.value">${__time(2014-02-01,PROCESS_DT)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="//CRE_DTTM" elementType="Argument">
              <stringProp name="Argument.name">//CRE_DTTM</stringProp>
              <stringProp name="Argument.value">${__time(yyyy-MM-dd-HH.mm.ss,CRE_DTTM)}</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="KlasaKlienta" elementType="Argument">
              <stringProp name="Argument.name">KlasaKlienta</stringProp>
              <stringProp name="Argument.value">ulala</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="PAYMENT_DT" elementType="Argument">
              <stringProp name="Argument.name">PAYMENT_DT</stringProp>
              <stringProp name="Argument.value">2014-03-10</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration - tst_energa" enabled="true">
          <boolProp name="autocommit">true</boolProp>
          <stringProp name="checkQuery">Select 1</stringProp>
          <stringProp name="connectionAge">5000</stringProp>
          <stringProp name="dataSource">tst_energa</stringProp>
          <stringProp name="dbUrl">jdbc:mysql://${JDBC_IP}:${JDBC_PORT}/${DB_NAME}</stringProp>
          <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
          <boolProp name="keepAlive">true</boolProp>
          <stringProp name="password">xwklLH6sPg</stringProp>
          <stringProp name="poolMax">10</stringProp>
          <stringProp name="timeout">10000</stringProp>
          <stringProp name="transactionIsolation">DEFAULT</stringProp>
          <stringProp name="trimInterval">60000</stringProp>
          <stringProp name="username">tst_energa</stringProp>
        </JDBCDataSource>
        <hashTree/>
        <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Usuwam cudzyslow z dateShort" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="Sleep_Time" elementType="Argument">
                <stringProp name="Argument.name">Sleep_Time</stringProp>
                <stringProp name="Argument.value">100</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Sleep_Mask" elementType="Argument">
                <stringProp name="Argument.name">Sleep_Mask</stringProp>
                <stringProp name="Argument.value">0xFF</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Label" elementType="Argument">
                <stringProp name="Argument.name">Label</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResponseCode" elementType="Argument">
                <stringProp name="Argument.name">ResponseCode</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResponseMessage" elementType="Argument">
                <stringProp name="Argument.name">ResponseMessage</stringProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="Status" elementType="Argument">
                <stringProp name="Argument.name">Status</stringProp>
                <stringProp name="Argument.value">OK</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="SamplerData" elementType="Argument">
                <stringProp name="Argument.name">SamplerData</stringProp>
                <stringProp name="Argument.value">${dateShort}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="ResultData" elementType="Argument">
                <stringProp name="Argument.name">ResultData</stringProp>
                <stringProp name="Argument.value">${__javaScript(vars.get(&quot;dateShort&quot;).replace(&quot;\&quot;&quot;\,&quot;&quot;),dateShort)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">org.apache.jmeter.protocol.java.test.JavaTest</stringProp>
        </JavaSampler>
        <hashTree/>
        <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Post-procesor BeanShell" enabled="false">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">if (&quot;db&quot;.equals(vars.get(&quot;zrodloDanych&quot;))){
	String dataProgowa = vars.get(&quot;dateStart&quot;);
	vars.put(&quot;dataProgowa&quot;,dataProgowa);
}


	
</stringProp>
        </BeanShellPostProcessor>
        <hashTree/>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (jeśli dane mają być pobierane z bazy)" enabled="true">
          <stringProp name="IfController.condition">${__javaScript(&quot;${zrodloDanych}&quot;==&quot;db&quot;)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="Dane do logowania" enabled="true">
            <stringProp name="dataSource">energa_test</stringProp>
            <stringProp name="query">select login,password from ccb_users</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="variableNames">login,password</stringProp>
            <stringProp name="queryTimeout"></stringProp>
          </JDBCSampler>
          <hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Post-procesor BeanShell" enabled="true">
              <stringProp name="filename"></stringProp>
              <stringProp name="parameters"></stringProp>
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="script">String login = vars.get(&quot;login_3&quot;);
vars.put(&quot;login&quot;,login);

String haslo = vars.get(&quot;password_3&quot;);
vars.put(&quot;haslo&quot;,haslo);
</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (jeśli dane mają być pobierane z csv)" enabled="true">
          <stringProp name="IfController.condition">${__javaScript(&quot;${zrodloDanych}&quot;==&quot;csv&quot;)}</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Dane uwierzytelniające" enabled="true">
            <stringProp name="TestPlan.comments">Login, Password</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">Dane wejsciowe/logowanie/logowanie_kcichy.csv</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">login,haslo</stringProp>
          </CSVDataSet>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[PT] Wyswietlenie ekranu logowania" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <stringProp name="TestPlan.comments">PT - przypadek testowy</stringProp>
        </TransactionController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Module Controller" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="465165333">Logowanie</stringProp>
              <stringProp name="-1937608498">Zalogowanie</stringProp>
              <stringProp name="850005644">Wywietlenie strony logowania</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[PT] Wprowadzenie loginu, hasla, zalogowanie " enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Wprowadzenie loginu, hasla, zalogowanie " enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="-1937608498">Zalogowanie</stringProp>
              <stringProp name="-1059529264">Wprowadzenie loginu, hasla, zalogowanie </stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Podmiana wartości w tokenie" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="-1937608498">Zalogowanie</stringProp>
              <stringProp name="2117723863">Podmiana wartości w tokenie</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Pobranie danych lokalnych po zalogowaniu" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="-1937608498">Zalogowanie</stringProp>
              <stringProp name="-1232562395">Pobranie danych lokalnych po zalogowaniu</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="dane posiadlosci" enabled="true">
            <stringProp name="TestPlan.comments">posiadlosc</stringProp>
            <stringProp name="delimiter">\t</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">dane wejsciowe/KK_13/posiadlosc.csv</stringProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">PREM_TYPE_CD,COUNTRY,CIS_DIVISION,POSTAL,ADDRESS1,ADDRESS2,ADDRESS3,ADDRESS4,CITY,COUNTY,TREND_AREA_CD,TIME_ZONE_CD,LS_SL_FLG_P,LS_SL_DESCR_P</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="dane punktu poboru" enabled="true">
            <stringProp name="TestPlan.comments">punkt poboru</stringProp>
            <stringProp name="delimiter">\t</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">dane wejsciowe/KK_13/punkt_poboru.csv</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">SP_TYPE_CD,SP_STATUS_FLG,INSTALL_DT,SP_SRC_STATUS_FLG,MR_CYC_CD,EFFDT,CHAR_TYPE_CD01,ADHOC_CHAR_VAL01,CHAR_TYPE_CD02,,CHAR_VAL01,CHAR_TYPE_CD03,CHAR_VAL02</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="dane licznika" enabled="true">
            <stringProp name="TestPlan.comments">licznik</stringProp>
            <stringProp name="delimiter">\t</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">dane wejsciowe/KK_13/licznik.csv</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">BADGE_NBR,MTR_TYPE_CD,MTR_STATUS_FLG,MFG_CD,MODEL_CD,RECEIVE_DT</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="dane osoby" enabled="true">
            <stringProp name="TestPlan.comments">osoba</stringProp>
            <stringProp name="delimiter">\t</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">dane wejsciowe/KK_13/osoba.csv</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">PER_OR_BUS_FLG,NAME_TYPE_FLG,ENTITY_NAME,PHONE_TYPE_CD,PHONE,ID_TYPE_CD01,PER_ID_NBR01,ID_TYPE_CD02,PER_ID_NBR02,CUST_CL_CD,EMAILID,LS_SL_FLG,LS_SL_DESCR</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="dane konta" enabled="true">
            <stringProp name="TestPlan.comments">konto</stringProp>
            <stringProp name="delimiter">\t</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">dane wejsciowe/KK_13/konto.csv</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">SETUP_DT,CUST_CL_CD,CIS_DIVISION,CURRENCY_CD,ACCT_MGMT_GRP_CD,PROTECT_CYC_SW,BILL_CYC_CD,ALERT_INFO,MAIN_CUST_SW,ACCT_REL_TYPE_CD,RECEIVE_COPY_SW,BILL_FORMAT_FLG,BILL_RTE_TYPE_CD,NBR_BILL_COPIES</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="dane konfiguracja licznika" enabled="true">
            <stringProp name="TestPlan.comments">konfiguracja licznika</stringProp>
            <stringProp name="delimiter">\t</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">dane wejsciowe/KK_13/konfiguracja_licznika.csv</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">EFF_DTTM,MTR_CONFIG_TY_CD,READ_SEQ,READ_SEQ2,READ_SEQ3,UOM_CD,REG_CONST,HOW_TO_USE_FLG,FULL_SCALE,TOU_CD,TOU_CD2,TOU_CD3,CONSUM_SUB_FLG,NBR_OF_DGTS_LFT,NBR_OF_DGTS_RGT,TOLERANCE</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="dane umowy" enabled="true">
            <stringProp name="TestPlan.comments">umowa</stringProp>
            <stringProp name="delimiter">\t</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">dane wejsciowe/KK_13/umowa.csv</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">START_DT,CUST_READ_FLG,SA_TYPE_CD,EFFDT_RS_CD,RS_CD,START_DTTM,EFFDT_CHAR,CHAR_TYPE_CD,CHAR_VAL</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="dane odczytu początkowego licznika" enabled="true">
            <stringProp name="TestPlan.comments">odczyt</stringProp>
            <stringProp name="delimiter">\t</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">dane wejsciowe/KK_13/odczyt.csv</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">READ_DTTM,MR_SOURCE_CD,READ_TYPE_FLG,REG_READING,REG_READING2,REG_READING3,USE_ON_BILL_SW</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="dane drugiego odczytu (koniec miesiaca)" enabled="true">
            <stringProp name="TestPlan.comments">odczyt</stringProp>
            <stringProp name="delimiter">\t</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">dane wejsciowe/KK_13/odczyt2.csv</stringProp>
            <boolProp name="quotedData">false</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.all</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">READ_DTTM2,MR_SOURCE_CD,READ_TYPE_FLG,REG_READING4,REG_READING5,REG_READING6,USE_ON_BILL_SW,CHAR_TYPE_CD_MR_01,CHAR_TYPE_CD_MR_02,ADHOC_CHAR_VAL_MR_02,CHAR_TYPE_CD_MR_03,ADHOC_CHAR_VAL_MR_03,CHAR_TYPE_CD_MR_04,ADHOC_CHAR_VAL_MR_04</stringProp>
          </CSVDataSet>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="true">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end">1000</stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">Counter</stringProp>
            <stringProp name="CounterConfig.format">000</stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="LosowaLiczba" enabled="true">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">10000</stringProp>
            <stringProp name="outputFormat"></stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">LosowaLiczba</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (aparatura medyczna.Posiadlosc)" enabled="true">
            <stringProp name="TestPlan.comments">sprawdza czy w pliku CSV jest Y , wtedy dodaje posiadlosc z aparatura medyczna</stringProp>
            <stringProp name="IfController.condition">${__javaScript(&quot;${LS_SL_FLG_P}&quot;==&quot;Y&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Posiadłość &gt; Zapisywanie" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-1462739247">Posiadłość</stringProp>
                <stringProp name="-1692397132">Zapisywanie posiadlosci z aparaturą medyczną</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (aparatura medyczna.Posiadlosc)" enabled="true">
            <stringProp name="TestPlan.comments">sprawdza czy w pliku CSV jest N , wtedy dodaje posiadlosc bez aparatury medycznej</stringProp>
            <stringProp name="IfController.condition">${__javaScript(&quot;${LS_SL_FLG_P}&quot;==&quot;N&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Posiadłość &gt; Zapisywanie" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-1462739247">Posiadłość</stringProp>
                <stringProp name="1816610279">Zapisywanie posiadlosci bez aparatury medycznej</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="generujUnikalnyKodPPE" enabled="true">
            <stringProp name="variableName">GenUniquePPE</stringProp>
            <stringProp name="outputFormat"></stringProp>
            <stringProp name="minimumValue">10000000</stringProp>
            <stringProp name="maximumValue">99999999</stringProp>
            <stringProp name="randomSeed"></stringProp>
            <boolProp name="perThread">true</boolProp>
            <stringProp name="TestPlan.comments">Generuje losowe liczby, które dodawane są do zmiennej odpowiedzialnej za wartość ch-ki CMFKOPPE (Kod PPE)</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Punkt poboru &gt; Zapisywanie" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="-664055907">Punkt poboru</stringProp>
              <stringProp name="-1518070970">Zapisywanie Punktu Poboru</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Licznik &gt; Zapisywanie" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="1832036028">Licznik</stringProp>
              <stringProp name="-98018086">Zapisywanie</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="GenUniqueRorID" enabled="true">
            <stringProp name="variableName">GenUniqueRorID</stringProp>
            <stringProp name="outputFormat"></stringProp>
            <stringProp name="minimumValue">100</stringProp>
            <stringProp name="maximumValue">999</stringProp>
            <stringProp name="randomSeed"></stringProp>
            <boolProp name="perThread">true</boolProp>
            <stringProp name="TestPlan.comments">Generuje losowe liczby, które dodawane są do zmiennej odpowiedzialnej za wartość ch-ki CMFKOPPE (Kod PPE)</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If  (konfiguracjaLicznikaC21)" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(&quot;${MTR_CONFIG_TY_CD}&quot;==&quot;C21&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">true</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Konfiguracja licznika &gt; Zapisywanie konfiguracji licznika C21" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-1670537899">Konfiguracja licznika</stringProp>
                <stringProp name="543975881">Zapisywanie konfiguracji licznika C21</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Odczyt &gt; Odczyt licznika dla konfiguracji licznika  C21 &gt; Zapisanie" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-1937841849">Odczyt</stringProp>
                <stringProp name="544645103">Odczyt dla konfiguracji licznika C21</stringProp>
                <stringProp name="1523195260">Zapisanie</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Odczyt2 &gt; Odczyt licznika dla konfiguracji licznika  C21 &gt; Zapisanie" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-1937841849">Odczyt</stringProp>
                <stringProp name="544645103">Odczyt dla konfiguracji licznika C21</stringProp>
                <stringProp name="-1940400938">Zapisanie drugiego odczytu</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If (konfiguracjaLicznikaC22B)" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(&quot;${MTR_CONFIG_TY_CD}&quot;==&quot;C22B&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Konfiguracja licznika &gt; Zapisywanie konfiguracji licznika C22B" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-1670537899">Konfiguracja licznika</stringProp>
                <stringProp name="-316616776">Zapisywanie konfiguracji licznika C22B</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Odczyt &gt; Odczyt licznika dla konfiguracji licznika C22B &gt; Zapisanie" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-1937841849">Odczyt</stringProp>
                <stringProp name="-295870894">Odczyt dla konfiguracji licznika C22B</stringProp>
                <stringProp name="1523195260">Zapisanie</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Odczyt2 &gt; Odczyt licznika dla konfiguracji licznika  C22B &gt; Zapisanie" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-1937841849">Odczyt</stringProp>
                <stringProp name="-295870894">Odczyt dla konfiguracji licznika C22B</stringProp>
                <stringProp name="-1940400938">Zapisanie drugiego odczytu</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If  ((konfiguracjaLicznikaC22A)" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(&quot;${MTR_CONFIG_TY_CD}&quot;==&quot;C22A&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Konfiguracja licznika &gt; Zapisywanie konfiguracji licznika C22A" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-1670537899">Konfiguracja licznika</stringProp>
                <stringProp name="-316616777">Zapisywanie konfiguracji licznika C22A</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Odczyt &gt; Odczyt licznika dla konfiguracji licznika  C22A &gt; Zapisanie" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-1937841849">Odczyt</stringProp>
                <stringProp name="-295870894">Odczyt dla konfiguracji licznika C22B</stringProp>
                <stringProp name="1523195260">Zapisanie</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Odczyt2 &gt; Odczyt licznika dla konfiguracji licznika  C22A &gt; Zapisanie" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-1937841849">Odczyt</stringProp>
                <stringProp name="-295870894">Odczyt dla konfiguracji licznika C22B</stringProp>
                <stringProp name="-1940400938">Zapisanie drugiego odczytu</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If  ((konfiguracjaLicznikaC23)" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(&quot;${MTR_CONFIG_TY_CD}&quot;==&quot;C23&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Konfiguracja licznika &gt; Zapisywanie konfiguracji licznika C23" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-1670537899">Konfiguracja licznika</stringProp>
                <stringProp name="543975883">Zapisywanie konfiguracji licznika C23</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Odczyt &gt; Odczyt licznika dla konfiguracji licznika  C23 &gt; Zapisanie" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-1937841849">Odczyt</stringProp>
                <stringProp name="544645105">Odczyt dla konfiguracji licznika C23</stringProp>
                <stringProp name="-895200012">Zapisanie odczytu dla konfiguracji licznika C23</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Odczyt2 &gt; Odczyt licznika dla konfiguracji licznika  C23 &gt; Zapisanie" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-1937841849">Odczyt</stringProp>
                <stringProp name="544645105">Odczyt dla konfiguracji licznika C23</stringProp>
                <stringProp name="-1940400938">Zapisanie drugiego odczytu</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Instalacja punktu poboru licznika" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="-942853346">Instalacja punktu poboru/licznika</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="LosowaLiczba" enabled="false">
            <stringProp name="maximumValue">99999</stringProp>
            <stringProp name="minimumValue">10000</stringProp>
            <stringProp name="outputFormat"></stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">LosowaLiczba</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter" enabled="false">
            <stringProp name="CounterConfig.start">1</stringProp>
            <stringProp name="CounterConfig.end">100</stringProp>
            <stringProp name="CounterConfig.incr">1</stringProp>
            <stringProp name="CounterConfig.name">Counter</stringProp>
            <stringProp name="CounterConfig.format">000</stringProp>
            <boolProp name="CounterConfig.per_user">false</boolProp>
          </CounterConfig>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="LosowaLiczbaNrTel" enabled="false">
            <stringProp name="maximumValue">999999999</stringProp>
            <stringProp name="minimumValue">100000000</stringProp>
            <stringProp name="outputFormat"></stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">LosowaLiczbaNrTel</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <RandomVariableConfig guiclass="TestBeanGUI" testclass="RandomVariableConfig" testname="LosowaLiczbaPerIdNbr" enabled="false">
            <stringProp name="maximumValue">99999999999</stringProp>
            <stringProp name="minimumValue">10000000000</stringProp>
            <stringProp name="outputFormat"></stringProp>
            <boolProp name="perThread">false</boolProp>
            <stringProp name="randomSeed"></stringProp>
            <stringProp name="variableName">LosowaLiczbaPerIdNbr</stringProp>
          </RandomVariableConfig>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (aparatura medyczna Y)" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(&quot;${LS_SL_FLG}&quot;==&quot;Y&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Osoba &gt; Zapisywanie osoby bez konta" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="76493930">Osoba</stringProp>
                <stringProp name="1803841131">Zapisywanie osoby bez konta (z aparaturą medyczną)</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (aparatura medyczna N)" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(&quot;${LS_SL_FLG}&quot;==&quot;N&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Osoba &gt; Zapisywanie osoby bez konta" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="76493930">Osoba</stringProp>
                <stringProp name="2372076">Zapisywanie osoby bez konta (bez aparatury medycznej)</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Konto &gt; Zapisywanie konta" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="72680293">Konto</stringProp>
              <stringProp name="-1036724047">Zapisywanie konta</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (typ umowy C21)" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(&quot;${MTR_CONFIG_TY_CD}&quot;==&quot;C21&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Umowa &gt; Zapisywanie umowy C21" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-2044455778">Rozpoczęcie/zatrzymanie C21</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (typ umowy C22A)" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(&quot;${MTR_CONFIG_TY_CD}&quot;==&quot;C22A&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Umowa &gt; Zapisywanie umowy C22A" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="1046380418">Rozpoczęcie/zatrzymanie C22A</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (typ umowy C22B)" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(&quot;${MTR_CONFIG_TY_CD}&quot;==&quot;C22B&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Umowa &gt; Zapisywanie umowy C22B" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="1046380419">Rozpoczęcie/zatrzymanie C22B</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (typ umowy C23)" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(&quot;${MTR_CONFIG_TY_CD}&quot;==&quot;C23&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="[PT] Umowa &gt; Zapisywanie umowy C23" enabled="true">
              <collectionProp name="ModuleController.node_path">
                <stringProp name="1510640794">Brudnopis</stringProp>
                <stringProp name="-811476307">Plan testów</stringProp>
                <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
                <stringProp name="-2044455776">Rozpoczęcie/zatrzymanie C23</stringProp>
              </collectionProp>
            </ModuleController>
            <hashTree/>
          </hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Generowanie faktury (generuj)" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="580164448">Faktura</stringProp>
              <stringProp name="-1146061245">1 Generuj</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Generowanie faktury (obliczj)" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="580164448">Faktura</stringProp>
              <stringProp name="757294855">2 Oblicz ok</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Generowanie faktury (zamróź)" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="580164448">Faktura</stringProp>
              <stringProp name="797214686">5 Zamróź ok</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Generowanie faktury (zakończ)" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="580164448">Faktura</stringProp>
              <stringProp name="-716325834">6 Zakończ ok</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Zdarzenie płatności" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="1400333311">Zdarzenie płatności</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Kontakt z klientem" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="-65221967">Kontakt z klientem</stringProp>
              <stringProp name="505732342">Zapisywanie kontaktu z klientem</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Korekta odczytu 2 i zmiana use on bill = false" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="-1937841849">Odczyt</stringProp>
              <stringProp name="544645103">Odczyt dla konfiguracji licznika C21</stringProp>
              <stringProp name="987571149">Korekta drugiego odczytu - USE ON BILL = FALSE</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Zapisanie trzeciego odczytu - korygowany odczyt" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="-1937841849">Odczyt</stringProp>
              <stringProp name="544645103">Odczyt dla konfiguracji licznika C21</stringProp>
              <stringProp name="-1151017528">Zapisanie trzeciego odczytu</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Koryguj" enabled="false">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="580164448">Faktura</stringProp>
              <stringProp name="1130123921">Koryguj</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Synchronizacja" enabled="false">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="1510640794">Brudnopis</stringProp>
            <stringProp name="-811476307">Plan testów</stringProp>
            <stringProp name="-1693681121">[RE] Synchronizacja</stringProp>
            <stringProp name="-1651665874">Synchronizacja</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="[PT] Wylogowanie" enabled="false">
          <boolProp name="TransactionController.parent">false</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <stringProp name="TestPlan.comments">PT - przypadek testowy</stringProp>
        </TransactionController>
        <hashTree>
          <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="Wylogowanie" enabled="true">
            <collectionProp name="ModuleController.node_path">
              <stringProp name="1510640794">Brudnopis</stringProp>
              <stringProp name="-811476307">Plan testów</stringProp>
              <stringProp name="1295819884">[RE] Elementy reużywalne</stringProp>
              <stringProp name="-1263078541">Wylogowanie</stringProp>
            </collectionProp>
          </ModuleController>
          <hashTree/>
        </hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="DebugMode" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="1510640794">Brudnopis</stringProp>
            <stringProp name="-811476307">Plan testów</stringProp>
            <stringProp name="17982977">[RE] Debug Mode</stringProp>
            <stringProp name="93904784">Debug Mode</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="[RE] Elementy reużywalne" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1383557787000</longProp>
        <longProp name="ThreadGroup.end_time">1383557787000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Posiadłość" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Kasowanie" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Kasowanie posiadlosci] /ouaf/pageDelete?service=CILCPRMP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;POSTAL_CD_CHG_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;PREM_TYPE_CD&quot;&gt;APT&lt;/field&gt; 	&lt;field name=&quot;CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;LL_ID&quot;/&gt; 	&lt;field name=&quot;KEY_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;KEY_ID&quot;/&gt; 	&lt;field name=&quot;OK_TO_ENTER_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;MR_INSTR_CD&quot;/&gt; 	&lt;field name=&quot;MR_INSTR_DETAILS&quot;/&gt; 	&lt;field name=&quot;MR_WARN_CD&quot;/&gt; 	&lt;field name=&quot;TREND_AREA_CD&quot;&gt;PRZ2&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;Rokosowksa 8, 41-246 Gniezno&lt;/field&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;MAIL_ADDR_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;/&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 	&lt;field name=&quot;PREM_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;TIME_ZONE_CD&quot;/&gt; 	&lt;field name=&quot;LS_SL_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;LS_SL_DESCR&quot;/&gt; 	&lt;field name=&quot;PRNT_PREM_ID&quot;/&gt; 	&lt;field name=&quot;ADDRESS1_UPR&quot;&gt;ROKOSOWKSA 8, 41-246 GNIEZNO&lt;/field&gt; 	&lt;field name=&quot;CITY_UPR&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;&gt;Rokosowksa 8, 41-246 Gniezno, Mieszkanie&lt;/field&gt; 	&lt;field name=&quot;LANDLORD_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;TIME_ZONE_DESCR&quot;/&gt; 	&lt;field name=&quot;PRNT_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;25&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Cały adres&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr domu dodatko&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr mieszkania d&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;&gt;Numer 1&lt;/field&gt; 	&lt;field name=&quot;NUM2_LBL&quot;&gt;Numer 2&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;&gt;Województwo&lt;/field&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;ALT_STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;ALT_STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;PROCESS_DT&quot;&gt;2013-11-15&lt;/field&gt; 	&lt;field name=&quot;PREM_TYPE_CHG_SW&quot;&gt;false&lt;/field&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageDelete?service=CILCPRMP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Wyszukiwanie" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Wyszukiwanie posiadlosci] /ouaf/search?service=CILCPRMS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="SEARCH_TYPE" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">SEARCH_TYPE</stringProp>
                    <stringProp name="Argument.value">${SEARCH_TYPE}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PREM_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">PREM_ID</stringProp>
                    <stringProp name="Argument.value">${PREM_ID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ADDRESS1" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ADDRESS1</stringProp>
                    <stringProp name="Argument.value">${ADDRESS1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="POSTAL" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${POSTAL}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">POSTAL</stringProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CITY" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${CITY}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">CITY</stringProp>
                  </elementProp>
                  <elementProp name="BADGE_NBR" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${BADGE_NBR}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">BADGE_NBR</stringProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/search?service=CILCPRMS</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisywanie posiadlosci z aparaturą medyczną" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie posiadlosci z aparaturą medyczną] /ouaf/pageAdd?service=CILCPRMP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;POSTAL_CD_CHG_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;PREM_TYPE_CD&quot;&gt;${PREM_TYPE_CD}&lt;/field&gt; 	&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 	&lt;field name=&quot;LL_ID&quot;/&gt; 	&lt;field name=&quot;KEY_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;KEY_ID&quot;/&gt; 	&lt;field name=&quot;OK_TO_ENTER_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;MR_INSTR_CD&quot;/&gt; 	&lt;field name=&quot;MR_INSTR_DETAILS&quot;/&gt; 	&lt;field name=&quot;MR_WARN_CD&quot;/&gt; 	&lt;field name=&quot;TREND_AREA_CD&quot;&gt;${TREND_AREA_CD}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS2&quot;&gt;${ADDRESS2}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS3&quot;&gt;${ADDRESS3}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS4&quot;&gt;${ADDRESS4}&lt;/field&gt; 	&lt;field name=&quot;MAIL_ADDR_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;COUNTY&quot;&gt;${COUNTY}&lt;/field&gt; 	&lt;field name=&quot;POSTAL&quot;&gt;${POSTAL}&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;${COUNTRY}&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;PREM_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;TIME_ZONE_CD&quot;&gt;${TIME_ZONE_CD}&lt;/field&gt; 	&lt;field name=&quot;LS_SL_FLG&quot;&gt;${LS_SL_FLG_P}&lt;/field&gt; 	&lt;field name=&quot;LS_SL_DESCR&quot;&gt;${LS_SL_DESCR_P}&lt;/field&gt; 	&lt;field name=&quot;PRNT_PREM_ID&quot;/&gt; 	&lt;field name=&quot;ADDRESS1_UPR&quot;/&gt; 	&lt;field name=&quot;CITY_UPR&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;LANDLORD_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;&gt;31-346&lt;/field&gt; 	&lt;field name=&quot;TIME_ZONE_DESCR&quot;/&gt; 	&lt;field name=&quot;PRNT_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;ALT_STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;ALT_STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;PROCESS_DT&quot;&gt;2014-02-26&lt;/field&gt; 	&lt;field name=&quot;PREM_TYPE_CHG_SW&quot;&gt;true&lt;/field&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ignoreWarnings</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCPRMP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PREM_ID" enabled="true">
                <stringProp name="TestPlan.comments">id posiadłości</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PREM_ID</stringProp>
                <stringProp name="RegexExtractor.regex">PREM_ID&quot;:&quot;(.*)&quot;,&quot;PREM_TYPE_CD</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak PREM_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PREM_INFO" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PREM_INFO</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;PREM_INFO&quot;:&quot;(.*)&quot;,&quot;LANDLORD_DESCR&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak PREM_INFO</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983947757">resultCode....W..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202987653">resultCode........pageBody</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Post-procesor BeanShell" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">prev.setDataEncoding(&quot;UTF-8&quot;)</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
              </GaussianRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisywanie posiadlosci bez aparatury medycznej" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie posiadlosci bez aparatury medycznej] /ouaf/pageAdd?service=CILCPRMP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;POSTAL_CD_CHG_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;PREM_TYPE_CD&quot;&gt;${PREM_TYPE_CD}&lt;/field&gt; 	&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 	&lt;field name=&quot;LL_ID&quot;/&gt; 	&lt;field name=&quot;KEY_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;KEY_ID&quot;/&gt; 	&lt;field name=&quot;OK_TO_ENTER_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;MR_INSTR_CD&quot;/&gt; 	&lt;field name=&quot;MR_INSTR_DETAILS&quot;/&gt; 	&lt;field name=&quot;MR_WARN_CD&quot;/&gt; 	&lt;field name=&quot;TREND_AREA_CD&quot;&gt;${TREND_AREA_CD}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS2&quot;&gt;${ADDRESS2}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS3&quot;&gt;${ADDRESS3}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS4&quot;&gt;${ADDRESS4}&lt;/field&gt; 	&lt;field name=&quot;MAIL_ADDR_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;COUNTY&quot;&gt;${COUNTY}&lt;/field&gt; 	&lt;field name=&quot;POSTAL&quot;&gt;${POSTAL}&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;${COUNTRY}&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;PREM_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;TIME_ZONE_CD&quot;&gt;${TIME_ZONE_CD}&lt;/field&gt; 	&lt;field name=&quot;LS_SL_FLG&quot;&gt;${LS_SL_FLG_P}&lt;/field&gt; 	&lt;field name=&quot;LS_SL_DESCR&quot;/&gt; 	&lt;field name=&quot;PRNT_PREM_ID&quot;/&gt; 	&lt;field name=&quot;ADDRESS1_UPR&quot;/&gt; 	&lt;field name=&quot;CITY_UPR&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;LANDLORD_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;&gt;31-346&lt;/field&gt; 	&lt;field name=&quot;TIME_ZONE_DESCR&quot;/&gt; 	&lt;field name=&quot;PRNT_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;ALT_STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;ALT_STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;PROCESS_DT&quot;&gt;2014-02-26&lt;/field&gt; 	&lt;field name=&quot;PREM_TYPE_CHG_SW&quot;&gt;true&lt;/field&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ignoreWarnings</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCPRMP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PREM_ID" enabled="true">
                <stringProp name="TestPlan.comments">id posiadłości</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PREM_ID</stringProp>
                <stringProp name="RegexExtractor.regex">PREM_ID&quot;:&quot;(.*)&quot;,&quot;PREM_TYPE_CD</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak PREM_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PREM_INFO" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PREM_INFO</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;PREM_INFO&quot;:&quot;(.*)&quot;,&quot;LANDLORD_DESCR&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak PREM_INFO</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983947757">resultCode....W..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-202987653">resultCode........pageBody</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="Post-procesor BeanShell" enabled="true">
                <boolProp name="resetInterpreter">false</boolProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="script">prev.setDataEncoding(&quot;UTF-8&quot;)</stringProp>
              </BeanShellPostProcessor>
              <hashTree/>
              <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
              </GaussianRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Kontakt z klientem" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisywanie kontaktu z klientem" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie kontaktu z klientem]" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;ENTITY_NAME&quot;&gt;Hotel Lazurowy&lt;/field&gt; 	&lt;field name=&quot;ENTITY_INFO&quot;&gt;Hotel Lazurowy -  Telefon opcjonalny:  508857702&lt;/field&gt; 	&lt;field name=&quot;CC_LTR_INFO&quot;/&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Błędne naliczanie&lt;/field&gt; 	&lt;field name=&quot;RELATED_INFO&quot;/&gt; 	&lt;field name=&quot;CC_INFO&quot;/&gt; 	&lt;field name=&quot;USER_NAME&quot;/&gt; 	&lt;field name=&quot;EXTRACT_ALG_CD&quot;/&gt; 	&lt;field name=&quot;CONTACT_METH_INFO&quot;/&gt; 	&lt;field name=&quot;QUICK_ADD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CC_SHORT_NOTE&quot;/&gt; 	&lt;field name=&quot;W_CC_STATUS_SW&quot;&gt;${W_CC_STATUS_SW}&lt;/field&gt; 	&lt;field name=&quot;W_CC_TYPE_CHNGD_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_DSP_LTR_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_DISPLAY_SW&quot;/&gt; 	&lt;field name=&quot;ON_LINE_DOC_URL&quot;/&gt; 	&lt;field name=&quot;PRINT_PLATFORM_FLG&quot;/&gt; 	&lt;field name=&quot;REPORT_CD&quot;/&gt; 	&lt;field name=&quot;CC_ID&quot;/&gt; 	&lt;field name=&quot;USER_ID&quot;&gt;${USER_ID}&lt;/field&gt; 	&lt;field name=&quot;PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;CC_DTTM&quot;&gt;${CC_DTTM}&lt;/field&gt; 	&lt;field name=&quot;CC_CL_CD&quot;&gt;${CC_CL_CD}&lt;/field&gt; 	&lt;field name=&quot;CC_TYPE_CD&quot;&gt;${CC_TYPE_CD}&lt;/field&gt; 	&lt;field name=&quot;PRINT_LETTER_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LETTER_PRINT_DTTM&quot;/&gt; 	&lt;field name=&quot;LTR_TMPL_CD&quot;/&gt; 	&lt;field name=&quot;DESCRLONG&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;BATCH_CD&quot;/&gt; 	&lt;field name=&quot;BATCH_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;CC_STATUS_FLG&quot;/&gt; 	&lt;field name=&quot;CONTACT_METH_FLG&quot;&gt;${CONTACT_METH_FLG}&lt;/field&gt; 	&lt;field name=&quot;CC_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;REPRINT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CC_MAINT_FLG&quot;/&gt; 	&lt;list name=&quot;CC_LOG&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;CC_ID&quot;/&gt; 			&lt;field name=&quot;LAST_CRE_DTTM&quot;/&gt; 			&lt;field name=&quot;LAST_CC_LOG_ID&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;CC_ID&quot;/&gt; 			&lt;field name=&quot;CC_LOG_ID&quot;/&gt; 			&lt;field name=&quot;TRIGGER_DT&quot;&gt;${TRIGGER_DT_CC}&lt;/field&gt; 			&lt;field name=&quot;ROLE_ID&quot;/&gt; 			&lt;field name=&quot;ASSIGNED_TO&quot;&gt;USER1&lt;/field&gt; 			&lt;field name=&quot;USER_ID&quot;/&gt; 			&lt;field name=&quot;CRE_DTTM&quot;/&gt; 			&lt;field name=&quot;CC_LOG_CONTENT&quot;/&gt; 			&lt;field name=&quot;TRIGGER_BP_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;RL_DESCR&quot;/&gt; 			&lt;field name=&quot;LOGDT_CRE_USER&quot;/&gt; 			&lt;field name=&quot;CRE_USER_NAME&quot;/&gt; 			&lt;field name=&quot;TODO_USER_NAME&quot;&gt;Cichy, Konrad&lt;/field&gt; 			&lt;field name=&quot;CC_REMINDER_FLG&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;WRK_TD_TYPE_CD&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;CC_CHAR&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;CC_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SORT_SEQ&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;LAST_CHAR_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;CC_CL_CD&quot;/&gt; 			&lt;field name=&quot;CC_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;CC_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD_CC}&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL&quot;&gt;${ADHOC_CHAR_VAL_CC}&lt;/field&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SORT_SEQ&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;Metoda kontaktu&lt;/field&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;ADV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCCSCP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.88:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
              </GaussianRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zdarzenie płatności" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zdarzenie płatności]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;PAYOR_ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;PAYOR_ACCT_NAME&quot;&gt;${ACCT_NAME}&lt;/field&gt; 	&lt;field name=&quot;MATCH_TYPE_CD&quot;&gt;IDFAKTUR&lt;/field&gt; 	&lt;field name=&quot;MATCH_VAL&quot;/&gt; 	&lt;field name=&quot;CASH_BACK_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;AMT_TENDERED&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;PAYMENT_AMT&quot;&gt;${TOT_GEN_CHG}&lt;/field&gt; 	&lt;field name=&quot;TOT_TENDER_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;ACCT_CASH_ONLY_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NO_CASH_LIKE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PEVT_SPCL_ACTN_FLG&quot;&gt;DSFZ&lt;/field&gt; 	&lt;field name=&quot;ADD_OK_PRESSED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NON_CIS_NAME&quot;/&gt; 	&lt;field name=&quot;NON_CIS_REF_NBR&quot;/&gt; 	&lt;field name=&quot;NON_CIS_COMMENT&quot;/&gt; 	&lt;field name=&quot;NON_CIS_ACCT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;MANUAL_DISTRIB_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PAYMENT_DT&quot;&gt;${PAYMENT_DT}&lt;/field&gt; 	&lt;field name=&quot;ADD_CIS_PAY_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NON_CIS_SA_ID&quot;/&gt; 	&lt;field name=&quot;PAY_TMPL_CD&quot;/&gt; 	&lt;field name=&quot;BANK_CD&quot;/&gt; 	&lt;field name=&quot;TNDR_SRCE_CD&quot;/&gt; 	&lt;field name=&quot;TNDR_SRCE_MSG&quot;/&gt; 	&lt;field name=&quot;TENDER_AUTH_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;TENDER_AUTH_OVRD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;TENDER_AUTH_CD&quot;/&gt; 	&lt;field name=&quot;TENDER_REVERSAL_CD&quot;/&gt; 	&lt;field name=&quot;DISPLAY_ALERT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PG_TURN_IN_ALERT&quot;/&gt; 	&lt;field name=&quot;PAY_EVENT_INFO&quot;/&gt; 	&lt;field name=&quot;PAY_EVENT_ALT_CURR&quot;/&gt; 	&lt;field name=&quot;PAY_EVT_TRANS_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PAY_EVT_DEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CALC_CASH_BACK_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DST_DTL_TRANS_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;TRANS_POPUP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ALL_PAY_DIST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ALL_PAY_FREEZE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_TRANSFER_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_DISTRIBUTE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_DELETE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_FREEZE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;XFER_ACCT_NAME&quot;/&gt; 	&lt;field name=&quot;ACCT_NON_CIS_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;XFER_NON_CIS_NAME&quot;/&gt; 	&lt;field name=&quot;XFER_NCIS_REF_NBR&quot;/&gt; 	&lt;field name=&quot;XFER_NCIS_COMMENT&quot;/&gt; 	&lt;field name=&quot;CAN_RSN_CD&quot;/&gt; 	&lt;field name=&quot;FREEZE_PAY_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BAL_TNDR_CTL_EXIST_SW&quot;/&gt; 	&lt;field name=&quot;DST_TOTAL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;PAYMENT_TOTAL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TENDER_TOTAL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;PAYMENT_NUMBER&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;TENDER_NUMBER&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;CASH_BACK_AMT2&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;ENABLE_DST&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;PEVT_DST_DTL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DFLT_DST_CD&quot;/&gt; 	&lt;field name=&quot;DFLT_DST_CHAR_CD&quot;/&gt; 	&lt;field name=&quot;DFLT_DST_CHAR_FLG&quot;/&gt; 	&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 	&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 	&lt;field name=&quot;TBL_NAME&quot;/&gt; 	&lt;field name=&quot;INFO_PRG&quot;/&gt; 	&lt;field name=&quot;CHAR_VAL_DESCR&quot;/&gt; 	&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 	&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 	&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 	&lt;field name=&quot;USER_ID&quot;/&gt; 	&lt;field name=&quot;ENDORSE_MSG&quot;/&gt; 	&lt;field name=&quot;ENDORSE_PROMPT&quot;/&gt; 	&lt;field name=&quot;DESCR&quot;/&gt; 	&lt;field name=&quot;ACCOUNT_NBR&quot;/&gt; 	&lt;field name=&quot;TOT_PAY_CAP_SH&quot;/&gt; 	&lt;field name=&quot;TOT_PAY_CAP_LG&quot;/&gt; 	&lt;field name=&quot;TOT_TNDR_CAP_SH&quot;/&gt; 	&lt;field name=&quot;TOT_TNDR_CAP_LG&quot;/&gt; 	&lt;field name=&quot;AMT_RECD_CAP&quot;/&gt; 	&lt;field name=&quot;CASH_RET_CAP&quot;/&gt; 	&lt;field name=&quot;PRINT_CTL&quot;/&gt; 	&lt;field name=&quot;RECPT_LONG_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;RECPT_SHORT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;RECPT_CO_NAME&quot;/&gt; 	&lt;field name=&quot;DUP_RECPT_CAP&quot;/&gt; 	&lt;field name=&quot;LOCAL_OFC_MSG&quot;/&gt; 	&lt;field name=&quot;PRINT_FOCUS_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PRINT_DTTM_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FRZN_PAYS_EXIST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID2&quot;/&gt; 	&lt;field name=&quot;PAY_EVENT_ID&quot;/&gt; 	&lt;field name=&quot;PAY_DT&quot;/&gt; 	&lt;field name=&quot;CRE_DTTM&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;DOC_ID&quot;/&gt; 	&lt;field name=&quot;ACCT_ID_T&quot;/&gt; 	&lt;field name=&quot;PAY_EVENT_ID2&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;USER_ID2&quot;/&gt; 	&lt;field name=&quot;PAY_EVT_EXCP_FLG&quot;/&gt; 	&lt;field name=&quot;EXP_MSG&quot;/&gt; 	&lt;field name=&quot;MESSAGE_PARM1&quot;/&gt; 	&lt;field name=&quot;MESSAGE_PARM2&quot;/&gt; 	&lt;field name=&quot;MESSAGE_PARM3&quot;/&gt; 	&lt;field name=&quot;MESSAGE_PARM4&quot;/&gt; 	&lt;field name=&quot;MESSAGE_PARM5&quot;/&gt; 	&lt;field name=&quot;MESSAGE_PARM6&quot;/&gt; 	&lt;field name=&quot;MESSAGE_PARM7&quot;/&gt; 	&lt;field name=&quot;MESSAGE_PARM8&quot;/&gt; 	&lt;field name=&quot;MESSAGE_PARM9&quot;/&gt; 	&lt;field name=&quot;CALL_SEQ&quot;/&gt; 	&lt;field name=&quot;CRE_DTTM2&quot;/&gt; 	&lt;field name=&quot;REVIEW_COMP&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REVIEW_USER_ID&quot;/&gt; 	&lt;field name=&quot;REVIEW_DT&quot;/&gt; 	&lt;field name=&quot;COMMENTS&quot;/&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;ACCT_FILTER_FLG&quot;/&gt; 	&lt;field name=&quot;ENTITY_NAME&quot;/&gt; 	&lt;field name=&quot;ACCT_ID3&quot;/&gt; 	&lt;field name=&quot;RETRIEVED_FILTER&quot;/&gt; 	&lt;field name=&quot;RETRIEVED_PAY_EVENT_ID&quot;/&gt; 	&lt;field name=&quot;TENDER_INPUT_DATA_AREA_CD&quot;/&gt; 	&lt;field name=&quot;TENDER_INPUT_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;C1_CALLER_PROCESS_FLG&quot;/&gt; 	&lt;list name=&quot;TNDR_TYPE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;TENDERED_AMT&quot;&gt;${NEW_VAR}&lt;/field&gt; 			&lt;field name=&quot;TENDER_TYPE_CD&quot;&gt;G/P&lt;/field&gt; 			&lt;field name=&quot;CHECK_NBR&quot;/&gt; 			&lt;field name=&quot;MICR_ID&quot;/&gt; 			&lt;field name=&quot;ENCR_MICR_ID&quot;/&gt; 			&lt;field name=&quot;HASH_MICR_ID&quot;/&gt; 			&lt;field name=&quot;EXT_REFERENCE_ID&quot;/&gt; 			&lt;field name=&quot;CI_CM_WRK_FLD&quot;/&gt; 			&lt;field name=&quot;ALT_CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 			&lt;field name=&quot;ALT_TENDER_AMT&quot;&gt;0.00&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILPEVTP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Punkt poboru" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Wyszukiwanie" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Wyszukiwanie PP] /ouaf/search?service=CILCSPPS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="SEARCH_TYPE" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">SEARCH_TYPE</stringProp>
                    <stringProp name="Argument.value">${SEARCH_TYPE}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="SP_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">SP_ID</stringProp>
                    <stringProp name="Argument.value">${SP_ID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PREM_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">PREM_ID</stringProp>
                    <stringProp name="Argument.value">${PREM_ID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ADDRESS1" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ADDRESS1</stringProp>
                    <stringProp name="Argument.value">${ADDRESS1}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CITY" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">CITY</stringProp>
                    <stringProp name="Argument.value">${CITY}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="POSTAL" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">POSTAL</stringProp>
                    <stringProp name="Argument.value">${POSTAL}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/search?service=CILCSPPS</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Kasowanie" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Kasowanie PP] /ouaf/pageDelete?service=CILCSPPP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BUS_DT&quot;&gt;2013-02-02&lt;/field&gt;&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt;&lt;field name=&quot;SP_TYPE_CD&quot;&gt;E-RES&lt;/field&gt;&lt;field name=&quot;PREM_ID&quot;&gt;2980649523&lt;/field&gt;&lt;field name=&quot;SP_STATUS_FLG&quot;&gt;R&lt;/field&gt;&lt;field name=&quot;INSTALL_DT&quot;&gt;2013-01-01&lt;/field&gt;&lt;field name=&quot;ABOLISH_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SP_SRC_STATUS_FLG&quot;&gt;C&lt;/field&gt;&lt;field name=&quot;DISCON_LOC_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MR_CYC_CD&quot;&gt;M-D1&lt;/field&gt;&lt;field name=&quot;MR_RTE_CD&quot;&gt;1&lt;/field&gt;&lt;field name=&quot;MR_CYC_RTE_SEQ&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;MTR_LOC_CD&quot;&gt;LEFT&lt;/field&gt;&lt;field name=&quot;MTR_LOC_DETAILS&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FAC_LVL_1_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt;&lt;field name=&quot;FAC_LVL_2_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FAC_LVL_3_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;DESCRLONG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OVRD_PREM_FLD_INFO_FLG&quot;&gt;N&lt;/field&gt;&lt;field name=&quot;MR_INSTR_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MR_WARN_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;KEY_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;KEY_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OK_TO_ENTER_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;MR_INSTR_DETAILS&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SP_DATA_AREA&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SP_TYPE_CD2&quot;&gt;E-RES&lt;/field&gt;&lt;field name=&quot;SVC_TYPE_CD&quot;&gt;E&lt;/field&gt;&lt;field name=&quot;TREND_CL_CD&quot;&gt;R&lt;/field&gt;&lt;field name=&quot;SP_SUBTYPE_FLG&quot;&gt;M&lt;/field&gt;&lt;field name=&quot;FA_TYPE_PROF_CD&quot;&gt;METERED&lt;/field&gt;&lt;field name=&quot;VERSION2&quot;&gt;19&lt;/field&gt;&lt;field name=&quot;ALLOW_MR_ROUTE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;START_STOP_GEO_TYP&quot;&gt;CI_DVC&lt;/field&gt;&lt;field name=&quot;MULT_RTE_USAGE_FLG&quot;&gt;C1NA&lt;/field&gt;&lt;field name=&quot;EXT_SERV_REQ_FLG&quot;&gt;C1NO&lt;/field&gt;&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt;&lt;field name=&quot;DESCR&quot;&gt;En. elektryczna - indywidualny&lt;/field&gt;&lt;field name=&quot;SP_INFO&quot;&gt;En. elektryczna - indywidualny/Monthly cycle - day 1/Route 1/JMETER Adres46240, 11-111, Mieszkanie&lt;/field&gt;&lt;field name=&quot;PREM_INFO&quot;&gt;JMETER Adres46240, 11-111, Mieszkanie&lt;/field&gt;&lt;field name=&quot;MR_CYC_INFO&quot;&gt;Monthly cycle - day 1&lt;/field&gt;&lt;field name=&quot;LOCATION_INFO&quot;&gt;Left side of house&lt;/field&gt;&lt;field name=&quot;FAC_LVL_NAME_1&quot;&gt;Podstacja&lt;/field&gt;&lt;field name=&quot;FAC_LVL_NAME_2&quot;&gt;Feeder&lt;/field&gt;&lt;field name=&quot;FAC_LVL_NAME_3&quot;&gt;Transformator&lt;/field&gt;&lt;field name=&quot;SP_SUBTYPE_FLG_DESCR&quot;&gt;Licznik&lt;/field&gt;&lt;field name=&quot;SVC_TYPE_DESCR&quot;&gt;Energia elektryczna&lt;/field&gt;&lt;field name=&quot;MR_RTE_DESCR&quot;&gt;Route 1&lt;/field&gt;&lt;field name=&quot;TREND_CL_DESCR&quot;&gt;Mieszkaniowy&lt;/field&gt;&lt;field name=&quot;SP_TYPE_DESC&quot;&gt;En. elektryczna - indywidualny&lt;/field&gt;&lt;field name=&quot;FAC_LVL_1_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FAC_LVL_2_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FAC_LVL_3_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PREM_SVC_TYP_CHNGE_SW&quot;&gt;N&lt;/field&gt;&lt;field name=&quot;MULT_RTE_USAGE&quot;&gt;C1NA&lt;/field&gt;&lt;field name=&quot;PR_MR_INSTR_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PR_MR_WARN_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;KEY_SW_WRK&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PR_KEY_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OK_TO_ENTER_SW_WRK&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PR_MR_INSTR_DETAILS&quot;&gt;&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageDelete?service=CILCSPPP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisywanie Punktu Poboru" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie Punktu Poboru] /ouaf/pageAdd?service=CILCSPPP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;BUS_DT&quot;&gt;2014-01-07&lt;/field&gt; 	&lt;field name=&quot;SP_ID&quot;/&gt; 	&lt;field name=&quot;SP_TYPE_CD&quot;&gt;${SP_TYPE_CD}&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;SP_STATUS_FLG&quot;&gt;${SP_STATUS_FLG}&lt;/field&gt; 	&lt;field name=&quot;INSTALL_DT&quot;&gt;${INSTALL_DT}&lt;/field&gt; 	&lt;field name=&quot;ABOLISH_DT&quot;/&gt; 	&lt;field name=&quot;SP_SRC_STATUS_FLG&quot;&gt;${SP_SRC_STATUS_FLG}&lt;/field&gt; 	&lt;field name=&quot;DISCON_LOC_CD&quot;/&gt; 	&lt;field name=&quot;MR_CYC_CD&quot;&gt;${MR_CYC_CD}&lt;/field&gt; 	&lt;field name=&quot;MR_RTE_CD&quot;/&gt; 	&lt;field name=&quot;MR_CYC_RTE_SEQ&quot;/&gt; 	&lt;field name=&quot;MTR_LOC_CD&quot;/&gt; 	&lt;field name=&quot;MTR_LOC_DETAILS&quot;/&gt; 	&lt;field name=&quot;FAC_LVL_1_CD&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;FAC_LVL_2_CD&quot;/&gt; 	&lt;field name=&quot;FAC_LVL_3_CD&quot;/&gt; 	&lt;field name=&quot;DESCRLONG&quot;/&gt; 	&lt;field name=&quot;OVRD_PREM_FLD_INFO_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;MR_INSTR_CD&quot;/&gt; 	&lt;field name=&quot;MR_WARN_CD&quot;/&gt; 	&lt;field name=&quot;KEY_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;KEY_ID&quot;/&gt; 	&lt;field name=&quot;OK_TO_ENTER_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;MR_INSTR_DETAILS&quot;/&gt; 	&lt;field name=&quot;SP_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;SP_TYPE_CD2&quot;/&gt; 	&lt;field name=&quot;SVC_TYPE_CD&quot;&gt;E&lt;/field&gt; 	&lt;field name=&quot;TREND_CL_CD&quot;/&gt; 	&lt;field name=&quot;SP_SUBTYPE_FLG&quot;&gt;M&lt;/field&gt; 	&lt;field name=&quot;FA_TYPE_PROF_CD&quot;/&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;ALLOW_MR_ROUTE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;START_STOP_GEO_TYP&quot;/&gt; 	&lt;field name=&quot;MULT_RTE_USAGE_FLG&quot;/&gt; 	&lt;field name=&quot;EXT_SERV_REQ_FLG&quot;&gt;C1NO&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;/&gt; 	&lt;field name=&quot;SP_INFO&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;&gt;Worska 25, 13-467 Marinos70944, Obiekt biurowy, 7246080841&lt;/field&gt; 	&lt;field name=&quot;MR_CYC_INFO&quot;&gt;Miesięczny koniec miesiąca&lt;/field&gt; 	&lt;field name=&quot;LOCATION_INFO&quot;/&gt; 	&lt;field name=&quot;FAC_LVL_NAME_1&quot;/&gt; 	&lt;field name=&quot;FAC_LVL_NAME_2&quot;/&gt; 	&lt;field name=&quot;FAC_LVL_NAME_3&quot;/&gt; 	&lt;field name=&quot;SP_SUBTYPE_FLG_DESCR&quot;&gt;Licznik&lt;/field&gt; 	&lt;field name=&quot;SVC_TYPE_DESCR&quot;&gt;Energia elektryczna&lt;/field&gt; 	&lt;field name=&quot;MR_RTE_DESCR&quot;/&gt; 	&lt;field name=&quot;TREND_CL_DESCR&quot;&gt;Profil zużycia TPA&lt;/field&gt; 	&lt;field name=&quot;SP_TYPE_DESC&quot;&gt;EE-TPA&lt;/field&gt; 	&lt;field name=&quot;FAC_LVL_1_DESCR&quot;/&gt; 	&lt;field name=&quot;FAC_LVL_2_DESCR&quot;/&gt; 	&lt;field name=&quot;FAC_LVL_3_DESCR&quot;/&gt; 	&lt;field name=&quot;PREM_SVC_TYP_CHNGE_SW&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;MULT_RTE_USAGE&quot;&gt;C1NA&lt;/field&gt; 	&lt;field name=&quot;PR_MR_INSTR_CD&quot;/&gt; 	&lt;field name=&quot;PR_MR_WARN_CD&quot;/&gt; 	&lt;field name=&quot;KEY_SW_WRK&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PR_KEY_ID&quot;/&gt; 	&lt;field name=&quot;OK_TO_ENTER_SW_WRK&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PR_MR_INSTR_DETAILS&quot;/&gt; 	&lt;list name=&quot;SP_CHAR&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SORT_SEQ&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;LAST_CHAR_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;LAST_EFFDT&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD01}&lt;/field&gt; 			&lt;field name=&quot;EFFDT&quot;&gt;${EFFDT}&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;&gt;${ADHOC_CHAR_VAL01}${GenUniquePPE}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SORT_SEQ&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;ADV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;Kod PPE&lt;/field&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD02}&lt;/field&gt; 			&lt;field name=&quot;EFFDT&quot;&gt;${EFFDT}&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL&quot;&gt;${CHAR_VAL01}&lt;/field&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SORT_SEQ&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;DFV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;&gt;ENEA Operator&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;OSD&lt;/field&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD03}&lt;/field&gt; 			&lt;field name=&quot;EFFDT&quot;&gt;${EFFDT}&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL&quot;&gt;${CHAR_VAL02}&lt;/field&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SORT_SEQ&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;DFV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;&gt;Kołobrzeg&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;Rejon obsługi klienta&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCSPPP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SP_ID" enabled="true">
                <stringProp name="TestPlan.comments">SP_ID - id punktu poboru</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SP_ID</stringProp>
                <stringProp name="RegexExtractor.regex">SP_ID&quot;:&quot;(.*)&quot;,&quot;SP_TYPE_CD&quot;:&quot;E</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak SP_ID (id punktu poboru)</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SP_INFO" enabled="true">
                <stringProp name="TestPlan.comments">SP_INFO -  info punktu poboru</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SP_INFO</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;SP_INFO&quot;:&quot;(.*)&quot;,&quot;PREM_INFO&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak SP_INFO (id punktu poboru)</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ADHOC_CHAR_VAL_MR_01" enabled="true">
                <stringProp name="TestPlan.comments">KOD PPE - wartość ch-ki KOD PPE</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ADHOC_CHAR_VAL_MR_01</stringProp>
                <stringProp name="RegexExtractor.regex">ADHOC_CHAR_VAL&quot;:&quot;(\w*)</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak ADHOC_CHAR_VAL_MR_01</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1395446965">resultCode.:...,..pageBody.: {.DEFAULT_FOR_FLG</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>false</time>
                    <latency>false</latency>
                    <timestamp>false</timestamp>
                    <success>false</success>
                    <label>false</label>
                    <code>false</code>
                    <message>false</message>
                    <threadName>false</threadName>
                    <dataType>false</dataType>
                    <encoding>false</encoding>
                    <assertions>false</assertions>
                    <subresults>false</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                  </value>
                </objProp>
                <stringProp name="filename">SP_ID/Test_${__time(YMDHMS)}.csv</stringProp>
              </ResultCollector>
              <hashTree/>
              <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
              </GaussianRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Licznik" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisywanie" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie Licznika] ouaf/pageAdd?service=CILMMTRP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;MTR_INFO&quot;/&gt; 	&lt;field name=&quot;TRACK_LOC_FLG&quot;&gt;NTRK&lt;/field&gt; 	&lt;field name=&quot;INSTALL_DTTM&quot;/&gt; 	&lt;field name=&quot;REMOVAL_DTTM&quot;/&gt; 	&lt;field name=&quot;BUS_DT&quot;&gt;2013-12-13&lt;/field&gt; 	&lt;field name=&quot;BUS_DTTM&quot;&gt;2013-12-13-12.51.10&lt;/field&gt; 	&lt;field name=&quot;SP_ID&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;SP_INFO&quot;/&gt; 	&lt;field name=&quot;MTR_ID&quot;/&gt; 	&lt;field name=&quot;BADGE_NBR&quot;&gt;${BADGE_NBR}&lt;/field&gt; 	&lt;field name=&quot;MTR_TYPE_CD&quot;&gt;${MTR_TYPE_CD}&lt;/field&gt; 	&lt;field name=&quot;MTR_STATUS_FLG&quot;&gt;${MTR_STATUS_FLG}&lt;/field&gt; 	&lt;field name=&quot;MFG_CD&quot;&gt;${MFG_CD}&lt;/field&gt; 	&lt;field name=&quot;MODEL_CD&quot;&gt;${MODEL_CD}&lt;/field&gt; 	&lt;field name=&quot;SERIAL_NBR&quot;/&gt; 	&lt;field name=&quot;RECEIVE_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;RETIRE_DT&quot;/&gt; 	&lt;field name=&quot;DESCRLONG&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MTR_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;RETIRE_RSN_CD&quot;/&gt; 	&lt;field name=&quot;SVC_TYPE_CD&quot;&gt;E&lt;/field&gt; 	&lt;field name=&quot;MODEL_CD_DESCR&quot;&gt;Nie dotyczy&lt;/field&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ignoreWarnings</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILMMTRP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_ID" enabled="true">
                <stringProp name="TestPlan.comments">id licznika</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">MTR_ID</stringProp>
                <stringProp name="RegexExtractor.regex">MTR_ID&quot;:&quot;(.*)&quot;,&quot;BADGE_NBR</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak MTR_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_INFO" enabled="true">
                <stringProp name="TestPlan.comments">id licznika</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">MTR_INFO</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;,&quot;MTR_INFO&quot;:&quot;(.*)&quot;,&quot;TRACK_LOC_FLG&quot;:</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak MTR_INFO</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_INFO" enabled="true">
                <stringProp name="TestPlan.comments">id conf licz</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">MTR_CONFIG_INFO</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;MTR_CONFIG_INFO&quot;:&quot;.*&quot;,&quot;CONTROLLER_SW&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak MTR_CONFIG_INFO</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
              </GaussianRandomTimer>
              <hashTree/>
            </hashTree>
            <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Dodaję licznik do bazy" enabled="false">
              <stringProp name="dataSource">tst_energa</stringProp>
              <stringProp name="queryType">Prepared Update Statement</stringProp>
              <stringProp name="query">insert into MTR values (${MTR_ID},&apos;${BADGE_NBR}&apos;,&apos;${MTR_TYPE_CD}&apos;,&apos;${MTR_STATUS_FLG}&apos;,&apos;${RECEIVE_DT}&apos;,&apos;${MFG_CD}&apos;,&apos;${MODEL_CD}&apos;);</stringProp>
              <stringProp name="queryArguments"></stringProp>
              <stringProp name="queryArgumentsTypes"></stringProp>
              <stringProp name="variableNames"></stringProp>
              <stringProp name="resultVariable"></stringProp>
              <stringProp name="queryTimeout"></stringProp>
            </JDBCSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Wyszukiwanie licznika" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Wyszukiwanie Licznika/ouaf/search?service=CILMMTRS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="BADGE_NBR" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">BADGE_NBR</stringProp>
                    <stringProp name="Argument.value">${BADGE_NBR}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="SERIAL_NBR" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${SERIAL_NBR}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">SERIAL_NBR</stringProp>
                  </elementProp>
                  <elementProp name="MTR_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">MTR_ID</stringProp>
                    <stringProp name="Argument.value">${MTR_ID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="SEARCH_TYPE" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">SEARCH_TYPE</stringProp>
                    <stringProp name="Argument.value">${SEARCH_TYPE}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="MTR_CONFIG_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">MTR_CONFIG_ID</stringProp>
                    <stringProp name="Argument.value">${MTR_CONFIG_ID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="MTR_TYPE_CD" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${MTR_TYPE_CD}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">MTR_TYPE_CD</stringProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/search?service=CILMMTRS</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_ID" enabled="true">
                <stringProp name="TestPlan.comments">id licznika</stringProp>
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">MTR_ID</stringProp>
                <stringProp name="RegexExtractor.regex">MTR_ID&quot;:&quot;(.*)&quot;,&quot;BADGE_NBR</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak MTR_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">MTR_CONFIG_ID</stringProp>
                <stringProp name="RegexExtractor.regex">false,&quot;MTR_CONFIG_ID&quot;:&quot;(.*)&quot;,&quot;MTR_ID&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak MTR_CONFIG_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Usuwanie licznika" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Usuwanie licznika] /ouaf/pageDelete?service=CILMMTRP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MTR_INFO&quot;&gt;Electric - simple kWh / kon_test10 /Aktywny&lt;/field&gt;&lt;field name=&quot;TRACK_LOC_FLG&quot;&gt;NTRK&lt;/field&gt;&lt;field name=&quot;INSTALL_DTTM&quot;&gt;&lt;/field&gt;&lt;field name=&quot;REMOVAL_DTTM&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BUS_DT&quot;&gt;2013-08-05&lt;/field&gt;&lt;field name=&quot;BUS_DTTM&quot;&gt;2013-08-05-08.51.02&lt;/field&gt;&lt;field name=&quot;SP_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PREM_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SP_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MTR_ID&quot;&gt;${MTR_ID}&lt;/field&gt;&lt;field name=&quot;BADGE_NBR&quot;&gt;kon_test10&lt;/field&gt;&lt;field name=&quot;MTR_TYPE_CD&quot;&gt;E-SIMPLE&lt;/field&gt;&lt;field name=&quot;MTR_STATUS_FLG&quot;&gt;A&lt;/field&gt;&lt;field name=&quot;MFG_CD&quot;&gt;GE&lt;/field&gt;&lt;field name=&quot;MODEL_CD&quot;&gt;E-1&lt;/field&gt;&lt;field name=&quot;SERIAL_NBR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RECEIVE_DT&quot;&gt;2013-01-01&lt;/field&gt;&lt;field name=&quot;RETIRE_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;DESCRLONG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt;&lt;field name=&quot;MTR_DATA_AREA&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RETIRE_RSN_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SVC_TYPE_CD&quot;&gt;E&lt;/field&gt;&lt;field name=&quot;MODEL_CD_DESCR&quot;&gt;GE high voltage&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageDelete?service=CILMMTRP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Konfiguracja licznika" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisywanie konfiguracji licznika C21" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie konfiguracji licznika C21] /ouaf/pageAdd?service=CILMMTGP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MTR_INFO&quot;&gt;Licznik energii elektrycznej TPA / KClicz /Aktywny&lt;/field&gt;&lt;field name=&quot;MTR_CONFIG_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CONTROLLER_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;VAL_DATA_SET_SW&quot;&gt;&lt;/field&gt;&lt;field name=&quot;VAL_MTR_CONFIG_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OLD_DELETE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MR_EXIST_SW&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MTR_ID&quot;&gt;${MTR_ID}&lt;/field&gt;&lt;field name=&quot;EFF_DTTM&quot;&gt;${EFF_DTTM}&lt;/field&gt;&lt;field name=&quot;MTR_CONFIG_TY_CD&quot;&gt;${MTR_CONFIG_TY_CD}&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MTR_CFG_DATA_AREA&quot;&gt;&lt;/field&gt;&lt;field name=&quot;DESCR&quot;&gt;${DESCR}&lt;/field&gt;&lt;field name=&quot;MTR_ID2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BADGE_NBR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MTR_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MTR_STATUS_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MFG_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MODEL_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SERIAL_NBR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RECEIVE_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RETIRE_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;DESCRLONG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;VERSION2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MTR_DATA_AREA&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RETIRE_RSN_CD&quot;&gt;&lt;/field&gt;&lt;list name=&quot;REG&quot;&gt;&lt;listHeader&gt;&lt;field name=&quot;MTR_ID&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;A&quot;&gt;&lt;field name=&quot;REG_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MTR_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;EFF_DTTM&quot;&gt;&lt;/field&gt;&lt;field name=&quot;READ_SEQ&quot;&gt;${READ_SEQ}&lt;/field&gt;&lt;field name=&quot;UOM_CD&quot;&gt;${UOM_CD}&lt;/field&gt;&lt;field name=&quot;TOU_CD&quot;&gt;${TOU_CD}&lt;/field&gt;&lt;field name=&quot;REG_CONST&quot;&gt;${REG_CONST}&lt;/field&gt;&lt;field name=&quot;CONSUM_SUB_FLG&quot;&gt;${CONSUM_SUB_FLG}&lt;/field&gt;&lt;field name=&quot;HOW_TO_USE_FLG&quot;&gt;${HOW_TO_USE_FLG}&lt;/field&gt;&lt;field name=&quot;NBR_OF_DGTS_LFT&quot;&gt;${NBR_OF_DGTS_LFT}&lt;/field&gt;&lt;field name=&quot;NBR_OF_DGTS_RGT&quot;&gt;${NBR_OF_DGTS_RGT}&lt;/field&gt;&lt;field name=&quot;FULL_SCALE&quot;&gt;${FULL_SCALE}&lt;/field&gt;&lt;field name=&quot;READ_OUT_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PROTOCOL_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;TOLERANCE&quot;&gt;${TOLERANCE}&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;VIRTUAL_CHAN_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;INTV_REG_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;UOM_DESCR&quot;&gt;Kilowatogodzina kWh&lt;/field&gt;&lt;field name=&quot;TOU_DESCR&quot;&gt;Całodobowa&lt;/field&gt;&lt;field name=&quot;PROTOCOL_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;READ_OUT_TYPE_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;INTV_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;INTERVAL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;REG_TYPE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;REG_INFO&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILMMTGP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ccbtst01.grupaenerga-ivmx.pl:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">MTR_CONFIG_ID</stringProp>
                <stringProp name="RegexExtractor.regex">false,&quot;MTR_CONFIG_ID&quot;:&quot;(.+?)&quot;,&quot;MTR_ID&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak MTR_CONFIG_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">REG_ID</stringProp>
                <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(.*)&quot;,&quot;MTR_ID&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$ </stringProp>
                <stringProp name="RegexExtractor.default">brak REG_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_INFO" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">MTR_CONFIG_INFO</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;MTR_CONFIG_INFO&quot;:&quot;(.*)&quot;,&quot;CONTROLLER_SW</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak MTR_CONFIG_INFO</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
              </GaussianRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisywanie konfiguracji licznika C22B" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie konfiguracji licznika C22B] /ouaf/pageAdd?service=CILMMTGP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;MTR_INFO&quot;&gt;Licznik energii elektrycznej TPA / Brak etykiety /Aktywny&lt;/field&gt; 	&lt;field name=&quot;MTR_CONFIG_INFO&quot;/&gt; 	&lt;field name=&quot;CONTROLLER_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;VAL_DATA_SET_SW&quot;/&gt; 	&lt;field name=&quot;VAL_MTR_CONFIG_ID&quot;/&gt; 	&lt;field name=&quot;OLD_DELETE&quot;/&gt; 	&lt;field name=&quot;MR_EXIST_SW&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_ID&quot;/&gt; 	&lt;field name=&quot;MTR_ID&quot;&gt;${MTR_ID}&lt;/field&gt; 	&lt;field name=&quot;EFF_DTTM&quot;&gt;${EFF_DTTM}&lt;/field&gt; 	&lt;field name=&quot;MTR_CONFIG_TY_CD&quot;&gt;${MTR_CONFIG_TY_CD}&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;/&gt; 	&lt;field name=&quot;MTR_CFG_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;DESCR&quot;&gt;${DESCR}&lt;/field&gt; 	&lt;field name=&quot;MTR_ID2&quot;/&gt; 	&lt;field name=&quot;BADGE_NBR&quot;/&gt; 	&lt;field name=&quot;MTR_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;MTR_STATUS_FLG&quot;/&gt; 	&lt;field name=&quot;MFG_CD&quot;/&gt; 	&lt;field name=&quot;MODEL_CD&quot;/&gt; 	&lt;field name=&quot;SERIAL_NBR&quot;/&gt; 	&lt;field name=&quot;RECEIVE_DT&quot;/&gt; 	&lt;field name=&quot;RETIRE_DT&quot;/&gt; 	&lt;field name=&quot;DESCRLONG&quot;/&gt; 	&lt;field name=&quot;VERSION2&quot;/&gt; 	&lt;field name=&quot;MTR_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;RETIRE_RSN_CD&quot;/&gt; 	&lt;list name=&quot;REG&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;MTR_ID&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_ID&quot;/&gt; 			&lt;field name=&quot;MTR_ID&quot;/&gt; 			&lt;field name=&quot;EFF_DTTM&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;${READ_SEQ}&lt;/field&gt; 			&lt;field name=&quot;UOM_CD&quot;&gt;${UOM_CD}&lt;/field&gt; 			&lt;field name=&quot;TOU_CD&quot;&gt;${TOU_CD}&lt;/field&gt; 			&lt;field name=&quot;REG_CONST&quot;&gt;${REG_CONST}&lt;/field&gt; 			&lt;field name=&quot;CONSUM_SUB_FLG&quot;&gt;${CONSUM_SUB_FLG}&lt;/field&gt; 			&lt;field name=&quot;HOW_TO_USE_FLG&quot;&gt;${HOW_TO_USE_FLG}&lt;/field&gt; 			&lt;field name=&quot;NBR_OF_DGTS_LFT&quot;&gt;${NBR_OF_DGTS_LFT}&lt;/field&gt; 			&lt;field name=&quot;NBR_OF_DGTS_RGT&quot;&gt;${NBR_OF_DGTS_RGT}&lt;/field&gt; 			&lt;field name=&quot;FULL_SCALE&quot;&gt;${FULL_SCALE}&lt;/field&gt; 			&lt;field name=&quot;READ_OUT_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;PROTOCOL_CD&quot;/&gt; 			&lt;field name=&quot;TOLERANCE&quot;&gt;${TOLERANCE}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;VIRTUAL_CHAN_ID&quot;/&gt; 			&lt;field name=&quot;INTV_REG_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;UOM_DESCR&quot;&gt;Kilowatogodzina kWh&lt;/field&gt; 			&lt;field name=&quot;TOU_DESCR&quot;&gt;Dzień&lt;/field&gt; 			&lt;field name=&quot;PROTOCOL_DESCR&quot;/&gt; 			&lt;field name=&quot;READ_OUT_TYPE_DESCR&quot;/&gt; 			&lt;field name=&quot;INTV_DESCR&quot;/&gt; 			&lt;field name=&quot;INTERVAL_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;REG_TYPE&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;/&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_ID&quot;/&gt; 			&lt;field name=&quot;MTR_ID&quot;/&gt; 			&lt;field name=&quot;EFF_DTTM&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;${READ_SEQ2}&lt;/field&gt; 			&lt;field name=&quot;UOM_CD&quot;&gt;${UOM_CD}&lt;/field&gt; 			&lt;field name=&quot;TOU_CD&quot;&gt;${TOU_CD2}&lt;/field&gt; 			&lt;field name=&quot;REG_CONST&quot;&gt;${REG_CONST}&lt;/field&gt; 			&lt;field name=&quot;CONSUM_SUB_FLG&quot;&gt;${CONSUM_SUB_FLG}&lt;/field&gt; 			&lt;field name=&quot;HOW_TO_USE_FLG&quot;&gt;${HOW_TO_USE_FLG}&lt;/field&gt; 			&lt;field name=&quot;NBR_OF_DGTS_LFT&quot;&gt;${NBR_OF_DGTS_LFT}&lt;/field&gt; 			&lt;field name=&quot;NBR_OF_DGTS_RGT&quot;&gt;${NBR_OF_DGTS_RGT}&lt;/field&gt; 			&lt;field name=&quot;FULL_SCALE&quot;&gt;${FULL_SCALE}&lt;/field&gt; 			&lt;field name=&quot;READ_OUT_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;PROTOCOL_CD&quot;/&gt; 			&lt;field name=&quot;TOLERANCE&quot;&gt;${TOLERANCE}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;VIRTUAL_CHAN_ID&quot;/&gt; 			&lt;field name=&quot;INTV_REG_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;UOM_DESCR&quot;&gt;Kilowatogodzina kWh&lt;/field&gt; 			&lt;field name=&quot;TOU_DESCR&quot;&gt;Noc&lt;/field&gt; 			&lt;field name=&quot;PROTOCOL_DESCR&quot;/&gt; 			&lt;field name=&quot;READ_OUT_TYPE_DESCR&quot;/&gt; 			&lt;field name=&quot;INTV_DESCR&quot;/&gt; 			&lt;field name=&quot;INTERVAL_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;REG_TYPE&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILMMTGP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ccbtst01.grupaenerga-ivmx.pl:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">MTR_CONFIG_ID</stringProp>
                <stringProp name="RegexExtractor.regex">MTR_CONFIG_ID&quot;:&quot;(\d+)&quot;,&quot;MTR_ID&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak MTR_CONFIG_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">REG_ID</stringProp>
                <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(\d+)&quot;,&quot;MTR_ID</stringProp>
                <stringProp name="RegexExtractor.template">$1$ </stringProp>
                <stringProp name="RegexExtractor.default">brak REG_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID2" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">REG_ID2</stringProp>
                <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(\d+)&quot;,&quot;MTR_ID</stringProp>
                <stringProp name="RegexExtractor.template">$1$ </stringProp>
                <stringProp name="RegexExtractor.default">brak REG_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">2</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_INFO" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">MTR_CONFIG_INFO</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;MTR_CONFIG_INFO&quot;:&quot;(.*)&quot;,&quot;CONTROLLER_SW</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak MTR_CONFIG_INFO</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">test</stringProp>
                <stringProp name="RegexExtractor.regex">TR_ID&quot;:&quot;(.*)&quot;,&quot;EFF_DTT</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">tst2</stringProp>
                <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(\d+)&quot;,&quot;MTR_ID&quot;:&quot;(.*)&quot;,&quot;EFF_DTTM&quot;.&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">nie ma</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
              </GaussianRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisywanie konfiguracji licznika C22A" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie konfiguracji licznika C22A] /ouaf/pageAdd?service=CILMMTGP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;MTR_INFO&quot;&gt;Licznik energii elektrycznej TPA / Brak etykiety /Aktywny&lt;/field&gt; 	&lt;field name=&quot;MTR_CONFIG_INFO&quot;/&gt; 	&lt;field name=&quot;CONTROLLER_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;VAL_DATA_SET_SW&quot;/&gt; 	&lt;field name=&quot;VAL_MTR_CONFIG_ID&quot;/&gt; 	&lt;field name=&quot;OLD_DELETE&quot;/&gt; 	&lt;field name=&quot;MR_EXIST_SW&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_ID&quot;/&gt; 	&lt;field name=&quot;MTR_ID&quot;&gt;${MTR_ID}&lt;/field&gt; 	&lt;field name=&quot;EFF_DTTM&quot;&gt;${EFF_DTTM}&lt;/field&gt; 	&lt;field name=&quot;MTR_CONFIG_TY_CD&quot;&gt;${MTR_CONFIG_TY_CD}&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;/&gt; 	&lt;field name=&quot;MTR_CFG_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;DESCR&quot;&gt;${DESCR}&lt;/field&gt; 	&lt;field name=&quot;MTR_ID2&quot;/&gt; 	&lt;field name=&quot;BADGE_NBR&quot;/&gt; 	&lt;field name=&quot;MTR_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;MTR_STATUS_FLG&quot;/&gt; 	&lt;field name=&quot;MFG_CD&quot;/&gt; 	&lt;field name=&quot;MODEL_CD&quot;/&gt; 	&lt;field name=&quot;SERIAL_NBR&quot;/&gt; 	&lt;field name=&quot;RECEIVE_DT&quot;/&gt; 	&lt;field name=&quot;RETIRE_DT&quot;/&gt; 	&lt;field name=&quot;DESCRLONG&quot;/&gt; 	&lt;field name=&quot;VERSION2&quot;/&gt; 	&lt;field name=&quot;MTR_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;RETIRE_RSN_CD&quot;/&gt; 	&lt;list name=&quot;REG&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;MTR_ID&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_ID&quot;/&gt; 			&lt;field name=&quot;MTR_ID&quot;/&gt; 			&lt;field name=&quot;EFF_DTTM&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;${READ_SEQ}&lt;/field&gt; 			&lt;field name=&quot;UOM_CD&quot;&gt;${UOM_CD}&lt;/field&gt; 			&lt;field name=&quot;TOU_CD&quot;&gt;${TOU_CD}&lt;/field&gt; 			&lt;field name=&quot;REG_CONST&quot;&gt;${REG_CONST}&lt;/field&gt; 			&lt;field name=&quot;CONSUM_SUB_FLG&quot;&gt;${CONSUM_SUB_FLG}&lt;/field&gt; 			&lt;field name=&quot;HOW_TO_USE_FLG&quot;&gt;${HOW_TO_USE_FLG}&lt;/field&gt; 			&lt;field name=&quot;NBR_OF_DGTS_LFT&quot;&gt;${NBR_OF_DGTS_LFT}&lt;/field&gt; 			&lt;field name=&quot;NBR_OF_DGTS_RGT&quot;&gt;${NBR_OF_DGTS_RGT}&lt;/field&gt; 			&lt;field name=&quot;FULL_SCALE&quot;&gt;${FULL_SCALE}&lt;/field&gt; 			&lt;field name=&quot;READ_OUT_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;PROTOCOL_CD&quot;/&gt; 			&lt;field name=&quot;TOLERANCE&quot;&gt;${TOLERANCE}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;VIRTUAL_CHAN_ID&quot;/&gt; 			&lt;field name=&quot;INTV_REG_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;UOM_DESCR&quot;&gt;Kilowatogodzina kWh&lt;/field&gt; 			&lt;field name=&quot;TOU_DESCR&quot;&gt;Pozaszczyt&lt;/field&gt; 			&lt;field name=&quot;PROTOCOL_DESCR&quot;/&gt; 			&lt;field name=&quot;READ_OUT_TYPE_DESCR&quot;/&gt; 			&lt;field name=&quot;INTV_DESCR&quot;/&gt; 			&lt;field name=&quot;INTERVAL_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;REG_TYPE&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;/&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_ID&quot;/&gt; 			&lt;field name=&quot;MTR_ID&quot;/&gt; 			&lt;field name=&quot;EFF_DTTM&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;${READ_SEQ2}&lt;/field&gt; 			&lt;field name=&quot;UOM_CD&quot;&gt;${UOM_CD}&lt;/field&gt; 			&lt;field name=&quot;TOU_CD&quot;&gt;${TOU_CD2}&lt;/field&gt; 			&lt;field name=&quot;REG_CONST&quot;&gt;${REG_CONST}&lt;/field&gt; 			&lt;field name=&quot;CONSUM_SUB_FLG&quot;&gt;${CONSUM_SUB_FLG}&lt;/field&gt; 			&lt;field name=&quot;HOW_TO_USE_FLG&quot;&gt;${HOW_TO_USE_FLG}&lt;/field&gt; 			&lt;field name=&quot;NBR_OF_DGTS_LFT&quot;&gt;${NBR_OF_DGTS_LFT}&lt;/field&gt; 			&lt;field name=&quot;NBR_OF_DGTS_RGT&quot;&gt;${NBR_OF_DGTS_RGT}&lt;/field&gt; 			&lt;field name=&quot;FULL_SCALE&quot;&gt;${FULL_SCALE}&lt;/field&gt; 			&lt;field name=&quot;READ_OUT_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;PROTOCOL_CD&quot;/&gt; 			&lt;field name=&quot;TOLERANCE&quot;&gt;${TOLERANCE}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;VIRTUAL_CHAN_ID&quot;/&gt; 			&lt;field name=&quot;INTV_REG_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;UOM_DESCR&quot;&gt;Kilowatogodzina kWh&lt;/field&gt; 			&lt;field name=&quot;TOU_DESCR&quot;&gt;Szczyt&lt;/field&gt; 			&lt;field name=&quot;PROTOCOL_DESCR&quot;/&gt; 			&lt;field name=&quot;READ_OUT_TYPE_DESCR&quot;/&gt; 			&lt;field name=&quot;INTV_DESCR&quot;/&gt; 			&lt;field name=&quot;INTERVAL_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;REG_TYPE&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILMMTGP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ccbtst01.grupaenerga-ivmx.pl:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">MTR_CONFIG_ID</stringProp>
                <stringProp name="RegexExtractor.regex">MTR_CONFIG_ID&quot;:&quot;(\d+)&quot;,&quot;MTR_ID&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak MTR_CONFIG_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">REG_ID</stringProp>
                <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(\d+)&quot;,&quot;MTR_ID</stringProp>
                <stringProp name="RegexExtractor.template">$1$ </stringProp>
                <stringProp name="RegexExtractor.default">brak REG_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID2" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">REG_ID2</stringProp>
                <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(\d+)&quot;,&quot;MTR_ID</stringProp>
                <stringProp name="RegexExtractor.template">$1$ </stringProp>
                <stringProp name="RegexExtractor.default">brak REG_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">2</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_INFO" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">MTR_CONFIG_INFO</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;MTR_CONFIG_INFO&quot;:&quot;(.*)&quot;,&quot;CONTROLLER_SW</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak MTR_CONFIG_INFO</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">test</stringProp>
                <stringProp name="RegexExtractor.regex">TR_ID&quot;:&quot;(.*)&quot;,&quot;EFF_DTT</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="false">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">tst2</stringProp>
                <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(\d+)&quot;,&quot;MTR_ID&quot;:&quot;(.*)&quot;,&quot;EFF_DTTM&quot;.&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">nie ma</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
              </GaussianRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisywanie konfiguracji licznika C23" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie konfiguracji licznika C23] /ouaf/pageAdd?service=CILMMTGP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;MTR_INFO&quot;&gt;Licznik energii elektrycznej TPA / Brak etykiety /Aktywny&lt;/field&gt; 	&lt;field name=&quot;MTR_CONFIG_INFO&quot;/&gt; 	&lt;field name=&quot;CONTROLLER_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;VAL_DATA_SET_SW&quot;/&gt; 	&lt;field name=&quot;VAL_MTR_CONFIG_ID&quot;/&gt; 	&lt;field name=&quot;OLD_DELETE&quot;/&gt; 	&lt;field name=&quot;MR_EXIST_SW&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_ID&quot;/&gt; 	&lt;field name=&quot;MTR_ID&quot;&gt;${MTR_ID}&lt;/field&gt; 	&lt;field name=&quot;EFF_DTTM&quot;&gt;${EFF_DTTM}&lt;/field&gt; 	&lt;field name=&quot;MTR_CONFIG_TY_CD&quot;&gt;${MTR_CONFIG_TY_CD}&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;/&gt; 	&lt;field name=&quot;MTR_CFG_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;DESCR&quot;&gt;${DESCR}&lt;/field&gt; 	&lt;field name=&quot;MTR_ID2&quot;/&gt; 	&lt;field name=&quot;BADGE_NBR&quot;/&gt; 	&lt;field name=&quot;MTR_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;MTR_STATUS_FLG&quot;/&gt; 	&lt;field name=&quot;MFG_CD&quot;/&gt; 	&lt;field name=&quot;MODEL_CD&quot;/&gt; 	&lt;field name=&quot;SERIAL_NBR&quot;/&gt; 	&lt;field name=&quot;RECEIVE_DT&quot;/&gt; 	&lt;field name=&quot;RETIRE_DT&quot;/&gt; 	&lt;field name=&quot;DESCRLONG&quot;/&gt; 	&lt;field name=&quot;VERSION2&quot;/&gt; 	&lt;field name=&quot;MTR_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;RETIRE_RSN_CD&quot;/&gt; 	&lt;list name=&quot;REG&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;MTR_ID&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_ID&quot;/&gt; 			&lt;field name=&quot;MTR_ID&quot;/&gt; 			&lt;field name=&quot;EFF_DTTM&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;${READ_SEQ}&lt;/field&gt; 			&lt;field name=&quot;UOM_CD&quot;&gt;${UOM_CD}&lt;/field&gt; 			&lt;field name=&quot;TOU_CD&quot;&gt;${TOU_CD}&lt;/field&gt; 			&lt;field name=&quot;REG_CONST&quot;&gt;${REG_CONST}&lt;/field&gt; 			&lt;field name=&quot;CONSUM_SUB_FLG&quot;&gt;${CONSUM_SUB_FLG}&lt;/field&gt; 			&lt;field name=&quot;HOW_TO_USE_FLG&quot;&gt;${HOW_TO_USE_FLG}&lt;/field&gt; 			&lt;field name=&quot;NBR_OF_DGTS_LFT&quot;&gt;${NBR_OF_DGTS_LFT}&lt;/field&gt; 			&lt;field name=&quot;NBR_OF_DGTS_RGT&quot;&gt;${NBR_OF_DGTS_RGT}&lt;/field&gt; 			&lt;field name=&quot;FULL_SCALE&quot;&gt;${FULL_SCALE}&lt;/field&gt; 			&lt;field name=&quot;READ_OUT_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;PROTOCOL_CD&quot;/&gt; 			&lt;field name=&quot;TOLERANCE&quot;&gt;${TOLERANCE}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;VIRTUAL_CHAN_ID&quot;/&gt; 			&lt;field name=&quot;INTV_REG_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;UOM_DESCR&quot;&gt;Kilowatogodzina kWh&lt;/field&gt; 			&lt;field name=&quot;TOU_DESCR&quot;&gt;Reszta doby&lt;/field&gt; 			&lt;field name=&quot;PROTOCOL_DESCR&quot;/&gt; 			&lt;field name=&quot;READ_OUT_TYPE_DESCR&quot;/&gt; 			&lt;field name=&quot;INTV_DESCR&quot;/&gt; 			&lt;field name=&quot;INTERVAL_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;REG_TYPE&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;/&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_ID&quot;/&gt; 			&lt;field name=&quot;MTR_ID&quot;/&gt; 			&lt;field name=&quot;EFF_DTTM&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;${READ_SEQ2}&lt;/field&gt; 			&lt;field name=&quot;UOM_CD&quot;&gt;${UOM_CD}&lt;/field&gt; 			&lt;field name=&quot;TOU_CD&quot;&gt;${TOU_CD2}&lt;/field&gt; 			&lt;field name=&quot;REG_CONST&quot;&gt;${REG_CONST}&lt;/field&gt; 			&lt;field name=&quot;CONSUM_SUB_FLG&quot;&gt;${CONSUM_SUB_FLG}&lt;/field&gt; 			&lt;field name=&quot;HOW_TO_USE_FLG&quot;&gt;${HOW_TO_USE_FLG}&lt;/field&gt; 			&lt;field name=&quot;NBR_OF_DGTS_LFT&quot;&gt;${NBR_OF_DGTS_LFT}&lt;/field&gt; 			&lt;field name=&quot;NBR_OF_DGTS_RGT&quot;&gt;${NBR_OF_DGTS_RGT}&lt;/field&gt; 			&lt;field name=&quot;FULL_SCALE&quot;&gt;${FULL_SCALE}&lt;/field&gt; 			&lt;field name=&quot;READ_OUT_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;PROTOCOL_CD&quot;/&gt; 			&lt;field name=&quot;TOLERANCE&quot;&gt;${TOLERANCE}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;VIRTUAL_CHAN_ID&quot;/&gt; 			&lt;field name=&quot;INTV_REG_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;UOM_DESCR&quot;&gt;Kilowatogodzina kWh&lt;/field&gt; 			&lt;field name=&quot;TOU_DESCR&quot;&gt;Szczyt popołudniowy&lt;/field&gt; 			&lt;field name=&quot;PROTOCOL_DESCR&quot;/&gt; 			&lt;field name=&quot;READ_OUT_TYPE_DESCR&quot;/&gt; 			&lt;field name=&quot;INTV_DESCR&quot;/&gt; 			&lt;field name=&quot;INTERVAL_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;REG_TYPE&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;/&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_ID&quot;/&gt; 			&lt;field name=&quot;MTR_ID&quot;/&gt; 			&lt;field name=&quot;EFF_DTTM&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;${READ_SEQ3}&lt;/field&gt; 			&lt;field name=&quot;UOM_CD&quot;&gt;${UOM_CD}&lt;/field&gt; 			&lt;field name=&quot;TOU_CD&quot;&gt;${TOU_CD3}&lt;/field&gt; 			&lt;field name=&quot;REG_CONST&quot;&gt;${REG_CONST}&lt;/field&gt; 			&lt;field name=&quot;CONSUM_SUB_FLG&quot;&gt;${CONSUM_SUB_FLG}&lt;/field&gt; 			&lt;field name=&quot;HOW_TO_USE_FLG&quot;&gt;${HOW_TO_USE_FLG}&lt;/field&gt; 			&lt;field name=&quot;NBR_OF_DGTS_LFT&quot;&gt;${NBR_OF_DGTS_LFT}&lt;/field&gt; 			&lt;field name=&quot;NBR_OF_DGTS_RGT&quot;&gt;${NBR_OF_DGTS_RGT}&lt;/field&gt; 			&lt;field name=&quot;FULL_SCALE&quot;&gt;${FULL_SCALE}&lt;/field&gt; 			&lt;field name=&quot;READ_OUT_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;PROTOCOL_CD&quot;/&gt; 			&lt;field name=&quot;TOLERANCE&quot;&gt;${TOLERANCE}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;VIRTUAL_CHAN_ID&quot;/&gt; 			&lt;field name=&quot;INTV_REG_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;UOM_DESCR&quot;&gt;Kilowatogodzina kWh&lt;/field&gt; 			&lt;field name=&quot;TOU_DESCR&quot;&gt;Szczyt przedpołudniowy&lt;/field&gt; 			&lt;field name=&quot;PROTOCOL_DESCR&quot;/&gt; 			&lt;field name=&quot;READ_OUT_TYPE_DESCR&quot;/&gt; 			&lt;field name=&quot;INTV_DESCR&quot;/&gt; 			&lt;field name=&quot;INTERVAL_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;REG_TYPE&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILMMTGP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ccbtst01.grupaenerga-ivmx.pl:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">MTR_CONFIG_ID</stringProp>
                <stringProp name="RegexExtractor.regex">MTR_CONFIG_ID&quot;:&quot;(\d+)&quot;,&quot;MTR_ID&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak MTR_CONFIG_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">REG_ID</stringProp>
                <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(\d+)&quot;,&quot;MTR_ID</stringProp>
                <stringProp name="RegexExtractor.template">$1$ </stringProp>
                <stringProp name="RegexExtractor.default">brak REG_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID2" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">REG_ID2</stringProp>
                <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(\d+)&quot;,&quot;MTR_ID</stringProp>
                <stringProp name="RegexExtractor.template">$1$ </stringProp>
                <stringProp name="RegexExtractor.default">brak REG_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">2</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID3" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">REG_ID3</stringProp>
                <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(\d+)&quot;,&quot;MTR_ID</stringProp>
                <stringProp name="RegexExtractor.template">$1$ </stringProp>
                <stringProp name="RegexExtractor.default">brak REG_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">3</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_INFO" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">MTR_CONFIG_INFO</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;MTR_CONFIG_INFO&quot;:&quot;(.*)&quot;,&quot;CONTROLLER_SW</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak MTR_CONFIG_INFO</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
              </GaussianRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Wyszukiwanie konfiguracji licznika" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/search?service=CILMMTRS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="SEARCH_TYPE" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">SEARCH_TYPE</stringProp>
                    <stringProp name="Argument.value">${SEARCH_TYPE}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="BADGE_NBR" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">BADGE_NBR</stringProp>
                    <stringProp name="Argument.value">${BADGE_NBR}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="SERIAL_NBR" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">SERIAL_NBR</stringProp>
                    <stringProp name="Argument.value">${SERIAL_NBR}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="MTR_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">MTR_ID</stringProp>
                    <stringProp name="Argument.value">${MTR_ID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="MTR_CONFIG_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${MTR_CONFIG_ID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">MTR_CONFIG_ID</stringProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/search?service=CILMMTRS</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ccbtst01.grupaenerga-ivmx.pl:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">MTR_CONFIG_ID</stringProp>
              <stringProp name="RegexExtractor.regex">false,&quot;MTR_CONFIG_ID&quot;:&quot;(.*)&quot;,&quot;MTR_ID&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">brak MTR_CONFIG_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">REG_ID</stringProp>
              <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(.*)&quot;,&quot;MTR_ID&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$ </stringProp>
              <stringProp name="RegexExtractor.default">brak REG_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Odczyt" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Odczyt dla konfiguracji licznika C21" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisanie" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisanie odczytu dla konfiguracji licznika C21] /ouaf/pageAdd?service=CILMMRDP" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;MR_INFO&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_INFO&quot;&gt;${MTR_CONFIG_INFO}&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SP_ID&quot;/&gt; 	&lt;field name=&quot;USED_ON_SP_MTR_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_INFO&quot;/&gt; 	&lt;field name=&quot;FA_ID&quot;/&gt; 	&lt;field name=&quot;MR_ID&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID}&lt;/field&gt; 	&lt;field name=&quot;READ_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 	&lt;field name=&quot;USE_ON_BILL_SW&quot;&gt;${USE_ON_BILL_SW}&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MR_SOURCE_CD&quot;&gt;${MR_SOURCE_CD}&lt;/field&gt; 	&lt;field name=&quot;MTR_READER_ID&quot;/&gt; 	&lt;field name=&quot;MR_DATA_AREA&quot;/&gt; 	&lt;list name=&quot;REG_READ&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;LAST_READ_SEQ&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;READ_DTTM&quot;/&gt; 			&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID}&lt;/field&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_READ_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID}&lt;/field&gt; 			&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;60&lt;/field&gt; 			&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING}&lt;/field&gt; 			&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 			&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;&gt;KWH,CALDOB, format 5.5, 1.000000&lt;/field&gt; 			&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 			&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;MR_CHAR&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;LAST_CHAR_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;CMFKOPPE&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;&gt;234235436456&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;ADV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;Kod PPE&lt;/field&gt; 			&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;CMIDATOD&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;&gt;01-02-2014&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;ADV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;Data początku okresu zużycia&lt;/field&gt; 			&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;CMIMDMS&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL&quot;&gt;CSADP&lt;/field&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;DFV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;&gt;Centralny System Akwizycji Danych&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;System źródłowy odczytu&lt;/field&gt; 			&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;CMFRORID&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;&gt;234355466&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;ADV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;Wartość identyfikatora odczytu z CSADP (ROR ID)&lt;/field&gt; 			&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ignoreWarnings</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILMMRDP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983930459">resultCode....E..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983947757">resultCode....W..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">REG_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(.*)&quot;,&quot;READ_TYPE_F</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak REG_ID</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="READ_DTTM" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">READ_DTTM</stringProp>
                  <stringProp name="RegexExtractor.regex">READ_DTTM&quot;:&quot;(.*)&quot;,&quot;USE_ON_BILL</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak READ_DTTM</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_INFO" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MTR_CONFIG_INFO</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;MTR_CONFIG_INFO&quot;:&quot;(.*)&quot;,&quot;CONTROLLER_SW&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MTR_CONFIG_INFO</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MR_ID" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MR_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">MR_ID&quot;:&quot;(\d+?)&quot;,&quot;MTR_CONFIG_ID</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MR_ID</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MR_INFO" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MR_INFO</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;MR_INFO&quot;:&quot;(.*)&quot;,&quot;MTR_CONFIG_INFO&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MR_INFO</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">Date d = vars.get(&quot;READ_DTTM&quot;);
vars.put(&quot;INSTALL_READ_DTTM&quot;,INSTALL_READ_DTTM);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                  <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
                </GaussianRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisanie drugiego odczytu" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisanie drugiego odczytu dla konfiguracji licznika C21] /ouaf/pageAdd?service=CILMMRDP" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;MR_INFO&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_INFO&quot;&gt;${MTR_CONFIG_INFO}&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SP_ID&quot;/&gt; 	&lt;field name=&quot;USED_ON_SP_MTR_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_INFO&quot;/&gt; 	&lt;field name=&quot;FA_ID&quot;/&gt; 	&lt;field name=&quot;MR_ID&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID}&lt;/field&gt; 	&lt;field name=&quot;READ_DTTM&quot;&gt;${READ_DTTM2}&lt;/field&gt; 	&lt;field name=&quot;USE_ON_BILL_SW&quot;&gt;${USE_ON_BILL_SW}&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MR_SOURCE_CD&quot;&gt;${MR_SOURCE_CD}&lt;/field&gt; 	&lt;field name=&quot;MTR_READER_ID&quot;/&gt; 	&lt;field name=&quot;MR_DATA_AREA&quot;/&gt; 	&lt;list name=&quot;REG_READ&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;LAST_READ_SEQ&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;READ_DTTM&quot;/&gt; 			&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID}&lt;/field&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_READ_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID}&lt;/field&gt; 			&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 			&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING4}&lt;/field&gt; 			&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 			&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;&gt;KWH,CALDOB, format 5.5, 1.000000&lt;/field&gt; 			&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 			&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;MR_CHAR&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;LAST_CHAR_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD_MR_01}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;&gt;${ADHOC_CHAR_VAL_MR_01}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;ADV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;Kod PPE&lt;/field&gt; 			&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD_MR_02}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;&gt;${ADHOC_CHAR_VAL_MR_02}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;ADV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;Data początku okresu zużycia&lt;/field&gt; 			&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD_MR_03}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL&quot;&gt;${ADHOC_CHAR_VAL_MR_03}&lt;/field&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;DFV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;&gt;Centralny System Akwizycji Danych&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;System źródłowy odczytu&lt;/field&gt; 			&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD_MR_04}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;&gt;${ADHOC_CHAR_VAL_MR_04}${GenUniqueRorID}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;ADV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;Wartość identyfikatora odczytu z CSADP (ROR ID)&lt;/field&gt; 			&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ignoreWarnings</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILMMRDP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983947757">resultCode....W..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983930459">resultCode....E..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID4" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">REG_ID4</stringProp>
                  <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(.*)&quot;,&quot;READ_TYPE_FLG</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak REG_ID4</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="READ_DTTM2" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">READ_DTTM2</stringProp>
                  <stringProp name="RegexExtractor.regex">READ_DTTM&quot;:&quot;(.*)&quot;,&quot;USE_ON_BILL</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak READ_DTTM2</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_INFO2" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MTR_CONFIG_INFO2</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;MTR_CONFIG_INFO&quot;:&quot;(.*)&quot;,&quot;CONTROLLER_SW&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MTR_CONFIG_INFO2</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MR_ID2" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MR_ID2</stringProp>
                  <stringProp name="RegexExtractor.regex">MR_ID&quot;:&quot;(\d+?)&quot;,&quot;MTR_CONFIG_ID</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MR_ID2</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MR_INFO2" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MR_INFO2</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;MR_INFO&quot;:&quot;(.*)&quot;,&quot;MTR_CONFIG_INFO&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MR_INFO2</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                  <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
                </GaussianRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisanie trzeciego odczytu" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisanie trzeciego odczytu dla konfiguracji licznika C21] /ouaf/pageAdd?service=CILMMRDP" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;MR_INFO&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_INFO&quot;&gt;${MTR_CONFIG_INFO}&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SP_ID&quot;/&gt; 	&lt;field name=&quot;USED_ON_SP_MTR_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_INFO&quot;/&gt; 	&lt;field name=&quot;FA_ID&quot;/&gt; 	&lt;field name=&quot;MR_ID&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID}&lt;/field&gt; 	&lt;field name=&quot;READ_DTTM&quot;&gt;${READ_DTTM3}&lt;/field&gt; 	&lt;field name=&quot;USE_ON_BILL_SW&quot;&gt;${USE_ON_BILL_SW}&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MR_SOURCE_CD&quot;&gt;${MR_SOURCE_CD}&lt;/field&gt; 	&lt;field name=&quot;MTR_READER_ID&quot;/&gt; 	&lt;field name=&quot;MR_DATA_AREA&quot;/&gt; 	&lt;list name=&quot;REG_READ&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;LAST_READ_SEQ&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;READ_DTTM&quot;/&gt; 			&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID}&lt;/field&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_READ_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID}&lt;/field&gt; 			&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 			&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING7}&lt;/field&gt; 			&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 			&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;&gt;KWH,CALDOB, format 5.5, 1.000000&lt;/field&gt; 			&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 			&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ignoreWarnings</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILMMRDP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983947757">resultCode....W..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983930459">resultCode....E..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID7" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">REG_ID4</stringProp>
                  <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(.*)&quot;,&quot;READ_TYPE_FLG</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak REG_ID4</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="READ_DTTM3" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">READ_DTTM3</stringProp>
                  <stringProp name="RegexExtractor.regex">READ_DTTM&quot;:&quot;(.*)&quot;,&quot;USE_ON_BILL</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak READ_DTTM3</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_INFO2" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MTR_CONFIG_INFO2</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;MTR_CONFIG_INFO&quot;:&quot;(.*)&quot;,&quot;CONTROLLER_SW&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MTR_CONFIG_INFO2</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MR_ID3" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MR_ID3</stringProp>
                  <stringProp name="RegexExtractor.regex">MR_ID&quot;:&quot;(\d+?)&quot;,&quot;MTR_CONFIG_ID</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MR_ID3</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MR_INFO3" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MR_INFO3</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;MR_INFO&quot;:&quot;(.*)&quot;,&quot;MTR_CONFIG_INFO&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MR_INFO3</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                  <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
                </GaussianRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Korekta drugiego odczytu - USE ON BILL = FALSE" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Korekta drugiego odczytu - USE ON BILL = FALSE" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;MR_INFO&quot;&gt;${MR_INFO2}&lt;/field&gt; 	&lt;field name=&quot;MTR_CONFIG_INFO&quot;&gt;${MTR_CONFIG_INFO}&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;&gt;Licznik nie został jeszcze zainstalowany.&lt;/field&gt; 	&lt;field name=&quot;SP_ID&quot;/&gt; 	&lt;field name=&quot;USED_ON_SP_MTR_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_INFO&quot;/&gt; 	&lt;field name=&quot;FA_ID&quot;/&gt; 	&lt;field name=&quot;MR_ID&quot;&gt;${MR_ID2}&lt;/field&gt; 	&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID}&lt;/field&gt; 	&lt;field name=&quot;READ_DTTM&quot;&gt;${READ_DTTM2}&lt;/field&gt; 	&lt;field name=&quot;USE_ON_BILL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 	&lt;field name=&quot;MR_SOURCE_CD&quot;&gt;${MR_SOURCE_CD}&lt;/field&gt; 	&lt;field name=&quot;MTR_READER_ID&quot;/&gt; 	&lt;field name=&quot;MR_DATA_AREA&quot;/&gt; &lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILMMRDP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Odczyt dla konfiguracji licznika C22B" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisanie" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisanie odczytu dla konfiguracji licznika C22B] /ouaf/pageAdd?service=CILMMRDP" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;MR_INFO&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_INFO&quot;&gt;${MTR_CONFIG_INFO}&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SP_ID&quot;/&gt; 	&lt;field name=&quot;USED_ON_SP_MTR_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_INFO&quot;/&gt; 	&lt;field name=&quot;FA_ID&quot;/&gt; 	&lt;field name=&quot;MR_ID&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID}&lt;/field&gt; 	&lt;field name=&quot;READ_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 	&lt;field name=&quot;USE_ON_BILL_SW&quot;&gt;${USE_ON_BILL_SW}&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MR_SOURCE_CD&quot;&gt;${MR_SOURCE_CD}&lt;/field&gt; 	&lt;field name=&quot;MTR_READER_ID&quot;/&gt; 	&lt;field name=&quot;MR_DATA_AREA&quot;/&gt; 	&lt;list name=&quot;REG_READ&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;LAST_READ_SEQ&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;READ_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 			&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID} &lt;/field&gt;&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 		&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 		&lt;field name=&quot;lastInfo&quot;/&gt; 	&lt;/listHeader&gt; 	&lt;listBody action=&quot;A&quot;&gt; 		&lt;field name=&quot;REG_READ_ID&quot;/&gt; 		&lt;field name=&quot;MR_ID&quot;/&gt; 		&lt;field name=&quot;READ_SEQ&quot;&gt;10&lt;/field&gt; 		&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID}&lt;/field&gt; 		&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 		&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING}&lt;/field&gt; 		&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 		&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 		&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 		&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 		&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 		&lt;field name=&quot;REG_INFO&quot;&gt;KWH,DZIEN, format 8.0, 1.000000&lt;/field&gt; 		&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 		&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 		&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 	&lt;/listBody&gt; 	&lt;listBody action=&quot;A&quot;&gt; 		&lt;field name=&quot;REG_READ_ID&quot;/&gt; 		&lt;field name=&quot;MR_ID&quot;/&gt; 		&lt;field name=&quot;READ_SEQ&quot;&gt;20&lt;/field&gt; 		&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID2}&lt;/field&gt; 		&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 		&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING2}&lt;/field&gt; 		&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 		&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 		&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 		&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 		&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 		&lt;field name=&quot;REG_INFO&quot;&gt;KWH,NOC, format 8.0, 1.000000&lt;/field&gt; 		&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 		&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 		&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 	&lt;/listBody&gt; &lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ignoreWarnings</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILMMRDP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983930459">resultCode....E..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983947757">resultCode....W..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">REG_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(.*)&quot;,&quot;READ_TYPE_FLG</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak REG_ID</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="READ_DTTM" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">READ_DTTM</stringProp>
                  <stringProp name="RegexExtractor.regex">READ_DTTM&quot;:&quot;(.*)&quot;,&quot;USE_ON_BILL</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak READ_DTTM</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_INFO" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MTR_CONFIG_INFO</stringProp>
                  <stringProp name="RegexExtractor.regex"></stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MTR_CONFIG_INFO</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MR_ID" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MR_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">MR_ID&quot;:&quot;(\d+?)&quot;,&quot;MTR_CONFIG_ID</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MR_ID</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MR_INFO" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MR_INFO</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;MR_INFO&quot;:&quot;(.*)&quot;,&quot;MTR_CONFIG_INFO&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MR_INFO</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">Date d = vars.get(&quot;READ_DTTM&quot;);
vars.put(&quot;INSTALL_READ_DTTM&quot;,INSTALL_READ_DTTM);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                  <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
                </GaussianRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisanie drugiego odczytu" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisanie drugiego odczytu dla konfiguracji licznika C22B] /ouaf/pageAdd?service=CILMMRDP" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;MR_INFO&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_INFO&quot;&gt;${MTR_CONFIG_INFO}&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SP_ID&quot;/&gt; 	&lt;field name=&quot;USED_ON_SP_MTR_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_INFO&quot;/&gt; 	&lt;field name=&quot;FA_ID&quot;/&gt; 	&lt;field name=&quot;MR_ID&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID}&lt;/field&gt; 	&lt;field name=&quot;READ_DTTM&quot;&gt;${READ_DTTM2}&lt;/field&gt; 	&lt;field name=&quot;USE_ON_BILL_SW&quot;&gt;${USE_ON_BILL_SW}&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MR_SOURCE_CD&quot;&gt;${MR_SOURCE_CD}&lt;/field&gt; 	&lt;field name=&quot;MTR_READER_ID&quot;/&gt; 	&lt;field name=&quot;MR_DATA_AREA&quot;/&gt; 	&lt;list name=&quot;REG_READ&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;LAST_READ_SEQ&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;READ_DTTM&quot;/&gt; 			&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID} &lt;/field&gt;&gt; 			 			&lt;field name=&quot;SP_ID&quot;/&gt; 		&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 		&lt;field name=&quot;lastInfo&quot;/&gt; 	&lt;/listHeader&gt; 	&lt;listBody action=&quot;A&quot;&gt; 		&lt;field name=&quot;REG_READ_ID&quot;/&gt; 		&lt;field name=&quot;MR_ID&quot;/&gt; 		&lt;field name=&quot;READ_SEQ&quot;&gt;10&lt;/field&gt; 		&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID}&lt;/field&gt; 		&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 		&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING4}&lt;/field&gt; 		&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 		&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 		&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 		&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 		&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 		&lt;field name=&quot;REG_INFO&quot;&gt;KWH,DZIEN, format 8.0, 1.000000&lt;/field&gt; 		&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 		&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 		&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 	&lt;/listBody&gt; 	&lt;listBody action=&quot;A&quot;&gt; 		&lt;field name=&quot;REG_READ_ID&quot;/&gt; 		&lt;field name=&quot;MR_ID&quot;/&gt; 		&lt;field name=&quot;READ_SEQ&quot;&gt;20&lt;/field&gt; 		&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID2}&lt;/field&gt; 		&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 		&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING5}&lt;/field&gt; 		&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 		&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 		&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 		&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 		&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 		&lt;field name=&quot;REG_INFO&quot;&gt;KWH,NOC, format 8.0, 1.000000&lt;/field&gt; 		&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 		&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 		&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 	&lt;/listBody&gt; &lt;/list&gt; &lt;list name=&quot;MR_CHAR&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;LAST_CHAR_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD_MR_01}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;&gt;${ADHOC_CHAR_VAL_MR_01}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;ADV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;Kod PPE&lt;/field&gt; 			&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD_MR_02}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;&gt;${ADHOC_CHAR_VAL_MR_02}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;ADV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;Data początku okresu zużycia&lt;/field&gt; 			&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD_MR_03}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL&quot;&gt;${ADHOC_CHAR_VAL_MR_03}&lt;/field&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;DFV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;&gt;Centralny System Akwizycji Danych&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;System źródłowy odczytu&lt;/field&gt; 			&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD_MR_04}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;ADHOC_CHAR_VAL&quot;&gt;${ADHOC_CHAR_VAL_MR_04}${GenUniqueRorID}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 			&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 			&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 			&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 			&lt;field name=&quot;TBL_NAME&quot;/&gt; 			&lt;field name=&quot;INFO_PRG&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;ADV&lt;/field&gt; 			&lt;field name=&quot;CHAR_VAL_DESCR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 			&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 			&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;Wartość identyfikatora odczytu z CSADP (ROR ID)&lt;/field&gt; 			&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ignoreWarnings</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILMMRDP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983930459">resultCode....E..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983947757">resultCode....W..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                  <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
                </GaussianRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisanie trzeciego odczytu" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisanie trzeciego odczytu dla konfiguracji licznika C22B]] /ouaf/pageAdd?service=CILMMRDP" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;MR_INFO&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_INFO&quot;&gt;${MTR_CONFIG_INFO}&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SP_ID&quot;/&gt; 	&lt;field name=&quot;USED_ON_SP_MTR_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_INFO&quot;/&gt; 	&lt;field name=&quot;FA_ID&quot;/&gt; 	&lt;field name=&quot;MR_ID&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID}&lt;/field&gt; 	&lt;field name=&quot;READ_DTTM&quot;&gt;${READ_DTTM3}&lt;/field&gt; 	&lt;field name=&quot;USE_ON_BILL_SW&quot;&gt;${USE_ON_BILL_SW}&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MR_SOURCE_CD&quot;&gt;${MR_SOURCE_CD}&lt;/field&gt; 	&lt;field name=&quot;MTR_READER_ID&quot;/&gt; 	&lt;field name=&quot;MR_DATA_AREA&quot;/&gt; 	&lt;list name=&quot;REG_READ&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;LAST_READ_SEQ&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;READ_DTTM&quot;/&gt; 			&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID} &lt;/field&gt;&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 		&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 		&lt;field name=&quot;lastInfo&quot;/&gt; 	&lt;/listHeader&gt; 	&lt;listBody action=&quot;A&quot;&gt; 		&lt;field name=&quot;REG_READ_ID&quot;/&gt; 		&lt;field name=&quot;MR_ID&quot;/&gt; 		&lt;field name=&quot;READ_SEQ&quot;&gt;10&lt;/field&gt; 		&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID}&lt;/field&gt; 		&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 		&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING7}&lt;/field&gt; 		&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 		&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 		&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 		&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 		&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 		&lt;field name=&quot;REG_INFO&quot;&gt;KWH,DZIEN, format 8.0, 1.000000&lt;/field&gt; 		&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 		&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 		&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 	&lt;/listBody&gt; 	&lt;listBody action=&quot;A&quot;&gt; 		&lt;field name=&quot;REG_READ_ID&quot;/&gt; 		&lt;field name=&quot;MR_ID&quot;/&gt; 		&lt;field name=&quot;READ_SEQ&quot;&gt;20&lt;/field&gt; 		&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID2}&lt;/field&gt; 		&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 		&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING8}&lt;/field&gt; 		&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 		&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 		&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 		&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 		&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 		&lt;field name=&quot;REG_INFO&quot;&gt;KWH,NOC, format 8.0, 1.000000&lt;/field&gt; 		&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 		&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 		&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 	&lt;/listBody&gt; &lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ignoreWarnings</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILMMRDP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983930459">resultCode....E..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983947757">resultCode....W..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                  <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
                </GaussianRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Odczyt dla konfiguracji licznika C23" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisanie odczytu dla konfiguracji licznika C23" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisanie odczytu dla konfiguracji licznika C23] /ouaf/pageAdd?service=CILMMRDP" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;MR_INFO&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_INFO&quot;&gt;${MTR_CONFIG_INFO}&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SP_ID&quot;/&gt; 	&lt;field name=&quot;USED_ON_SP_MTR_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_INFO&quot;/&gt; 	&lt;field name=&quot;FA_ID&quot;/&gt; 	&lt;field name=&quot;MR_ID&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID}&lt;/field&gt; 	&lt;field name=&quot;READ_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 	&lt;field name=&quot;USE_ON_BILL_SW&quot;&gt;${USE_ON_BILL_SW}&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MR_SOURCE_CD&quot;&gt;${MR_SOURCE_CD}&lt;/field&gt; 	&lt;field name=&quot;MTR_READER_ID&quot;/&gt; 	&lt;field name=&quot;MR_DATA_AREA&quot;/&gt; 	&lt;list name=&quot;REG_READ&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;LAST_READ_SEQ&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;READ_DTTM&quot;/&gt; 			&lt;field name=&quot;MTR_CONFIG_ID&quot;/&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_READ_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID}&lt;/field&gt; 			&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 			&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING}&lt;/field&gt; 			&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 			&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;&gt;KWH,RESZTDO, format 6.0, 1.000000&lt;/field&gt; 			&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 			&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_READ_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;20&lt;/field&gt; 			&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID2}&lt;/field&gt; 			&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 			&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING2}&lt;/field&gt; 			&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 			&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;&gt;KWH,SZCZPOR, format 6.0, 1.000000&lt;/field&gt; 			&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 			&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_READ_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;30&lt;/field&gt; 			&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID3}&lt;/field&gt; 			&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 			&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING3}&lt;/field&gt; 			&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 			&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;&gt;KWH,SZCZWIE, format 6.0, 1.000000&lt;/field&gt; 			&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 			&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ignoreWarnings</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILMMRDP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983930459">resultCode....E..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983947757">resultCode....W..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">REG_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(.*)&quot;,&quot;READ_TYPE_FLG</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak REG_ID</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="READ_DTTM" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">READ_DTTM</stringProp>
                  <stringProp name="RegexExtractor.regex">READ_DTTM&quot;:&quot;(.*)&quot;,&quot;USE_ON_BILL</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak READ_DTTM</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_INFO" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MTR_CONFIG_INFO</stringProp>
                  <stringProp name="RegexExtractor.regex"></stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MTR_CONFIG_INFO</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MR_ID" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MR_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">MR_ID&quot;:&quot;(\d+?)&quot;,&quot;MTR_CONFIG_ID</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MR_ID</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MR_INFO" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MR_INFO</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;MR_INFO&quot;:&quot;(.*)&quot;,&quot;MTR_CONFIG_INFO&quot;</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MR_INFO</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="false">
                  <boolProp name="resetInterpreter">false</boolProp>
                  <stringProp name="parameters"></stringProp>
                  <stringProp name="filename"></stringProp>
                  <stringProp name="script">Date d = vars.get(&quot;READ_DTTM&quot;);
vars.put(&quot;INSTALL_READ_DTTM&quot;,INSTALL_READ_DTTM);</stringProp>
                </BeanShellPreProcessor>
                <hashTree/>
                <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                  <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
                </GaussianRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisanie drugiego odczytu" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisanie drugiego odczytu dla konfiguracji licznika C23] /ouaf/pageAdd?service=CILMMRDP" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;MR_INFO&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_INFO&quot;&gt;${MTR_CONFIG_INFO}&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SP_ID&quot;/&gt; 	&lt;field name=&quot;USED_ON_SP_MTR_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_INFO&quot;/&gt; 	&lt;field name=&quot;FA_ID&quot;/&gt; 	&lt;field name=&quot;MR_ID&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID}&lt;/field&gt; 	&lt;field name=&quot;READ_DTTM&quot;&gt;${READ_DTTM2}&lt;/field&gt; 	&lt;field name=&quot;USE_ON_BILL_SW&quot;&gt;${USE_ON_BILL_SW}&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MR_SOURCE_CD&quot;&gt;${MR_SOURCE_CD}&lt;/field&gt; 	&lt;field name=&quot;MTR_READER_ID&quot;/&gt; 	&lt;field name=&quot;MR_DATA_AREA&quot;/&gt; 	&lt;list name=&quot;REG_READ&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;LAST_READ_SEQ&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;READ_DTTM&quot;/&gt; 			&lt;field name=&quot;MTR_CONFIG_ID&quot;/&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_READ_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID}&lt;/field&gt; 			&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 			&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING4}&lt;/field&gt; 			&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 			&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;&gt;KWH,RESZTDO, format 6.0, 1.000000&lt;/field&gt; 			&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 			&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_READ_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;20&lt;/field&gt; 			&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID2}&lt;/field&gt; 			&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 			&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING5}&lt;/field&gt; 			&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 			&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;&gt;KWH,SZCZPOR, format 6.0, 1.000000&lt;/field&gt; 			&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 			&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_READ_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;30&lt;/field&gt; 			&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID3}&lt;/field&gt; 			&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 			&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING6}&lt;/field&gt; 			&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 			&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;&gt;KWH,SZCZWIE, format 6.0, 1.000000&lt;/field&gt; 			&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 			&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;MR_CHAR&quot;&gt; 	&lt;listHeader&gt; 		&lt;field name=&quot;MR_ID&quot;/&gt; 		&lt;field name=&quot;LAST_CHAR_TYPE_CD&quot;/&gt; 		&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 		&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 		&lt;field name=&quot;lastInfo&quot;/&gt; 	&lt;/listHeader&gt; 	&lt;listBody action=&quot;A&quot;&gt; 		&lt;field name=&quot;MR_ID&quot;/&gt; 		&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD_MR_01}&lt;/field&gt; 		&lt;field name=&quot;SEQ_NUM&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL&quot;/&gt; 		&lt;field name=&quot;ADHOC_CHAR_VAL&quot;&gt;${ADHOC_CHAR_VAL_MR_01}&lt;/field&gt; 		&lt;field name=&quot;VERSION&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 		&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 		&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 		&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 		&lt;field name=&quot;TBL_NAME&quot;/&gt; 		&lt;field name=&quot;INFO_PRG&quot;/&gt; 		&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;ADV&lt;/field&gt; 		&lt;field name=&quot;CHAR_VAL_DESCR&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 		&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 		&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;Kod PPE&lt;/field&gt; 		&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 	&lt;/listBody&gt; 	&lt;listBody action=&quot;A&quot;&gt; 		&lt;field name=&quot;MR_ID&quot;/&gt; 		&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD_MR_02}&lt;/field&gt; 		&lt;field name=&quot;SEQ_NUM&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL&quot;/&gt; 		&lt;field name=&quot;ADHOC_CHAR_VAL&quot;&gt;${ADHOC_CHAR_VAL_MR_02}&lt;/field&gt; 		&lt;field name=&quot;VERSION&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 		&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 		&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 		&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 		&lt;field name=&quot;TBL_NAME&quot;/&gt; 		&lt;field name=&quot;INFO_PRG&quot;/&gt; 		&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;ADV&lt;/field&gt; 		&lt;field name=&quot;CHAR_VAL_DESCR&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 		&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 		&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;Data początku okresu zużycia&lt;/field&gt; 		&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 	&lt;/listBody&gt; 	&lt;listBody action=&quot;A&quot;&gt; 		&lt;field name=&quot;MR_ID&quot;/&gt; 		&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD_MR_03}&lt;/field&gt; 		&lt;field name=&quot;SEQ_NUM&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL&quot;&gt;${ADHOC_CHAR_VAL_MR_03}&lt;/field&gt; 		&lt;field name=&quot;ADHOC_CHAR_VAL&quot;/&gt; 		&lt;field name=&quot;VERSION&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 		&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 		&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 		&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 		&lt;field name=&quot;TBL_NAME&quot;/&gt; 		&lt;field name=&quot;INFO_PRG&quot;/&gt; 		&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;DFV&lt;/field&gt; 		&lt;field name=&quot;CHAR_VAL_DESCR&quot;&gt;Centralny System Akwizycji Danych&lt;/field&gt; 		&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 		&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 		&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;System źródłowy odczytu&lt;/field&gt; 		&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 	&lt;/listBody&gt; 	&lt;listBody action=&quot;A&quot;&gt; 		&lt;field name=&quot;MR_ID&quot;/&gt; 		&lt;field name=&quot;CHAR_TYPE_CD&quot;&gt;${CHAR_TYPE_CD_MR_04}&lt;/field&gt; 		&lt;field name=&quot;SEQ_NUM&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL&quot;/&gt; 		&lt;field name=&quot;ADHOC_CHAR_VAL&quot;&gt;${ADHOC_CHAR_VAL_MR_04}${GenUniqueRorID}&lt;/field&gt; 		&lt;field name=&quot;VERSION&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK1&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK2&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK3&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK4&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK5&quot;/&gt; 		&lt;field name=&quot;SRCH_CHAR_VAL&quot;/&gt; 		&lt;field name=&quot;SRCH_NAV_KEY&quot;/&gt; 		&lt;field name=&quot;NAV_OPT_CD&quot;/&gt; 		&lt;field name=&quot;TBL_NAME&quot;/&gt; 		&lt;field name=&quot;INFO_PRG&quot;/&gt; 		&lt;field name=&quot;CHAR_TYPE_FLG&quot;&gt;ADV&lt;/field&gt; 		&lt;field name=&quot;CHAR_VAL_DESCR&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK_STR&quot;/&gt; 		&lt;field name=&quot;CHAR_VAL_FK_INFO&quot;/&gt; 		&lt;field name=&quot;COMP_PK_SW&quot;&gt;false&lt;/field&gt; 		&lt;field name=&quot;COMP_PK_STR&quot;/&gt; 		&lt;field name=&quot;CHAR_TYPE_DESCR&quot;&gt;Wartość identyfikatora odczytu z CSADP (ROR ID)&lt;/field&gt; 		&lt;field name=&quot;CHAR_ENTITY_FLG&quot;/&gt; 	&lt;/listBody&gt; &lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ignoreWarnings</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILMMRDP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983930459">resultCode....E..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983947757">resultCode....W..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">REG_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(.*)&quot;,&quot;READ_TYPE_FLG</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak REG_ID</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_INFO" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MTR_CONFIG_INFO</stringProp>
                  <stringProp name="RegexExtractor.regex"></stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MTR_CONFIG_INFO</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MR_ID" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MR_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">MR_ID&quot;:&quot;(.*)&quot;,&quot;MTR_CONFIG_ID</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MR_ID</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                  <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
                </GaussianRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisanie trzeciego odczytu" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisanie trzeciego odczytu dla konfiguracji licznika C23] /ouaf/pageAdd?service=CILMMRDP" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;MR_INFO&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_INFO&quot;&gt;${MTR_CONFIG_INFO}&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SP_ID&quot;/&gt; 	&lt;field name=&quot;USED_ON_SP_MTR_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REREAD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_INFO&quot;/&gt; 	&lt;field name=&quot;FA_ID&quot;/&gt; 	&lt;field name=&quot;MR_ID&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID}&lt;/field&gt; 	&lt;field name=&quot;READ_DTTM&quot;&gt;${READ_DTTM3}&lt;/field&gt; 	&lt;field name=&quot;USE_ON_BILL_SW&quot;&gt;${USE_ON_BILL_SW}&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MR_SOURCE_CD&quot;&gt;${MR_SOURCE_CD}&lt;/field&gt; 	&lt;field name=&quot;MTR_READER_ID&quot;/&gt; 	&lt;field name=&quot;MR_DATA_AREA&quot;/&gt; 	&lt;list name=&quot;REG_READ&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;LAST_READ_SEQ&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;READ_DTTM&quot;/&gt; 			&lt;field name=&quot;MTR_CONFIG_ID&quot;/&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_READ_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID}&lt;/field&gt; 			&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 			&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING7}&lt;/field&gt; 			&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 			&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;&gt;KWH,RESZTDO, format 6.0, 1.000000&lt;/field&gt; 			&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 			&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_READ_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;20&lt;/field&gt; 			&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID2}&lt;/field&gt; 			&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 			&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING8}&lt;/field&gt; 			&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 			&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;&gt;KWH,SZCZPOR, format 6.0, 1.000000&lt;/field&gt; 			&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 			&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;REG_READ_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_SEQ&quot;&gt;30&lt;/field&gt; 			&lt;field name=&quot;REG_ID&quot;&gt;${REG_ID3}&lt;/field&gt; 			&lt;field name=&quot;READ_TYPE_FLG&quot;&gt;${READ_TYPE_FLG}&lt;/field&gt; 			&lt;field name=&quot;REG_READING&quot;&gt;${REG_READING9}&lt;/field&gt; 			&lt;field name=&quot;LO_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;HI_LIMIT&quot;&gt;0.000000&lt;/field&gt; 			&lt;field name=&quot;REVIEW_HILO_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TRENDED_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 			&lt;field name=&quot;REG_READ_MSG&quot;/&gt; 			&lt;field name=&quot;REG_INFO&quot;&gt;KWH,SZCZWIE, format 6.0, 1.000000&lt;/field&gt; 			&lt;field name=&quot;PREV_REG_READ_INFO&quot;/&gt; 			&lt;field name=&quot;PREV_MR_ID&quot;/&gt; 			&lt;field name=&quot;READ_OUTSIDE_LIMIT&quot;&gt;false&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ignoreWarnings</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILMMRDP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983930459">resultCode....E..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="983947757">resultCode....W..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="REG_ID" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">REG_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">REG_ID&quot;:&quot;(.*)&quot;,&quot;READ_TYPE_FLG</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak REG_ID</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MTR_CONFIG_INFO" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MTR_CONFIG_INFO</stringProp>
                  <stringProp name="RegexExtractor.regex"></stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MTR_CONFIG_INFO</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MR_ID" enabled="false">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">MR_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">MR_ID&quot;:&quot;(.*)&quot;,&quot;MTR_CONFIG_ID</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">brak MR_ID</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                  <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
                </GaussianRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Wyszukiwanie" enabled="true"/>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Instalacja punktu poboru/licznika" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Instalacja PP/licznika] /ouaf/pageAdd?service=CILMSMHP" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;SP_MTR_HIS_INFO&quot;/&gt; 	&lt;field name=&quot;SP_INFO&quot;&gt;Energia  elektryczna - TPA/Miesięczny koniec miesiąca/Domyślna paczka odczytowa/Worska 25, 13-467 Marinos36199, Warszawa, 36199, Dom wielorodzinny, 4527188949&lt;/field&gt; 	&lt;field name=&quot;SP_TYPE_CD&quot;&gt;EE-TPA&lt;/field&gt; 	&lt;field name=&quot;MTR_ID&quot;&gt;${MTR_ID}&lt;/field&gt; 	&lt;field name=&quot;MTR_CONFIG_INFO&quot;&gt;Licznik energii elektrycznej T, kace336199, data wejścia w życie 01-01-2013 00:00:00 , Całodobowa, 1 rejestr&lt;/field&gt; 	&lt;field name=&quot;INSTALL_READ_DTTM&quot;/&gt; 	&lt;field name=&quot;REMOVAL_READ_DTTM&quot;/&gt; 	&lt;field name=&quot;DISPLAY_STK_LOC_SW&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_ROW_FLG&quot;/&gt; 	&lt;field name=&quot;INSTALL_MR_ID&quot;/&gt; 	&lt;field name=&quot;SP_MTR_HIST_ID&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_ID&quot;&gt;${MTR_CONFIG_ID}&lt;/field&gt; 	&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 	&lt;field name=&quot;REMOVAL_MR_ID&quot;/&gt; 	&lt;field name=&quot;REMOVAL_DTTM&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;INSTALL_CONST&quot;&gt;1.000000&lt;/field&gt; 	&lt;field name=&quot;C1_T_DEFAULT_FOR_ROW_FLG&quot;/&gt; 	&lt;field name=&quot;C1_T_INSTALL_MR_ID&quot;/&gt; 	&lt;field name=&quot;STK_LOC_CD&quot;/&gt; 	&lt;field name=&quot;SLC_DESCR&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_ID2&quot;/&gt; 	&lt;field name=&quot;SP_MTR_HIST_ID2&quot;/&gt; 	&lt;field name=&quot;SEQNO&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MR_ID&quot;&gt;${MR_ID}&lt;/field&gt; 	&lt;field name=&quot;SP_MTR_EVT_FLG&quot;/&gt; 	&lt;field name=&quot;MTR_ON_OFF_FLG&quot;&gt;1&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;C1_T_MTR_CONFIG_ID&quot;/&gt; 	&lt;field name=&quot;MTR_CONFIG_ID3&quot;/&gt; 	&lt;field name=&quot;SP_MTR_HIST_ID3&quot;/&gt; 	&lt;field name=&quot;SEQNO2&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MR_ID2&quot;/&gt; 	&lt;field name=&quot;SP_MTR_EVT_FLG2&quot;/&gt; 	&lt;field name=&quot;MTR_ON_OFF_FLG2&quot;/&gt; 	&lt;field name=&quot;VERSION3&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;C1_T_MTR_CONFIG_ID2&quot;/&gt; &lt;/pageBody&gt; </stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILMSMHP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://ccbtst01.grupaenerga-ivmx.pl:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SP_MTR_HIST_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SP_MTR_HIST_ID</stringProp>
              <stringProp name="RegexExtractor.regex">SP_MTR_HIST_ID&quot;:&quot;(.+?)&quot;,&quot;MTR_CONFIG_ID</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">brak SP_MTR_HIST_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Osoba" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Wyszukiwanie" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Wyszukiwanie osoby]/ouaf/search?service=CILCPERS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="SEARCH_TYPE" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">SEARCH_TYPE</stringProp>
                    <stringProp name="Argument.value">${SEARCH_TYPE}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PER_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.value">${PER_ID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">PER_ID</stringProp>
                  </elementProp>
                  <elementProp name="ENTITY_NAME" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ENTITY_NAME</stringProp>
                    <stringProp name="Argument.value">${ENTITY_NAME}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/search?service=CILCPERS</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Kasowanie" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Kasowanie osoby]/ouaf/pageDelete?service=CILCPERP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID&quot;&gt;${PER_ID}&lt;/field&gt;&lt;field name=&quot;ENTITY_INFO&quot;&gt;robak,mariusz&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME&quot;&gt;${ENTITY_NAME}&lt;/field&gt;&lt;field name=&quot;STATE_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE_POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PERSON_ACCT_INFO&quot;&gt;Ta osoba ma 0 kont(o).&lt;/field&gt;&lt;field name=&quot;PARENT_INFO&quot;&gt;Brak informacji o osobie nadrzędnej.&lt;/field&gt;&lt;field name=&quot;PER_ID_LIST_CHANGE&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ADD_ACCT_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CUST_CL_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GOTO_SS_SW&quot;&gt;&lt;/field&gt;&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;C1_VAL_SCR_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID2&quot;&gt;9055239965&lt;/field&gt;&lt;field name=&quot;PER_OR_BUS_FLG&quot;&gt;P&lt;/field&gt;&lt;field name=&quot;LS_SL_FLG&quot;&gt;N&lt;/field&gt;&lt;field name=&quot;LS_SL_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;EMAILID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OVRD_MAIL_NAME1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS4&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CITY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;STATE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY&quot;&gt;USA&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;2&lt;/field&gt;&lt;field name=&quot;LANGUAGE_CD&quot;&gt;ENG&lt;/field&gt;&lt;field name=&quot;OVRD_MAIL_NAME2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OVRD_MAIL_NAME3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WEB_PASSWD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RECV_MKTG_INFO_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WEB_PASSWD_ANS&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WEB_PWD_HINT_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_DATA_AREA&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY2&quot;&gt;USA&lt;/field&gt;&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;VERSION2&quot;&gt;11&lt;/field&gt;&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;STATE_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;LANGUAGE_CD2&quot;&gt;POL&lt;/field&gt;&lt;field name=&quot;DESCR&quot;&gt;United States of America&lt;/field&gt;&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres 1&lt;/field&gt;&lt;field name=&quot;ADDR2_LBL&quot;&gt;Adres 2&lt;/field&gt;&lt;field name=&quot;ADDR3_LBL&quot;&gt;Adres 3&lt;/field&gt;&lt;field name=&quot;ADDR4_LBL&quot;&gt;Adres 4&lt;/field&gt;&lt;field name=&quot;CITY_LBL&quot;&gt;City&lt;/field&gt;&lt;field name=&quot;NUM1_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY_LBL&quot;&gt;County&lt;/field&gt;&lt;field name=&quot;STATE_LBL&quot;&gt;Stan&lt;/field&gt;&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIM_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE_LBL&quot;&gt;&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"></stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisywanie" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie osoby z kontem - checkbox - zaloz konto automatycznie] /ouaf/pageAdd?service=CILCPERP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENTITY_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE_POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PERSON_ACCT_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PARENT_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID_LIST_CHANGE&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ADD_ACCT_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;CUST_CL_CD&quot;&gt;${klasaKlienta}&lt;/field&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GOTO_SS_SW&quot;&gt;&lt;/field&gt;&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;C1_VAL_SCR_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_OR_BUS_FLG&quot;&gt;${klIndywCzyFirm}&lt;/field&gt;&lt;field name=&quot;LS_SL_FLG&quot;&gt;${aparMedycznaWrazl} &lt;/field&gt;&lt;field name=&quot;LS_SL_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;EMAILID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OVRD_MAIL_NAME1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS4&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CITY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;STATE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY&quot;&gt;USA&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;LANGUAGE_CD&quot;&gt;ENG&lt;/field&gt;&lt;field name=&quot;OVRD_MAIL_NAME2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OVRD_MAIL_NAME3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WEB_PASSWD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RECV_MKTG_INFO_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WEB_PASSWD_ANS&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WEB_PWD_HINT_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_DATA_AREA&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY2&quot;&gt;USA&lt;/field&gt;&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;VERSION2&quot;&gt;11&lt;/field&gt;&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;STATE_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;LANGUAGE_CD2&quot;&gt;POL&lt;/field&gt;&lt;field name=&quot;DESCR&quot;&gt;United States of America&lt;/field&gt;&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres 1&lt;/field&gt;&lt;field name=&quot;ADDR2_LBL&quot;&gt;Adres 2&lt;/field&gt;&lt;field name=&quot;ADDR3_LBL&quot;&gt;Adres 3&lt;/field&gt;&lt;field name=&quot;ADDR4_LBL&quot;&gt;Adres 4&lt;/field&gt;&lt;field name=&quot;CITY_LBL&quot;&gt;City&lt;/field&gt;&lt;field name=&quot;NUM1_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY_LBL&quot;&gt;County&lt;/field&gt;&lt;field name=&quot;STATE_LBL&quot;&gt;Stan&lt;/field&gt;&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIM_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE_LBL&quot;&gt;&lt;/field&gt;&lt;list name=&quot;PER_IDENTIFIER&quot;&gt;&lt;listHeader&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_ID_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;lastInfo&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;A&quot;&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ID_TYPE_CD&quot;&gt;EIN&lt;/field&gt;&lt;field name=&quot;PER_ID_NBR&quot;&gt;${typIdIdentOsoby}&lt;/field&gt;&lt;field name=&quot;PRIM_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;ENCR_PER_ID_NBR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HASH_PER_ID_NBR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;IDENTIFIER_FMT&quot;&gt;99-9999999&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;list name=&quot;PER_NAME&quot;&gt;&lt;listHeader&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;lastInfo&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;A&quot;&gt;&lt;field name=&quot;ENTITY_NAME_UPR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SEQ_NUM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME&quot;&gt;${nazwaOsoby}&lt;/field&gt;&lt;field name=&quot;NAME_TYPE_FLG&quot;&gt;${nazwaTyp}&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;PRIM_NAME_SW&quot;&gt;false&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;list name=&quot;PER_PHONE&quot;&gt;&lt;listHeader&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;lastInfo&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;A&quot;&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SEQ_NUM&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${typNumTel}&lt;/field&gt;&lt;field name=&quot;COUNTRY_CODE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PHONE&quot;&gt;${nrTel}&lt;/field&gt;&lt;field name=&quot;EXTENSION&quot;&gt;&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PHONE_ALG_PARM_VAL&quot;&gt;(999) 999-9999&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ignoreWarnings</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCPERP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisywanie osoby bez konta (z aparaturą medyczną)" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie osoby bez konta (z aparaturą medyczną)]  /ouaf/pageAdd?service=CILCPERP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;PER_ID&quot;/&gt; 	&lt;field name=&quot;ENTITY_INFO&quot;/&gt; 	&lt;field name=&quot;ENTITY_NAME&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;PERSON_ACCT_INFO&quot;/&gt; 	&lt;field name=&quot;PARENT_INFO&quot;/&gt; 	&lt;field name=&quot;PER_ID_LIST_CHANGE&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADD_ACCT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUST_CL_CD&quot;&gt;${CUST_CL_CD}&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID&quot;/&gt; 	&lt;field name=&quot;GOTO_SS_SW&quot;/&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;PER_ID2&quot;/&gt; 	&lt;field name=&quot;PER_OR_BUS_FLG&quot;&gt;${PER_OR_BUS_FLG}&lt;/field&gt; 	&lt;field name=&quot;LS_SL_FLG&quot;&gt;${LS_SL_FLG}&lt;/field&gt; 	&lt;field name=&quot;LS_SL_DESCR&quot;&gt;${LS_SL_DESCR}&lt;/field&gt; 	&lt;field name=&quot;EMAILID&quot;&gt;${EMAILID}&lt;/field&gt; 	&lt;field name=&quot;OVRD_MAIL_NAME1&quot;/&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS2&quot;&gt;${ADDRESS2}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS3&quot;&gt;${ADDRESS3}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS4&quot;&gt;${ADDRESS4}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;COUNTY&quot;&gt;${COUNTY}&lt;/field&gt; 	&lt;field name=&quot;POSTAL&quot;&gt;${POSTAL}&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;OVRD_MAIL_NAME2&quot;/&gt; 	&lt;field name=&quot;OVRD_MAIL_NAME3&quot;/&gt; 	&lt;field name=&quot;WEB_PASSWD&quot;/&gt; 	&lt;field name=&quot;RECV_MKTG_INFO_FLG&quot;/&gt; 	&lt;field name=&quot;WEB_PASSWD_ANS&quot;/&gt; 	&lt;field name=&quot;WEB_PWD_HINT_FLG&quot;/&gt; 	&lt;field name=&quot;PER_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;list name=&quot;PER_IDENTIFIER&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;LAST_ID_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;ID_TYPE_CD&quot;&gt;${ID_TYPE_CD01}&lt;/field&gt; 			&lt;field name=&quot;PER_ID_NBR&quot;&gt;${PER_ID_NBR01}&lt;/field&gt; 			&lt;field name=&quot;PRIM_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ENCR_PER_ID_NBR&quot;/&gt; 			&lt;field name=&quot;HASH_PER_ID_NBR&quot;/&gt; 			&lt;field name=&quot;IDENTIFIER_FMT&quot;&gt;9999999999&lt;/field&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;ID_TYPE_CD&quot;&gt;${ID_TYPE_CD02}&lt;/field&gt; 			&lt;field name=&quot;PER_ID_NBR&quot;&gt;${PER_ID_NBR02}&lt;/field&gt; 			&lt;field name=&quot;PRIM_SW&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;ENCR_PER_ID_NBR&quot;/&gt; 			&lt;field name=&quot;HASH_PER_ID_NBR&quot;/&gt; 			&lt;field name=&quot;IDENTIFIER_FMT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;PER_NAME&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ENTITY_NAME_UPR&quot;/&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ENTITY_NAME&quot;&gt;${KlasaKlienta}${ENTITY_NAME}&lt;/field&gt; 			&lt;field name=&quot;NAME_TYPE_FLG&quot;&gt;${NAME_TYPE_FLG}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PRIM_NAME_SW&quot;&gt;false&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;PER_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;SEQ_NUM&quot;/&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;PHONE_ALG_PARM_VAL&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCPERP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ccbtst01.grupaenerga-ivmx.pl:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-24061823">resultCode&quot;: &quot;E&quot;</stringProp>
                  <stringProp name="-24061265">resultCode&quot;: &quot;W&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1798022514">while.1....resultCode........searchList.....header....moreRows..false...list..\[\]..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PER_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">PER_ID&quot;:&quot;(.*)&quot;,&quot;ENTITY_INFO</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak PER_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PER_ID_NBR" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PER_ID_NBR</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;PER_ID_NBR&quot;:&quot;(.*?)&quot;,&quot;PR</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak PER_ID_NBR</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>false</time>
                    <latency>false</latency>
                    <timestamp>false</timestamp>
                    <success>false</success>
                    <label>false</label>
                    <code>false</code>
                    <message>false</message>
                    <threadName>false</threadName>
                    <dataType>false</dataType>
                    <encoding>false</encoding>
                    <assertions>false</assertions>
                    <subresults>false</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>false</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                  </value>
                </objProp>
                <stringProp name="filename">Konta/Test_${__time(YMDHMS)}/konta.csv</stringProp>
              </ResultCollector>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PHONE_TYPE_CD" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PHONE_TYPE_CD</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;PHONE_TYPE_CD&quot;:&quot;(.*)&quot;,&quot;COUNTRY_CODE&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak PHONE_TYPE_CD</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PHONE" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PHONE</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;&quot;,&quot;PHONE&quot;:&quot;(.*)&quot;,&quot;EXTENSION&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak PHONE</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
              </GaussianRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisywanie osoby bez konta (bez aparatury medycznej)" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie osoby bez konta (bez aparatury medycznej)j]  /ouaf/pageAdd?service=CILCPERP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;PER_ID&quot;/&gt; 	&lt;field name=&quot;ENTITY_INFO&quot;/&gt; 	&lt;field name=&quot;ENTITY_NAME&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;PERSON_ACCT_INFO&quot;/&gt; 	&lt;field name=&quot;PARENT_INFO&quot;/&gt; 	&lt;field name=&quot;PER_ID_LIST_CHANGE&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADD_ACCT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUST_CL_CD&quot;&gt;${CUST_CL_CD}&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID&quot;/&gt; 	&lt;field name=&quot;GOTO_SS_SW&quot;/&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;PER_ID2&quot;/&gt; 	&lt;field name=&quot;PER_OR_BUS_FLG&quot;&gt;${PER_OR_BUS_FLG}&lt;/field&gt; 	&lt;field name=&quot;LS_SL_FLG&quot;&gt;${LS_SL_FLG}&lt;/field&gt; 	&lt;field name=&quot;LS_SL_DESCR&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;&gt;${EMAILID}&lt;/field&gt; 	&lt;field name=&quot;OVRD_MAIL_NAME1&quot;/&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS2&quot;&gt;${ADDRESS2}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS3&quot;&gt;${ADDRESS3}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS4&quot;&gt;${ADDRESS4}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;COUNTY&quot;&gt;${COUNTY}&lt;/field&gt; 	&lt;field name=&quot;POSTAL&quot;&gt;${POSTAL}&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;OVRD_MAIL_NAME2&quot;/&gt; 	&lt;field name=&quot;OVRD_MAIL_NAME3&quot;/&gt; 	&lt;field name=&quot;WEB_PASSWD&quot;/&gt; 	&lt;field name=&quot;RECV_MKTG_INFO_FLG&quot;/&gt; 	&lt;field name=&quot;WEB_PASSWD_ANS&quot;/&gt; 	&lt;field name=&quot;WEB_PWD_HINT_FLG&quot;/&gt; 	&lt;field name=&quot;PER_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;list name=&quot;PER_IDENTIFIER&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;LAST_ID_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;ID_TYPE_CD&quot;&gt;${ID_TYPE_CD01}&lt;/field&gt; 			&lt;field name=&quot;PER_ID_NBR&quot;&gt;${PER_ID_NBR01}&lt;/field&gt; 			&lt;field name=&quot;PRIM_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ENCR_PER_ID_NBR&quot;/&gt; 			&lt;field name=&quot;HASH_PER_ID_NBR&quot;/&gt; 			&lt;field name=&quot;IDENTIFIER_FMT&quot;&gt;9999999999&lt;/field&gt; 		&lt;/listBody&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;ID_TYPE_CD&quot;&gt;${ID_TYPE_CD02}&lt;/field&gt; 			&lt;field name=&quot;PER_ID_NBR&quot;&gt;${PER_ID_NBR02}&lt;/field&gt; 			&lt;field name=&quot;PRIM_SW&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;ENCR_PER_ID_NBR&quot;/&gt; 			&lt;field name=&quot;HASH_PER_ID_NBR&quot;/&gt; 			&lt;field name=&quot;IDENTIFIER_FMT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;PER_NAME&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ENTITY_NAME_UPR&quot;/&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ENTITY_NAME&quot;&gt;${KlasaKlienta}${ENTITY_NAME}&lt;/field&gt; 			&lt;field name=&quot;NAME_TYPE_FLG&quot;&gt;${NAME_TYPE_FLG}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PRIM_NAME_SW&quot;&gt;false&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;PER_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;SEQ_NUM&quot;/&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;PHONE_ALG_PARM_VAL&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCPERP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ccbtst01.grupaenerga-ivmx.pl:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-24061823">resultCode&quot;: &quot;E&quot;</stringProp>
                  <stringProp name="-24061265">resultCode&quot;: &quot;W&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1798022514">while.1....resultCode........searchList.....header....moreRows..false...list..\[\]..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PER_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">PER_ID&quot;:&quot;(.*)&quot;,&quot;ENTITY_INFO</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak PER_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PER_ID_NBR" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PER_ID_NBR</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;PER_ID_NBR&quot;:&quot;(.*?)&quot;,&quot;PR</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak PER_ID_NBR</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PHONE_TYPE_CD" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PHONE_TYPE_CD</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;PHONE_TYPE_CD&quot;:&quot;(.*)&quot;,&quot;COUNTRY_CODE&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak PHONE_TYPE_CD</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PHONE" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PHONE</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;&quot;,&quot;PHONE&quot;:&quot;(.*)&quot;,&quot;EXTENSION&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak PHONE</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
              </GaussianRandomTimer>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisywanie osoby bez konta (parametryzowalna)" enabled="true">
            <stringProp name="TestPlan.comments">osoba parametryzowalna celem generowania vek dla osob w projekcie</stringProp>
          </GenericController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Zapisywanie osoby bez konta (parametryzowalna) /ouaf/pageAdd?service=CILCPERP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;PER_ID&quot;/&gt; 	&lt;field name=&quot;ENTITY_INFO&quot;/&gt; 	&lt;field name=&quot;ENTITY_NAME&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;PERSON_ACCT_INFO&quot;/&gt; 	&lt;field name=&quot;PARENT_INFO&quot;/&gt; 	&lt;field name=&quot;PER_ID_LIST_CHANGE&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADD_ACCT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUST_CL_CD&quot;&gt;${CUST_CL_CD}&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID&quot;/&gt; 	&lt;field name=&quot;GOTO_SS_SW&quot;/&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;PER_ID2&quot;/&gt; 	&lt;field name=&quot;PER_OR_BUS_FLG&quot;&gt;${PER_OR_BUS_FLG}&lt;/field&gt; 	&lt;field name=&quot;LS_SL_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;LS_SL_DESCR&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;OVRD_MAIL_NAME1&quot;/&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS2&quot;&gt;${ADDRESS2}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS3&quot;&gt;${ADDRESS3}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS4&quot;&gt;${ADDRESS4}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;COUNTY&quot;&gt;${COUNTY}&lt;/field&gt; 	&lt;field name=&quot;POSTAL&quot;&gt;${POSTAL}&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;OVRD_MAIL_NAME2&quot;/&gt; 	&lt;field name=&quot;OVRD_MAIL_NAME3&quot;/&gt; 	&lt;field name=&quot;WEB_PASSWD&quot;/&gt; 	&lt;field name=&quot;RECV_MKTG_INFO_FLG&quot;/&gt; 	&lt;field name=&quot;WEB_PASSWD_ANS&quot;/&gt; 	&lt;field name=&quot;WEB_PWD_HINT_FLG&quot;/&gt; 	&lt;field name=&quot;PER_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;list name=&quot;PER_IDENTIFIER&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;LAST_ID_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;ID_TYPE_CD&quot;&gt;PESEL&lt;/field&gt; 			&lt;field name=&quot;PER_ID_NBR&quot;&gt;${LosowaLiczbaPerIdNbr}&lt;/field&gt; 			&lt;field name=&quot;PRIM_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ENCR_PER_ID_NBR&quot;/&gt; 			&lt;field name=&quot;HASH_PER_ID_NBR&quot;/&gt; 			&lt;field name=&quot;IDENTIFIER_FMT&quot;&gt;${LosowaLiczba}&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;PER_NAME&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ENTITY_NAME_UPR&quot;/&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ENTITY_NAME&quot;&gt;${ENTITY_NAME}${C}&lt;/field&gt; 			&lt;field name=&quot;NAME_TYPE_FLG&quot;&gt;${NAME_TYPE_FLG}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PRIM_NAME_SW&quot;&gt;false&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;PER_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;SEQ_NUM&quot;/&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}${LosowaLiczbaNrTel}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;PHONE_ALG_PARM_VAL&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCPERP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ccbtst01.grupaenerga-ivmx.pl:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-24061823">resultCode&quot;: &quot;E&quot;</stringProp>
                  <stringProp name="-24061265">resultCode&quot;: &quot;W&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-1798022514">while.1....resultCode........searchList.....header....moreRows..false...list..\[\]..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PER_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PER_ID</stringProp>
                <stringProp name="RegexExtractor.regex">PER_ID&quot;:&quot;(.*)&quot;,&quot;ENTITY_INFO</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak PER_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PER_ID_NBR" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">PER_ID_NBR</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;PER_ID_NBR&quot;:&quot;(.*?)&quot;,&quot;PR</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak PER_ID_NBR</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>false</time>
                    <latency>false</latency>
                    <timestamp>false</timestamp>
                    <success>false</success>
                    <label>false</label>
                    <code>false</code>
                    <message>false</message>
                    <threadName>false</threadName>
                    <dataType>false</dataType>
                    <encoding>false</encoding>
                    <assertions>false</assertions>
                    <subresults>false</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>false</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                  </value>
                </objProp>
                <stringProp name="filename">Konta/Test_${__time(YMDHMS)}/konta.csv</stringProp>
              </ResultCollector>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Konto" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zapisywanie konta" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie konta] /ouaf/pageAdd?service=CILCACCP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CAL_APPLY_BUD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;RECOMMEND_BUD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;QUICK_ADD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID&quot;/&gt; 	&lt;field name=&quot;BILL_CYC_CD&quot;&gt;${BILL_CYC_CD}&lt;/field&gt; 	&lt;field name=&quot;SETUP_DT&quot;&gt;${SETUP_DT}&lt;/field&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;${CURRENCY_CD}&lt;/field&gt; 	&lt;field name=&quot;ACCT_MGMT_GRP_CD&quot;&gt;${ACCT_MGMT_GRP_CD}&lt;/field&gt; 	&lt;field name=&quot;ALERT_INFO&quot;&gt;${ALERT_INFO}&lt;/field&gt; 	&lt;field name=&quot;BILL_AFTER_DT&quot;/&gt; 	&lt;field name=&quot;PROTECT_CYC_SW&quot;&gt;${PROTECT_CYC_SW}&lt;/field&gt; 	&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PROTECT_PREM_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COLL_CL_CD&quot;&gt;TPA&lt;/field&gt; 	&lt;field name=&quot;CR_REVIEW_DT&quot;/&gt; 	&lt;field name=&quot;POSTPONE_CR_RVW_DT&quot;/&gt; 	&lt;field name=&quot;INT_CR_REVIEW_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUST_CL_CD&quot;&gt;${CUST_CL_CD}&lt;/field&gt; 	&lt;field name=&quot;BILL_PRT_INTERCEPT&quot;/&gt; 	&lt;field name=&quot;NO_DEP_RVW_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUD_PLAN_CD&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;PROTECT_DIV_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACCESS_GRP_CD&quot;&gt;***&lt;/field&gt; 	&lt;field name=&quot;ACCT_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;C1_T_QUICK_ADD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;USER_INFO&quot;/&gt; 	&lt;field name=&quot;ACCT_CHECK_DIGIT&quot;/&gt; 	&lt;field name=&quot;PAY_ADV_FUNC_SUPP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DFLT_APAY_FLG&quot;&gt;C1DD&lt;/field&gt; 	&lt;field name=&quot;QUICK_ADD_SW2&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUST_CL_CD2&quot;/&gt; 	&lt;field name=&quot;ACCT_MGMT_GRP_CD2&quot;/&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;/&gt; 	&lt;field name=&quot;PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;/&gt; 	&lt;field name=&quot;ADDRESS1&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;CITY&quot;/&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;/&gt; 	&lt;field name=&quot;MGMT_DESCR&quot;/&gt; 	&lt;field name=&quot;ACCESS_DESCR&quot;&gt;Domyślna grupa dostępu&lt;/field&gt; 	&lt;field name=&quot;ENTITY_NAME&quot;&gt;jmeterfabryka maku14036&lt;/field&gt; 	&lt;field name=&quot;ENTITY_INFO&quot;&gt;jmeterfabryka maku14036&lt;/field&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;CUR_BAL&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_BAL&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_CASH_ONLY_PTS&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;TOT_CR_RATING_PTS&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;NEW_BUD_DT&quot;&gt;2013-12-17&lt;/field&gt; 	&lt;field name=&quot;TOT_BUD_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_NEW_BUD&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_CD_ON_HAND_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_CD_REQ_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_NCD_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_ON_HAND_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;list name=&quot;ACCT_PER&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;/&gt; 			&lt;field name=&quot;LAST_FIN_RESP_SW&quot;/&gt; 			&lt;field name=&quot;LAST_MAIN_CUST_SW&quot;/&gt; 			&lt;field name=&quot;LAST_PER_ID&quot;/&gt; 			&lt;field name=&quot;QUICK_ADD_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;/&gt; 			&lt;field name=&quot;ACCT_REL_TYPE_CD&quot;&gt;${ACCT_REL_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 			&lt;field name=&quot;PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 			&lt;field name=&quot;MAIN_CUST_SW&quot;&gt;${MAIN_CUST_SW}&lt;/field&gt; 			&lt;field name=&quot;FIN_RESP_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;THRD_PTY_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;RECEIVE_COPY_SW&quot;&gt;${RECEIVE_COPY_SW}&lt;/field&gt; 			&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;${BILL_RTE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;BILL_FORMAT_FLG&quot;&gt;${BILL_FORMAT_FLG}&lt;/field&gt; 			&lt;field name=&quot;NBR_BILL_COPIES&quot;&gt;${NBR_BILL_COPIES}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;CUST_PO_ID&quot;/&gt; 			&lt;field name=&quot;NOTIFY_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;NAME_PFX_SFX&quot;/&gt; 			&lt;field name=&quot;PFX_SFX_FLG&quot;/&gt; 			&lt;field name=&quot;QTE_RTE_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;RECV_QTE_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;WEB_ACCESS_FLG&quot;&gt;ALWD&lt;/field&gt; 			&lt;field name=&quot;C1_T_QUICK_ADD_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;ACCT_ID2&quot;/&gt; 			&lt;field name=&quot;PER_ID2&quot;/&gt; 			&lt;field name=&quot;ADDRESS1&quot;/&gt; 			&lt;field name=&quot;ADDRESS2&quot;/&gt; 			&lt;field name=&quot;ADDRESS3&quot;/&gt; 			&lt;field name=&quot;ADDRESS4&quot;/&gt; 			&lt;field name=&quot;CITY&quot;/&gt; 			&lt;field name=&quot;NUM1&quot;/&gt; 			&lt;field name=&quot;NUM2&quot;/&gt; 			&lt;field name=&quot;COUNTY&quot;/&gt; 			&lt;field name=&quot;POSTAL&quot;/&gt; 			&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 			&lt;field name=&quot;GEO_CODE&quot;/&gt; 			&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STATE&quot;/&gt; 			&lt;field name=&quot;COUNTRY&quot;/&gt; 			&lt;field name=&quot;VERSION2&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;COUNTRY2&quot;/&gt; 			&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CITY_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;VERSION3&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;LANGUAGE_CD&quot;/&gt; 			&lt;field name=&quot;DESCR&quot;/&gt; 			&lt;field name=&quot;ADDR1_LBL&quot;/&gt; 			&lt;field name=&quot;ADDR2_LBL&quot;/&gt; 			&lt;field name=&quot;ADDR3_LBL&quot;/&gt; 			&lt;field name=&quot;ADDR4_LBL&quot;/&gt; 			&lt;field name=&quot;CITY_LBL&quot;/&gt; 			&lt;field name=&quot;NUM1_LBL&quot;/&gt; 			&lt;field name=&quot;NUM2_LBL&quot;/&gt; 			&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 			&lt;field name=&quot;COUNTY_LBL&quot;/&gt; 			&lt;field name=&quot;STATE_LBL&quot;/&gt; 			&lt;field name=&quot;POSTAL_LBL&quot;/&gt; 			&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 			&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 			&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 			&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 			&lt;field name=&quot;ENTITY_NAME&quot;&gt;jmeterfabryka maku14036&lt;/field&gt; 			&lt;field name=&quot;ENTITY_INFO&quot;&gt;jmeterfabryka maku14036&lt;/field&gt; 			&lt;field name=&quot;BILL_RTE_TYPE_INFO&quot;/&gt; 			&lt;field name=&quot;QTE_RTE_TYPE_INFO&quot;/&gt; 			&lt;field name=&quot;BILL_ADDR_SRC_INFO&quot;/&gt; 			&lt;field name=&quot;STATE_DESCR&quot;/&gt; 			&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ignoreWarnings</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCACCP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ccbtst01.grupaenerga-ivmx.pl:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCT_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACCT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">ACCT_ID&quot;:&quot;(.*)&quot;,&quot;BILL_CYC_CD</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak ACCT_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCT_NAME" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACCT_NAME</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;ACCT_INFO&quot;:&quot;(.*)&quot;,&quot;MGMT_DESCR&quot;:</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak ACCT_NAME</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
                <boolProp name="ResultCollector.error_logging">false</boolProp>
                <objProp>
                  <name>saveConfig</name>
                  <value class="SampleSaveConfiguration">
                    <time>false</time>
                    <latency>false</latency>
                    <timestamp>false</timestamp>
                    <success>false</success>
                    <label>false</label>
                    <code>false</code>
                    <message>false</message>
                    <threadName>false</threadName>
                    <dataType>false</dataType>
                    <encoding>false</encoding>
                    <assertions>false</assertions>
                    <subresults>false</subresults>
                    <responseData>false</responseData>
                    <samplerData>false</samplerData>
                    <xml>false</xml>
                    <fieldNames>true</fieldNames>
                    <responseHeaders>false</responseHeaders>
                    <requestHeaders>false</requestHeaders>
                    <responseDataOnError>false</responseDataOnError>
                    <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                    <assertionsResultsToSave>0</assertionsResultsToSave>
                  </value>
                </objProp>
                <stringProp name="filename">Dane_kont_VKI_PG/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
              </ResultCollector>
              <hashTree/>
              <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="false">
                <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
              </GaussianRandomTimer>
              <hashTree/>
              <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="false">
                <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
              </GaussianRandomTimer>
              <hashTree/>
            </hashTree>
            <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="false">
              <boolProp name="resetInterpreter">false</boolProp>
              <stringProp name="parameters">ACCT_ID</stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="script">refnum = vars.get(&quot;ACCT_ID&quot;);
f = new FileOutputStream(&quot;C:\\Report\\result.txt&quot;);
p = new PrintStream(f);
this.interpreter.setOut(p);
print(&quot;ACCT_ID,&quot; + refnum);
f.close();</stringProp>
            </BeanShellPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Konta/kontasimple.csv</stringProp>
            </ResultCollector>
            <hashTree/>
            <ForeachController guiclass="ForeachControlPanel" testclass="ForeachController" testname="ForEach Controller-get" enabled="false">
              <stringProp name="ForeachController.inputVal">ACCT_ID</stringProp>
              <stringProp name="ForeachController.returnVal">ACCT_ID_OUT</stringProp>
              <boolProp name="ForeachController.useSeparator">true</boolProp>
            </ForeachController>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Dane_utworzonego_konta/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
            </ResultCollector>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Wyszukiwanie konta" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Wyszukiwanie konta] /ouaf/search?service=CILCACCS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="SEARCH_TYPE" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">SEARCH_TYPE</stringProp>
                    <stringProp name="Argument.value">${SEARCH_TYPE}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ENTITY_NAME" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ENTITY_NAME</stringProp>
                    <stringProp name="Argument.value">${ENTITY_NAME}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ACCT_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${ACCT_ID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">ACCT_ID</stringProp>
                  </elementProp>
                  <elementProp name="PER_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">${PER_ID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    <stringProp name="Argument.name">PER_ID</stringProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">uefAmqE5V7MAoGCtxOUVlYKlW6m+4SfzM+DRn271CHo=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/search?service=CILCACCS</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://ccbtst01.grupaenerga-ivmx.pl:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Klient" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Dodawanie osoby" enabled="true"/>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Wybor &quot;Main menu &gt; Customer Information &gt; Add Person&quot;" enabled="false">
              <boolProp name="TransactionController.parent">false</boolProp>
              <boolProp name="TransactionController.includeTimers">false</boolProp>
            </TransactionController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="ST008_STEP_001 Wybor &quot;Main menu &gt; Customer Information &gt; Add Person&quot;" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ST008_STEP_001 Wybor &quot;Main menu &gt; Customer Information &gt; Add Person&quot;" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="pageBody" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">pageBody</stringProp>
                        <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;AD&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                        <stringProp name="Argument.value">${SecurityToken}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="userProfileXML" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">userProfileXML</stringProp>
                        <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;hh:mma&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;,&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;.&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;MM-dd-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILCPERP</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.image_parser">true</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">pl</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB6.3; BTRS124342; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">http://192.168.122.21:6500/ouaf/cisMain.jsp?language=ENG</stringProp>
                      </elementProp>
                      <elementProp name="Pragma" elementType="Header">
                        <stringProp name="Header.name">Pragma</stringProp>
                        <stringProp name="Header.value">no-cache</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ST008_STEP_001 Wybor &quot;Main menu &gt; Customer Information &gt; Add Person&quot;" enabled="false">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="pageBody" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">pageBody</stringProp>
                        <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;AD&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                        <stringProp name="Argument.value">${SecurityToken}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="userProfileXML" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">userProfileXML</stringProp>
                        <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;hh:mma&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;,&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;.&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;MM-dd-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILCPERP</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.image_parser">true</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">pl</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB6.3; BTRS124342; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">http://192.168.122.21:6500/ouaf/cisMain.jsp?language=ENG</stringProp>
                      </elementProp>
                      <elementProp name="Pragma" elementType="Header">
                        <stringProp name="Header.name">Pragma</stringProp>
                        <stringProp name="Header.value">no-cache</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Dodawanie osoby" enabled="true">
              <boolProp name="TransactionController.parent">false</boolProp>
              <boolProp name="TransactionController.includeTimers">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="STW008_STEP_002 Dodawanie klienta" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENTITY_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE_POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PERSON_ACCT_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PARENT_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID_LIST_CHANGE&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ADD_ACCT_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;CUST_CL_CD&quot;&gt;R&lt;/field&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GOTO_SS_SW&quot;&gt;&lt;/field&gt;&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;C1_VAL_SCR_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_OR_BUS_FLG&quot;&gt;P&lt;/field&gt;&lt;field name=&quot;LS_SL_FLG&quot;&gt;N&lt;/field&gt;&lt;field name=&quot;LS_SL_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;EMAILID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OVRD_MAIL_NAME1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt;&lt;field name=&quot;ADDRESS2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS4&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt;&lt;field name=&quot;NUM1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;STATE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY&quot;&gt;USA&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;LANGUAGE_CD&quot;&gt;ENG&lt;/field&gt;&lt;field name=&quot;OVRD_MAIL_NAME2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OVRD_MAIL_NAME3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WEB_PASSWD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RECV_MKTG_INFO_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WEB_PASSWD_ANS&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WEB_PWD_HINT_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_DATA_AREA&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY2&quot;&gt;USA&lt;/field&gt;&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;VERSION2&quot;&gt;7&lt;/field&gt;&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;STATE_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;LANGUAGE_CD2&quot;&gt;ENG&lt;/field&gt;&lt;field name=&quot;DESCR&quot;&gt;United States of America&lt;/field&gt;&lt;field name=&quot;ADDR1_LBL&quot;&gt;Address 1&lt;/field&gt;&lt;field name=&quot;ADDR2_LBL&quot;&gt;Address 2&lt;/field&gt;&lt;field name=&quot;ADDR3_LBL&quot;&gt;Address 3&lt;/field&gt;&lt;field name=&quot;ADDR4_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CITY_LBL&quot;&gt;City&lt;/field&gt;&lt;field name=&quot;NUM1_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY_LBL&quot;&gt;County&lt;/field&gt;&lt;field name=&quot;STATE_LBL&quot;&gt;State&lt;/field&gt;&lt;field name=&quot;POSTAL_LBL&quot;&gt;Postal&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIM_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE_LBL&quot;&gt;&lt;/field&gt;&lt;list name=&quot;PER_IDENTIFIER&quot;&gt;&lt;listHeader&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_ID_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;lastInfo&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;A&quot;&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ID_TYPE_CD&quot;&gt;DL&lt;/field&gt;&lt;field name=&quot;PER_ID_NBR&quot;&gt;${PER_ID_NBR}${LosowaLiczba}&lt;/field&gt;&lt;field name=&quot;PRIM_SW&quot;&gt;&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENCR_PER_ID_NBR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HASH_PER_ID_NBR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;IDENTIFIER_FMT&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;list name=&quot;PER_NAME&quot;&gt;&lt;listHeader&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;lastInfo&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;A&quot;&gt;&lt;field name=&quot;ENTITY_NAME_UPR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SEQ_NUM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME&quot;&gt;JMETER${ENTITY_NAME} ${LosowaLiczba}&lt;/field&gt;&lt;field name=&quot;NAME_TYPE_FLG&quot;&gt;PRIM&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;PRIM_NAME_SW&quot;&gt;false&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;list name=&quot;PER_PHONE&quot;&gt;&lt;listHeader&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;lastInfo&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;A&quot;&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SEQ_NUM&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;MOBILE&lt;/field&gt;&lt;field name=&quot;COUNTRY_CODE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt;&lt;field name=&quot;EXTENSION&quot;&gt;&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PHONE_ALG_PARM_VAL&quot;&gt;(999) 999-9999&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;hh:mma&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;,&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;.&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;MM-dd-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCPERP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.image_parser">true</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB6.3; BTRS124342; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.122.21:6500/ouaf/cisMain.jsp?language=ENG</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1798022514">while.1....resultCode........searchList.....header....moreRows..false...list..\[\]..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PER_ID" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PER_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">PER_ID&quot;:&quot;(.*)&quot;,&quot;ENTITY_INFO</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">Brak PER_ID</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCT_ID" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">ACCT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">ACCT_ID&quot;:&quot;(.*)&quot;,&quot;GOTO</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">Brak ACCT_ID</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PER_ID_NBR" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PER_ID_NBR</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;PER_ID_NBR&quot;:&quot;(.*?)&quot;,&quot;PR</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">Brak PER_ID_NBR</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                  <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
                </GaussianRandomTimer>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="STW008_STEP_002 Dodawanie klienta" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENTITY_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE_POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PERSON_ACCT_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PARENT_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID_LIST_CHANGE&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ADD_ACCT_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;CUST_CL_CD&quot;&gt;R&lt;/field&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GOTO_SS_SW&quot;&gt;&lt;/field&gt;&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;C1_VAL_SCR_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_OR_BUS_FLG&quot;&gt;P&lt;/field&gt;&lt;field name=&quot;LS_SL_FLG&quot;&gt;N&lt;/field&gt;&lt;field name=&quot;LS_SL_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;EMAILID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OVRD_MAIL_NAME1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt;&lt;field name=&quot;ADDRESS2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS4&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt;&lt;field name=&quot;NUM1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;STATE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY&quot;&gt;USA&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;LANGUAGE_CD&quot;&gt;ENG&lt;/field&gt;&lt;field name=&quot;OVRD_MAIL_NAME2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OVRD_MAIL_NAME3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WEB_PASSWD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RECV_MKTG_INFO_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WEB_PASSWD_ANS&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WEB_PWD_HINT_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_DATA_AREA&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY2&quot;&gt;USA&lt;/field&gt;&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;VERSION2&quot;&gt;7&lt;/field&gt;&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;STATE_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;LANGUAGE_CD2&quot;&gt;ENG&lt;/field&gt;&lt;field name=&quot;DESCR&quot;&gt;United States of America&lt;/field&gt;&lt;field name=&quot;ADDR1_LBL&quot;&gt;Address 1&lt;/field&gt;&lt;field name=&quot;ADDR2_LBL&quot;&gt;Address 2&lt;/field&gt;&lt;field name=&quot;ADDR3_LBL&quot;&gt;Address 3&lt;/field&gt;&lt;field name=&quot;ADDR4_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CITY_LBL&quot;&gt;City&lt;/field&gt;&lt;field name=&quot;NUM1_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY_LBL&quot;&gt;County&lt;/field&gt;&lt;field name=&quot;STATE_LBL&quot;&gt;State&lt;/field&gt;&lt;field name=&quot;POSTAL_LBL&quot;&gt;Postal&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIM_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE_LBL&quot;&gt;&lt;/field&gt;&lt;list name=&quot;PER_IDENTIFIER&quot;&gt;&lt;listHeader&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_ID_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;lastInfo&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;A&quot;&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ID_TYPE_CD&quot;&gt;DL&lt;/field&gt;&lt;field name=&quot;PER_ID_NBR&quot;&gt;${PER_ID_NBR}${LosowaLiczba}&lt;/field&gt;&lt;field name=&quot;PRIM_SW&quot;&gt;&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENCR_PER_ID_NBR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HASH_PER_ID_NBR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;IDENTIFIER_FMT&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;list name=&quot;PER_NAME&quot;&gt;&lt;listHeader&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;lastInfo&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;A&quot;&gt;&lt;field name=&quot;ENTITY_NAME_UPR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SEQ_NUM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME&quot;&gt;JMETER${ENTITY_NAME} ${LosowaLiczba}&lt;/field&gt;&lt;field name=&quot;NAME_TYPE_FLG&quot;&gt;PRIM&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;PRIM_NAME_SW&quot;&gt;false&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;list name=&quot;PER_PHONE&quot;&gt;&lt;listHeader&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;lastInfo&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;A&quot;&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SEQ_NUM&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;MOBILE&lt;/field&gt;&lt;field name=&quot;COUNTRY_CODE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt;&lt;field name=&quot;EXTENSION&quot;&gt;&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PHONE_ALG_PARM_VAL&quot;&gt;(999) 999-9999&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;hh:mma&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;,&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;.&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;MM-dd-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      <stringProp name="Argument.name">ignoreWarnings</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCPERP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                <boolProp name="HTTPSampler.image_parser">true</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB6.3; BTRS124342; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.122.21:6500/ouaf/cisMain.jsp?language=ENG</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-1798022514">while.1....resultCode........searchList.....header....moreRows..false...list..\[\]..</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PER_ID" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PER_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">PER_ID&quot;:&quot;(.*)&quot;,&quot;ENTITY_INFO</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">Brak PER_ID</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCT_ID" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">ACCT_ID</stringProp>
                  <stringProp name="RegexExtractor.regex">ACCT_ID&quot;:&quot;(.*)&quot;,&quot;GOTO</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">Brak ACCT_ID</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PER_ID_NBR" enabled="true">
                  <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                  <stringProp name="RegexExtractor.refname">PER_ID_NBR</stringProp>
                  <stringProp name="RegexExtractor.regex">&quot;PER_ID_NBR&quot;:&quot;(.*?)&quot;,&quot;PR</stringProp>
                  <stringProp name="RegexExtractor.template">$1$</stringProp>
                  <stringProp name="RegexExtractor.default">Brak PER_ID_NBR</stringProp>
                  <stringProp name="RegexExtractor.match_number">1</stringProp>
                </RegexExtractor>
                <hashTree/>
                <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                  <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                  <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
                </GaussianRandomTimer>
                <hashTree/>
              </hashTree>
            </hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Wyświetlenie rezultatu dodawania klienta i zapis rezultatu do pliku" enabled="false">
              <boolProp name="TransactionController.parent">false</boolProp>
              <boolProp name="TransactionController.includeTimers">false</boolProp>
            </TransactionController>
            <hashTree>
              <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="STW008_STEP_003 Wyświetlenie rezultatu dodawania klienta i zapis rezultatu do pliku" enabled="true"/>
              <hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="STW008_STEP_003 /ouaf/pageRead?service=CILCCNXP&amp;ignoreWarnings=true" enabled="false">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="CONTEXT_NAME1" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">CONTEXT_NAME1</stringProp>
                        <stringProp name="Argument.value">ACCT_ID</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="CONTEXT_VALUE1" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">CONTEXT_VALUE1</stringProp>
                        <stringProp name="Argument.value">${ACCT_ID}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="CONTEXT_NAME2" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">CONTEXT_NAME2</stringProp>
                        <stringProp name="Argument.value">PER_ID</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="CONTEXT_VALUE2" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">CONTEXT_VALUE2</stringProp>
                        <stringProp name="Argument.value">${PER_ID}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="CONTEXT_NAME3" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">CONTEXT_NAME3</stringProp>
                        <stringProp name="Argument.value">PREM_ID</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="CONTEXT_VALUE3" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">CONTEXT_VALUE3</stringProp>
                        <stringProp name="Argument.value"></stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                        <stringProp name="Argument.value">${SecurityToken}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="userProfileXML" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">userProfileXML</stringProp>
                        <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;hh:mma&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;,&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;.&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;MM-dd-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/ouaf/pageRead?service=CILCCNXP&amp;ignoreWarnings=true</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.image_parser">true</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">pl</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB6.3; BTRS124342; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">http://192.168.122.21:6500/ouaf/cisMain.jsp?language=ENG</stringProp>
                      </elementProp>
                      <elementProp name="Pragma" elementType="Header">
                        <stringProp name="Header.name">Pragma</stringProp>
                        <stringProp name="Header.value">no-cache</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="954925063">message</stringProp>
                      <stringProp name="2078874">Brak</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">6</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="STW008_STEP_003 /ouaf/search?service=CILCACCS" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="SEARCH_TYPE" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">SEARCH_TYPE</stringProp>
                        <stringProp name="Argument.value">MN</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ACCT_ID" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ACCT_ID</stringProp>
                        <stringProp name="Argument.value">${ACCT_ID}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                        <stringProp name="Argument.value">${SecurityToken}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="userProfileXML" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">userProfileXML</stringProp>
                        <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;hh:mma&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;,&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;.&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;MM-dd-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/ouaf/search?service=CILCACCS</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.image_parser">true</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">pl</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB6.3; BTRS124342; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">http://192.168.122.21:6500/ouaf/cisMain.jsp?language=ENG</stringProp>
                      </elementProp>
                      <elementProp name="Pragma" elementType="Header">
                        <stringProp name="Header.name">Pragma</stringProp>
                        <stringProp name="Header.value">no-cache</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="-2058859688">&quot;list&quot;:\[\]</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">6</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                </hashTree>
                <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="STW008_STEP_003 /ouaf/pageRead?service=CILCSSEP&amp;ignoreWarnings=true" enabled="true">
                  <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                    <collectionProp name="Arguments.arguments">
                      <elementProp name="ACCT_ID" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">false</boolProp>
                        <stringProp name="Argument.name">ACCT_ID</stringProp>
                        <stringProp name="Argument.value">${ACCT_ID}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                        <stringProp name="Argument.value">${SecurityToken}</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                      <elementProp name="userProfileXML" elementType="HTTPArgument">
                        <boolProp name="HTTPArgument.always_encode">true</boolProp>
                        <stringProp name="Argument.name">userProfileXML</stringProp>
                        <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;hh:mma&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;,&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;.&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;MM-dd-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                        <stringProp name="Argument.metadata">=</stringProp>
                        <boolProp name="HTTPArgument.use_equals">true</boolProp>
                      </elementProp>
                    </collectionProp>
                  </elementProp>
                  <stringProp name="HTTPSampler.domain"></stringProp>
                  <stringProp name="HTTPSampler.port"></stringProp>
                  <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                  <stringProp name="HTTPSampler.response_timeout"></stringProp>
                  <stringProp name="HTTPSampler.protocol"></stringProp>
                  <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                  <stringProp name="HTTPSampler.path">/ouaf/pageRead?service=CILCSSEP&amp;ignoreWarnings=true</stringProp>
                  <stringProp name="HTTPSampler.method">POST</stringProp>
                  <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                  <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                  <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                  <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                  <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
                  <boolProp name="HTTPSampler.image_parser">true</boolProp>
                  <boolProp name="HTTPSampler.monitor">false</boolProp>
                  <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
                </HTTPSamplerProxy>
                <hashTree>
                  <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                    <collectionProp name="HeaderManager.headers">
                      <elementProp name="Content-Type" elementType="Header">
                        <stringProp name="Header.name">Content-Type</stringProp>
                        <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Language" elementType="Header">
                        <stringProp name="Header.name">Accept-Language</stringProp>
                        <stringProp name="Header.value">pl</stringProp>
                      </elementProp>
                      <elementProp name="Accept" elementType="Header">
                        <stringProp name="Header.name">Accept</stringProp>
                        <stringProp name="Header.value">*/*</stringProp>
                      </elementProp>
                      <elementProp name="User-Agent" elementType="Header">
                        <stringProp name="Header.name">User-Agent</stringProp>
                        <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; GTB6.3; BTRS124342; .NET CLR 2.0.50727; .NET CLR 1.1.4322; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)</stringProp>
                      </elementProp>
                      <elementProp name="Accept-Encoding" elementType="Header">
                        <stringProp name="Header.name">Accept-Encoding</stringProp>
                        <stringProp name="Header.value">gzip, deflate</stringProp>
                      </elementProp>
                      <elementProp name="Referer" elementType="Header">
                        <stringProp name="Header.name">Referer</stringProp>
                        <stringProp name="Header.value">http://192.168.122.21:6500/ouaf/cisMain.jsp?language=ENG</stringProp>
                      </elementProp>
                      <elementProp name="Pragma" elementType="Header">
                        <stringProp name="Header.name">Pragma</stringProp>
                        <stringProp name="Header.value">no-cache</stringProp>
                      </elementProp>
                    </collectionProp>
                  </HeaderManager>
                  <hashTree/>
                  <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                    <collectionProp name="Asserion.test_strings">
                      <stringProp name="954925063">message</stringProp>
                      <stringProp name="2078874">Brak</stringProp>
                    </collectionProp>
                    <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                    <boolProp name="Assertion.assume_success">false</boolProp>
                    <intProp name="Assertion.test_type">6</intProp>
                  </ResponseAssertion>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="AN_ACCT_ID" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">AN_ACCT_ID</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;ACCT_ID&quot;:&quot;([0-9]*)&quot;,&quot;ACC</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">Brak ACCT_ID</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="MAIN_CUST_PER_ID" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">MAIN_CUST_PER_ID</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;MAIN_CUST_PER_ID&quot;:&quot;([0-9]*)&quot;,&quot;BIL</stringProp>
                    <stringProp name="RegexExtractor.template">$1$</stringProp>
                    <stringProp name="RegexExtractor.default">Brak MAIN_CUST_PER_ID</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCT_INFO" enabled="true">
                    <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                    <stringProp name="RegexExtractor.refname">ACCT_INFO</stringProp>
                    <stringProp name="RegexExtractor.regex">&quot;ACCT_INFO&quot;:&quot;(.*),(.*), (.*), (.*), (.*),&quot;,&quot;DE</stringProp>
                    <stringProp name="RegexExtractor.template">$1$,$2$</stringProp>
                    <stringProp name="RegexExtractor.default">Brak ACCT_INFO</stringProp>
                    <stringProp name="RegexExtractor.match_number">1</stringProp>
                  </RegexExtractor>
                  <hashTree/>
                  <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="true">
                    <boolProp name="ResultCollector.error_logging">false</boolProp>
                    <objProp>
                      <name>saveConfig</name>
                      <value class="SampleSaveConfiguration">
                        <time>false</time>
                        <latency>false</latency>
                        <timestamp>false</timestamp>
                        <success>false</success>
                        <label>false</label>
                        <code>false</code>
                        <message>false</message>
                        <threadName>false</threadName>
                        <dataType>false</dataType>
                        <encoding>false</encoding>
                        <assertions>false</assertions>
                        <subresults>false</subresults>
                        <responseData>false</responseData>
                        <samplerData>false</samplerData>
                        <xml>false</xml>
                        <fieldNames>false</fieldNames>
                        <responseHeaders>false</responseHeaders>
                        <requestHeaders>false</requestHeaders>
                        <responseDataOnError>false</responseDataOnError>
                        <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                        <assertionsResultsToSave>0</assertionsResultsToSave>
                      </value>
                    </objProp>
                    <stringProp name="filename">/home/tester/Pulpit/ENEA_Jmeter/wyniki/dodanieklienta.csv</stringProp>
                  </ResultCollector>
                  <hashTree/>
                  <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
                    <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
                    <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
                  </GaussianRandomTimer>
                  <hashTree/>
                </hashTree>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Dodawanie konta" enabled="true"/>
          <hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="[idź do konta] /ouaf/search?service=CILCACCS" enabled="false"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/search?service=CILCACCS" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="SEARCH_TYPE" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">SEARCH_TYPE</stringProp>
                      <stringProp name="Argument.value">MN</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ACCT_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">ACCT_ID</stringProp>
                      <stringProp name="Argument.value">${ACCT_ID}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/search?service=CILCACCS</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageRead?service=CILCACCP&amp;ignoreWarnings=true" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="ACCT_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ACCT_ID</stringProp>
                      <stringProp name="Argument.value">${ACCT_ID}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="PREM_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">PREM_ID</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageRead?service=CILCACCP&amp;ignoreWarnings=true</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/listRead?service=CFLZSELL&amp;continueFetching=true" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="KEY_NAME_1" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">KEY_NAME_1</stringProp>
                      <stringProp name="Argument.value">KEY_VALUE_1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="KEY_VALUE_1" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">KEY_VALUE_1</stringProp>
                      <stringProp name="Argument.value">R</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="PROGRAM_NAME" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">PROGRAM_NAME</stringProp>
                      <stringProp name="Argument.value">CIPTCIDW</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/listRead?service=CFLZSELL&amp;continueFetching=true</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="[id posiadlosci]/ouaf/pageDefault?service=CILCACCP" enabled="false"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageDefault?service=CILCACCP" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;MAILING_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt;&lt;field name=&quot;CUST_CL_CD&quot;&gt;R&lt;/field&gt;&lt;field name=&quot;CIS_DIVISION&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PROTECT_DIV_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROTECT_CYC_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROTECT_PREM_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;PREM&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILCACCP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="[Obszar obslugi klientow] /ouaf/pageDefault?service=CILCACCP" enabled="false"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageDefault?service=CILCACCP" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt;
&lt;pageBody&gt;&lt;field name=&quot;CIS_DIVISION&quot;&gt;PL&lt;/field&gt;&lt;field name=&quot;CUST_CL_CD&quot;&gt;R&lt;/field&gt;&lt;field name=&quot;PROTECT_DIV_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROTECT_CYC_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROTECT_PREM_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;DIV&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILCACCP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="/ouaf/pageDefault?service=CILCACCP" enabled="false"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Grupa zarządcza] /ouaf/pageDefault?service=CILCACCP" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;ACCT_MGMT_GRP_CD&quot;&gt;LARGE&lt;/field&gt;&lt;field name=&quot;CUST_CL_CD&quot;&gt;R&lt;/field&gt;&lt;field name=&quot;CIS_DIVISION&quot;&gt;PL&lt;/field&gt;&lt;field name=&quot;PROTECT_DIV_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROTECT_CYC_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROTECT_PREM_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;MGMT&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILCACCP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="[Okres rozliczeniowy] /ouaf/pageDefault?service=CILCACCP" enabled="false"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageDefault?service=CILCACCP" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt;
&lt;pageBody&gt;&lt;field name=&quot;BILL_CYC_CD&quot;&gt;M-D1&lt;/field&gt;&lt;field name=&quot;CUST_CL_CD&quot;&gt;R&lt;/field&gt;&lt;field name=&quot;CIS_DIVISION&quot;&gt;PL&lt;/field&gt;&lt;field name=&quot;PROTECT_DIV_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROTECT_CYC_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROTECT_PREM_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;BILL&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILCACCP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="[Zapisywanie] /ouaf/pageChange?service=CILCACCP" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie konta] /ouaf/pageChange?service=CILCACCP" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CANCEL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CAL_APPLY_BUD_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;RECOMMEND_BUD_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;C1_VAL_SCR_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;QUICK_ADD_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt;&lt;field name=&quot;BILL_CYC_CD&quot;&gt;M-D1&lt;/field&gt;&lt;field name=&quot;SETUP_DT&quot;&gt;${dateStart}&lt;/field&gt;&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt;&lt;field name=&quot;ACCT_MGMT_GRP_CD&quot;&gt;LARGE&lt;/field&gt;&lt;field name=&quot;ALERT_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_AFTER_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PROTECT_CYC_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CIS_DIVISION&quot;&gt;PL&lt;/field&gt;&lt;field name=&quot;MAILING_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt;&lt;field name=&quot;PROTECT_PREM_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;COLL_CL_CD&quot;&gt;RESID&lt;/field&gt;&lt;field name=&quot;CR_REVIEW_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;POSTPONE_CR_RVW_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;INT_CR_REVIEW_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CUST_CL_CD&quot;&gt;R&lt;/field&gt;&lt;field name=&quot;BILL_PRT_INTERCEPT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NO_DEP_RVW_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;BUD_PLAN_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt;&lt;field name=&quot;PROTECT_DIV_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACCESS_GRP_CD&quot;&gt;***&lt;/field&gt;&lt;field name=&quot;ACCT_DATA_AREA&quot;&gt;&lt;/field&gt;&lt;field name=&quot;C1_T_QUICK_ADD_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;USER_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACCT_CHECK_DIGIT&quot;&gt;1&lt;/field&gt;&lt;field name=&quot;PAY_ADV_FUNC_SUPP_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;DFLT_APAY_FLG&quot;&gt;C1PA&lt;/field&gt;&lt;field name=&quot;QUICK_ADD_SW2&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CUST_CL_CD2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACCT_MGMT_GRP_CD2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PREM_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS4&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CITY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACCT_INFO&quot;&gt;JMeter,JM3, Indywidualny, $0,00, 2511103504,&lt;/field&gt;&lt;field name=&quot;MGMT_DESCR&quot;&gt;Large customers&lt;/field&gt;&lt;field name=&quot;ACCESS_DESCR&quot;&gt;System Default&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME&quot;&gt;JMeter,JM3&lt;/field&gt;&lt;field name=&quot;ENTITY_INFO&quot;&gt;JMeter,JM3&lt;/field&gt;&lt;field name=&quot;PREM_INFO&quot;&gt;${PREM_INFO}&lt;/field&gt;&lt;field name=&quot;CUR_BAL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_BAL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_CASH_ONLY_PTS&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;TOT_CR_RATING_PTS&quot;&gt;1000&lt;/field&gt;&lt;field name=&quot;NEW_BUD_DT&quot;&gt;${dateStart}&lt;/field&gt;&lt;field name=&quot;TOT_BUD_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_NEW_BUD&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_CD_ON_HAND_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_CD_REQ_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_NCD_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_ON_HAND_AMT&quot;&gt;0.00&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCACCP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/listRead?service=CFLZSELL&amp;continueFetching=true" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="KEY_NAME_1" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">KEY_NAME_1</stringProp>
                      <stringProp name="Argument.value">KEY_VALUE_1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="KEY_VALUE_1" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">KEY_VALUE_1</stringProp>
                      <stringProp name="Argument.value">R</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="PROGRAM_NAME" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">PROGRAM_NAME</stringProp>
                      <stringProp name="Argument.value">CIPTCIDW</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port">6500</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/listRead?service=CFLZSELL&amp;continueFetching=true</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/portal" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="Argument.value">dashboard</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="TD_ENTRY_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">TD_ENTRY_ID</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="preferences" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">preferences</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;portal name=&quot;CI_DASHBOARD&quot;&gt;&lt;zone name=&quot;CI_ALERTS&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_CAMPAIGN&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;F1-USRCHKOUT&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_DBCONTEXT&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;F1-CURRTODO&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_CC_Q_ADD&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_SCRIPTS&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_FAVORITES&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;F1_USRSCR&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_FININFO&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_DOCTDB&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_UPDFEATCG&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;F1_SWTCHLANG&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_TODO&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;F1-WORKLIST&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;/portal&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="favorites" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">favorites</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;favorites&gt;&lt;navLink name=&quot;CI0000000722&quot;/&gt;&lt;navLink name=&quot;CI0000001399&quot;/&gt;&lt;navLink name=&quot;CI0000001340&quot;/&gt;&lt;/favorites&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="debug" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">debug</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="traceTime" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">traceTime</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="traceSQL" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">traceSQL</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="traceProgramStart" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">traceProgramStart</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="traceProgramEnd" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">traceProgramEnd</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="traceCobolBuffers" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">traceCobolBuffers</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="contextNavigationKey" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">contextNavigationKey</stringProp>
                      <stringProp name="Argument.value">accountMaint</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="configToolDebug" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">configToolDebug</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ACCT_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">ACCT_ID</stringProp>
                      <stringProp name="Argument.value">2511103504</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CONTEXT_NAME1" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CONTEXT_NAME1</stringProp>
                      <stringProp name="Argument.value">ACCT_ID</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CONTEXT_VALUE1" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CONTEXT_VALUE1</stringProp>
                      <stringProp name="Argument.value">2511103504</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="PER_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">PER_ID</stringProp>
                      <stringProp name="Argument.value">6405528265</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CONTEXT_NAME2" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CONTEXT_NAME2</stringProp>
                      <stringProp name="Argument.value">PER_ID</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CONTEXT_VALUE2" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CONTEXT_VALUE2</stringProp>
                      <stringProp name="Argument.value">6405528265</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="PREM_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">PREM_ID</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="CONTEXT_NAME3" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CONTEXT_NAME3</stringProp>
                      <stringProp name="Argument.value">PREM_ID</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="CONTEXT_VALUE3" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CONTEXT_VALUE3</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="cache_CI_TODO" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">cache_CI_TODO</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;pageBody action=&quot;&quot; metaInfoKey=&quot;CILQTDSP&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;USER_FULL_NAME&quot;&gt;Student, 01&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORKED_ONLY_SW&quot;&gt;&lt;/field&gt;&lt;list name=&quot;TODO_SUMM&quot; service=&quot;CILQTDSL&quot;&gt;&lt;listHeader action=&quot;&quot; hasMoreRows=&quot;false&quot; alertRowIndex=&quot;0&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;USER_ID&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;FANRMRCO&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Bł. zad. dot. koń. zad. w ter. przy uż. ost. odcz. licz.&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;10&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;26&quot;&gt;26&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;26&quot;&gt;26&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;26&quot;&gt;26&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;26 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;CI_HLPDD&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Help Ticket (Used in demo data propagation)&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;10 (1), 50 (1)&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;2&quot;&gt;2&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;1 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;1 pozycji w trakcie opracowywania opóźnionych o więcej niż 10 dni&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;TD-HILO&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Błąd najwyższego/najniższego odczytu licznika&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;20&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;1 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;CI_HELP&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Help Ticket&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;20&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;1 pozycji w trakcie opracowywania opóźnionych o więcej niż 10 dni&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;CI_IHB&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;New High Bill Complaint&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;20&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;2&quot;&gt;2&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;2&quot;&gt;2&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;2&quot;&gt;2&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;2 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;TD-CCCB&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Połączenie zwrotne dotyczące kontaktu z klientem&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;30&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;1 pozycji w trakcie opracowywania opóźnionych o więcej niż 10 dni&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;D/C REG&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Rejestr zapotrzebowania/licznika zerowanego&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;40&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;4&quot;&gt;4&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;4&quot;&gt;4&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;4&quot;&gt;4&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;4 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;SAACT&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Błędy aktywacji umowy oczekującej na rozpocz./zatrzym.&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;80&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;3&quot;&gt;3&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;3&quot;&gt;3&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;3&quot;&gt;3&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;3 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;BILLING&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Błędy tworzenia faktur przy użyciu cyklu rozliczeniowego&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;80&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;1 pozycji w trakcie opracowywania opóźnionych o więcej niż 10 dni&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;CPCRRETR&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Błędy wycofania kredytu kupieckiego&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;80&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;1 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;CI_PI&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Product Inquiry&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;80&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;4&quot;&gt;4&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;4&quot;&gt;4&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;4&quot;&gt;4&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;4 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/portal</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl-PL</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/dashboard.jsp</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/zonemap?ZONE_CD=F1_USRSCR&amp;language=POL&amp;seqID=109&amp;PORTAL_CD=undefined" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/zonemap?ZONE_CD=F1_USRSCR&amp;language=POL&amp;seqID=109&amp;PORTAL_CD=undefined</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl-PL</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/portal</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/zonemap?ZONE_CD=CI_UPDFEATCG&amp;WFM_NAME=CI_GENSYSCFG&amp;EXT_SYS_TYP_FLG=F1GC&amp;language=POL&amp;seqID=112&amp;PORTAL_CD=undefined" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/zonemap?ZONE_CD=CI_UPDFEATCG&amp;WFM_NAME=CI_GENSYSCFG&amp;EXT_SYS_TYP_FLG=F1GC&amp;language=POL&amp;seqID=112&amp;PORTAL_CD=undefined</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl-PL</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/portal</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageRead?service=FWLZDEXP&amp;ignoreWarnings=true" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="ZONE_CD" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">ZONE_CD</stringProp>
                      <stringProp name="Argument.value">CI_DOCTDB</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="USE_INPUT_SEQ_SW" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">USE_INPUT_SEQ_SW</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="PORTAL_CD" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">PORTAL_CD</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C1_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C1_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C2_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C2_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C3_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C3_SEQ</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C4_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C4_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C5_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C5_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C6_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C6_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C7_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C7_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C8_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C8_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C9_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C9_SEQ</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C10_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C10_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C11_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C11_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="H1_VALUE" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">H1_VALUE</stringProp>
                      <stringProp name="Argument.value">6405528265</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port">6500</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageRead?service=FWLZDEXP&amp;ignoreWarnings=true</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageRead?service=CILZMSGP&amp;ignoreWarnings=true" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MESSAGE_CAT_NBR" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MESSAGE_CAT_NBR</stringProp>
                      <stringProp name="Argument.value">11002</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="MESSAGE_NBR" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MESSAGE_NBR</stringProp>
                      <stringProp name="Argument.value">90012</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="MESSAGE_PARM_COLL_CNT" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MESSAGE_PARM_COLL_CNT</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="MESSAGE_PARM_1" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MESSAGE_PARM_1</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageRead?service=CILZMSGP&amp;ignoreWarnings=true</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Zalogowanie" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Wywietlenie strony logowania" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/loginPage.jsp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/loginPage.jsp</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl,en-us;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64; rv:18.0) Gecko/20100101 Firefox/18.0</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="418791073">Please enter your User ID</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Wprowadzenie loginu, hasla, zalogowanie " enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/j_security_check" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="j_username" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">j_username</stringProp>
                    <stringProp name="Argument.value">${login}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="j_password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">j_password</stringProp>
                    <stringProp name="Argument.value">${haslo}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/j_security_check</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl,en-us;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64; rv:18.0) Gecko/20100101 Firefox/18.0</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.25:6500/ouaf/loginPage.jsp</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1863927879">var youAreLoggedInAs</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/cis.jsp" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/cis.jsp</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl,en-us;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64; rv:18.0) Gecko/20100101 Firefox/18.0</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.25:6500/ouaf/loginPage.jsp</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SecurityToken</stringProp>
                <stringProp name="RegexExtractor.regex">var ouafSecurityToken = &apos;(.*)&apos;;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak ouafSecurityToken</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Podmiana wartości w tokenie" enabled="true"/>
          <hashTree>
            <JavaSampler guiclass="JavaTestSamplerGui" testclass="JavaSampler" testname="Podmiana wartości w tokenie" enabled="true">
              <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="Sleep_Time" elementType="Argument">
                    <stringProp name="Argument.name">Sleep_Time</stringProp>
                    <stringProp name="Argument.value">100</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Sleep_Mask" elementType="Argument">
                    <stringProp name="Argument.name">Sleep_Mask</stringProp>
                    <stringProp name="Argument.value">0xFF</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Label" elementType="Argument">
                    <stringProp name="Argument.name">Label</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ResponseCode" elementType="Argument">
                    <stringProp name="Argument.name">ResponseCode</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ResponseMessage" elementType="Argument">
                    <stringProp name="Argument.name">ResponseMessage</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="Status" elementType="Argument">
                    <stringProp name="Argument.name">Status</stringProp>
                    <stringProp name="Argument.value">OK</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="SamplerData" elementType="Argument">
                    <stringProp name="Argument.name">SamplerData</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                  <elementProp name="ResultData" elementType="Argument">
                    <stringProp name="Argument.name">ResultData</stringProp>
                    <stringProp name="Argument.value">${__javaScript(vars.get(&quot;SecurityToken&quot;).replace(&quot;\\\x3D&quot;\,&quot;=&quot;).replace(&quot;\\\x2B&quot;\,&quot;+&quot;).replace(&quot;\\\x2F&quot;\,&quot;\/&quot;),SecurityToken)} </stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="classname">org.apache.jmeter.protocol.java.test.JavaTest</stringProp>
            </JavaSampler>
            <hashTree/>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Pobranie danych lokalnych po zalogowaniu" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/loginInfo?language=ENG" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/loginInfo?language=ENG</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl,en-us;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64; rv:18.0) Gecko/20100101 Firefox/18.0</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.25:6500/ouaf/cisMain.jsp?language=ENG</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/search?service=TimeZoneLabelService" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="SEARCH_TYPE" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">SEARCH_TYPE</stringProp>
                    <stringProp name="Argument.value">MN</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;hh:mma&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;,&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;.&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;MM-dd-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/search?service=TimeZoneLabelService</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl,en-us;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64; rv:18.0) Gecko/20100101 Firefox/18.0</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.25:6500/ouaf/cisMain.jsp?language=ENG</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/tz_database/northamerica" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/tz_database/northamerica</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl,en-us;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64; rv:18.0) Gecko/20100101 Firefox/18.0</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="X-Requested-With" elementType="Header">
                    <stringProp name="Header.name">X-Requested-With</stringProp>
                    <stringProp name="Header.value">XMLHttpRequest</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.25:6500/ouaf/cisMain.jsp?language=ENG</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/stringSort" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="locale" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">locale</stringProp>
                    <stringProp name="Argument.value">en-US</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="strength" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">strength</stringProp>
                    <stringProp name="Argument.value">TERTIARY</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="firstCharPriority" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">firstCharPriority</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v0" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v0</stringProp>
                    <stringProp name="Argument.value">Audit Query by Table/Field/Key</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v1" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v1</stringProp>
                    <stringProp name="Argument.value">Audit Query by User</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v2</stringProp>
                    <stringProp name="Argument.value">Bill Cancel Reason</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v3" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v3</stringProp>
                    <stringProp name="Argument.value">Bill Cycle</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v4" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v4</stringProp>
                    <stringProp name="Argument.value">Bill Message</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v5" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v5</stringProp>
                    <stringProp name="Argument.value">Bill Period</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v6" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v6</stringProp>
                    <stringProp name="Argument.value">Bill Segment Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v7" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v7</stringProp>
                    <stringProp name="Argument.value">Billable Charge Line Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v8" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v8</stringProp>
                    <stringProp name="Argument.value">Billable Charge Template</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v9" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v9</stringProp>
                    <stringProp name="Argument.value">Degree Days</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v10" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v10</stringProp>
                    <stringProp name="Argument.value">Statement Cycle</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v11" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v11</stringProp>
                    <stringProp name="Argument.value">Statement Route Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v12" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v12</stringProp>
                    <stringProp name="Argument.value">Case Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v13" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v13</stringProp>
                    <stringProp name="Argument.value">Account Staging</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v14" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v14</stringProp>
                    <stringProp name="Argument.value">Difference Query</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v15" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v15</stringProp>
                    <stringProp name="Argument.value">Root Object</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v16" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v16</stringProp>
                    <stringProp name="Argument.value">Contract Option Event Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v17" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v17</stringProp>
                    <stringProp name="Argument.value">Contract Option Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v18" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v18</stringProp>
                    <stringProp name="Argument.value">Interval Profile Rel Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v19" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v19</stringProp>
                    <stringProp name="Argument.value">Interval Profile Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v20" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v20</stringProp>
                    <stringProp name="Argument.value">Interval Register Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v21" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v21</stringProp>
                    <stringProp name="Argument.value">Service Cycle</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v22" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v22</stringProp>
                    <stringProp name="Argument.value">Service Route Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v23" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v23</stringProp>
                    <stringProp name="Argument.value">Service Schedule</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v24" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v24</stringProp>
                    <stringProp name="Argument.value">TOU Group</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v25" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v25</stringProp>
                    <stringProp name="Argument.value">TOU Map Relationship Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v26" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v26</stringProp>
                    <stringProp name="Argument.value">TOU Map Template</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v27" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v27</stringProp>
                    <stringProp name="Argument.value">TOU Map Template Classic</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v28" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v28</stringProp>
                    <stringProp name="Argument.value">TOU Map Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v29" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v29</stringProp>
                    <stringProp name="Argument.value">TOU Map Type Classic</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v30" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v30</stringProp>
                    <stringProp name="Argument.value">Trend Area</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v31" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v31</stringProp>
                    <stringProp name="Argument.value">Trend Class</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v32" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v32</stringProp>
                    <stringProp name="Argument.value">Budget Plan</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v33" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v33</stringProp>
                    <stringProp name="Argument.value">Collection Agency</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v34" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v34</stringProp>
                    <stringProp name="Argument.value">Collection Class</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v35" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v35</stringProp>
                    <stringProp name="Argument.value">Collection Class Control</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v36" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v36</stringProp>
                    <stringProp name="Argument.value">Collection Class Overdue Rules</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v37" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v37</stringProp>
                    <stringProp name="Argument.value">Collection Event Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v38" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v38</stringProp>
                    <stringProp name="Argument.value">Collection Process Template</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v39" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v39</stringProp>
                    <stringProp name="Argument.value">Cut Event Cancel Reason</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v40" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v40</stringProp>
                    <stringProp name="Argument.value">Cut Event Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v41" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v41</stringProp>
                    <stringProp name="Argument.value">Cut Process Template</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v42" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v42</stringProp>
                    <stringProp name="Argument.value">Debt Class</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v43" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v43</stringProp>
                    <stringProp name="Argument.value">Deposit Class</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v44" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v44</stringProp>
                    <stringProp name="Argument.value">Non Cash Deposit Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v45" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v45</stringProp>
                    <stringProp name="Argument.value">Overdue Event Cancel Reason</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v46" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v46</stringProp>
                    <stringProp name="Argument.value">Overdue Event Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v47" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v47</stringProp>
                    <stringProp name="Argument.value">Overdue Process Template</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v48" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v48</stringProp>
                    <stringProp name="Argument.value">Pay Method</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v49" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v49</stringProp>
                    <stringProp name="Argument.value">Pay Plan Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v50" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v50</stringProp>
                    <stringProp name="Argument.value">Severance Event Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v51" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v51</stringProp>
                    <stringProp name="Argument.value">Severance Process Template</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v52" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v52</stringProp>
                    <stringProp name="Argument.value">Third Party Payor</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v53" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v53</stringProp>
                    <stringProp name="Argument.value">Write Off Control</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v54" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v54</stringProp>
                    <stringProp name="Argument.value">Write Off Debt Class</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v55" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v55</stringProp>
                    <stringProp name="Argument.value">Write Off Event Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v56" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v56</stringProp>
                    <stringProp name="Argument.value">Write Off Process Template</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v57" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v57</stringProp>
                    <stringProp name="Argument.value">Account Management Group</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v58" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v58</stringProp>
                    <stringProp name="Argument.value">Account Relationship Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v59" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v59</stringProp>
                    <stringProp name="Argument.value">Activity Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v60" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v60</stringProp>
                    <stringProp name="Argument.value">Alert Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v61" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v61</stringProp>
                    <stringProp name="Argument.value">Bill Route Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v62" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v62</stringProp>
                    <stringProp name="Argument.value">Column Reference</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v63" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v63</stringProp>
                    <stringProp name="Argument.value">Conservation Program</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v64" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v64</stringProp>
                    <stringProp name="Argument.value">Contract Quantity Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v65" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v65</stringProp>
                    <stringProp name="Argument.value">Customer Class</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v66" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v66</stringProp>
                    <stringProp name="Argument.value">Customer Contact Class</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v67" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v67</stringProp>
                    <stringProp name="Argument.value">Customer Contact Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v68" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v68</stringProp>
                    <stringProp name="Argument.value">Identifier Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v69" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v69</stringProp>
                    <stringProp name="Argument.value">Letter Template</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v70" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v70</stringProp>
                    <stringProp name="Argument.value">Order Cancel Reason</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v71" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v71</stringProp>
                    <stringProp name="Argument.value">Order Hold Reason</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v72" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v72</stringProp>
                    <stringProp name="Argument.value">Person Relationship Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v73" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v73</stringProp>
                    <stringProp name="Argument.value">SA Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v74" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v74</stringProp>
                    <stringProp name="Argument.value">SA Type Start Option</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v75" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v75</stringProp>
                    <stringProp name="Argument.value">SA Type Start Option Merge</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v76" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v76</stringProp>
                    <stringProp name="Argument.value">SIC Code</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v77" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v77</stringProp>
                    <stringProp name="Argument.value">Tax Exempt Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v78" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v78</stringProp>
                    <stringProp name="Argument.value">Service Task Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v79" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v79</stringProp>
                    <stringProp name="Argument.value">Application Viewer</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v80" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v80</stringProp>
                    <stringProp name="Argument.value">DB Instruction</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v81" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v81</stringProp>
                    <stringProp name="Argument.value">DB Process</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v82" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v82</stringProp>
                    <stringProp name="Argument.value">Environment Reference</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v83" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v83</stringProp>
                    <stringProp name="Argument.value">Extendable Lookup</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v84" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v84</stringProp>
                    <stringProp name="Argument.value">FK Reference</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v85" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v85</stringProp>
                    <stringProp name="Argument.value">Field</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v86" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v86</stringProp>
                    <stringProp name="Argument.value">Lookup</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v87" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v87</stringProp>
                    <stringProp name="Argument.value">Maintenance Object</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v88" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v88</stringProp>
                    <stringProp name="Argument.value">Table</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v89" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v89</stringProp>
                    <stringProp name="Argument.value">Device Test Component Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v90" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v90</stringProp>
                    <stringProp name="Argument.value">Device Test Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v91" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v91</stringProp>
                    <stringProp name="Argument.value">High Low Factor</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v92" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v92</stringProp>
                    <stringProp name="Argument.value">Item Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v93" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v93</stringProp>
                    <stringProp name="Argument.value">Manufacturer</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v94" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v94</stringProp>
                    <stringProp name="Argument.value">Meter Configuration Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v95" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v95</stringProp>
                    <stringProp name="Argument.value">Meter ID Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v96" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v96</stringProp>
                    <stringProp name="Argument.value">Meter Read Source</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v97" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v97</stringProp>
                    <stringProp name="Argument.value">Meter Reader Remark</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v98" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v98</stringProp>
                    <stringProp name="Argument.value">Meter Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v99" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v99</stringProp>
                    <stringProp name="Argument.value">Protocol</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v100" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v100</stringProp>
                    <stringProp name="Argument.value">Read Out Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v101" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v101</stringProp>
                    <stringProp name="Argument.value">Retire Reason</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v102" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v102</stringProp>
                    <stringProp name="Argument.value">External System</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v103" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v103</stringProp>
                    <stringProp name="Argument.value">Notification Download Profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v104" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v104</stringProp>
                    <stringProp name="Argument.value">Notification Download Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v105" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v105</stringProp>
                    <stringProp name="Argument.value">Notification Upload Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v106" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v106</stringProp>
                    <stringProp name="Argument.value">Outbound Message Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v107" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v107</stringProp>
                    <stringProp name="Argument.value">Workflow Process Profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v108" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v108</stringProp>
                    <stringProp name="Argument.value">Disconnect Location</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v109" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v109</stringProp>
                    <stringProp name="Argument.value">Dispatch Group</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v110" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v110</stringProp>
                    <stringProp name="Argument.value">Field Activity Remark</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v111" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v111</stringProp>
                    <stringProp name="Argument.value">Field Activity Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v112" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v112</stringProp>
                    <stringProp name="Argument.value">Field Activity Type Profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v113" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v113</stringProp>
                    <stringProp name="Argument.value">Field Service Class</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v114" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v114</stringProp>
                    <stringProp name="Argument.value">Field Service Control</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v115" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v115</stringProp>
                    <stringProp name="Argument.value">Fieldwork Cancel Reason</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v116" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v116</stringProp>
                    <stringProp name="Argument.value">Fieldwork Reschedule Reason</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v117" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v117</stringProp>
                    <stringProp name="Argument.value">Operations Area</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v118" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v118</stringProp>
                    <stringProp name="Argument.value">Outage Call Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v119" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v119</stringProp>
                    <stringProp name="Argument.value">Representative</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v120" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v120</stringProp>
                    <stringProp name="Argument.value">A/P Request Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v121" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v121</stringProp>
                    <stringProp name="Argument.value">Adjustment Cancel Reason</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v122" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v122</stringProp>
                    <stringProp name="Argument.value">Adjustment Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v123" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v123</stringProp>
                    <stringProp name="Argument.value">Adjustment Type Profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v124" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v124</stringProp>
                    <stringProp name="Argument.value">Approval Profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v125" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v125</stringProp>
                    <stringProp name="Argument.value">Auto Pay Route Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v126" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v126</stringProp>
                    <stringProp name="Argument.value">Auto Pay Source Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v127" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v127</stringProp>
                    <stringProp name="Argument.value">Bank</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v128" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v128</stringProp>
                    <stringProp name="Argument.value">Currency</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v129" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v129</stringProp>
                    <stringProp name="Argument.value">Distribution Code</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v130" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v130</stringProp>
                    <stringProp name="Argument.value">Distribution Rule</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v131" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v131</stringProp>
                    <stringProp name="Argument.value">Fund</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v132" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v132</stringProp>
                    <stringProp name="Argument.value">Match Event Cancel Reason</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v133" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v133</stringProp>
                    <stringProp name="Argument.value">Match Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v134" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v134</stringProp>
                    <stringProp name="Argument.value">NBB Recommendation Rule</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v135" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v135</stringProp>
                    <stringProp name="Argument.value">Pay Cancel Reason</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v136" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v136</stringProp>
                    <stringProp name="Argument.value">Payment Segment Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v137" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v137</stringProp>
                    <stringProp name="Argument.value">Payment Template</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v138" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v138</stringProp>
                    <stringProp name="Argument.value">Revenue Class</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v139" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v139</stringProp>
                    <stringProp name="Argument.value">Tender Source</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v140" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v140</stringProp>
                    <stringProp name="Argument.value">Tender Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v141" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v141</stringProp>
                    <stringProp name="Argument.value">Accounting Calendar</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v142" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v142</stringProp>
                    <stringProp name="Argument.value">CIS Division</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v143" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v143</stringProp>
                    <stringProp name="Argument.value">Country</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v144" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v144</stringProp>
                    <stringProp name="Argument.value">Display Profile</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v145" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v145</stringProp>
                    <stringProp name="Argument.value">Document Template</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v146" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v146</stringProp>
                    <stringProp name="Argument.value">General Ledger Division</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v147" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v147</stringProp>
                    <stringProp name="Argument.value">Installation Options</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v148" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v148</stringProp>
                    <stringProp name="Argument.value">Installation Options - Framework</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v149" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v149</stringProp>
                    <stringProp name="Argument.value">Issuing Center</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v150" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v150</stringProp>
                    <stringProp name="Argument.value">Language</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v151" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v151</stringProp>
                    <stringProp name="Argument.value">Phone Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v152" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v152</stringProp>
                    <stringProp name="Argument.value">Product Offer</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v153" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v153</stringProp>
                    <stringProp name="Argument.value">Seasonal Time Shift</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v154" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v154</stringProp>
                    <stringProp name="Argument.value">Service Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v155" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v155</stringProp>
                    <stringProp name="Argument.value">Time Of Use</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v156" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v156</stringProp>
                    <stringProp name="Argument.value">Time Zone</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v157" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v157</stringProp>
                    <stringProp name="Argument.value">To Do Role</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v158" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v158</stringProp>
                    <stringProp name="Argument.value">To Do Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v159" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v159</stringProp>
                    <stringProp name="Argument.value">Unit Of Measure</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v160" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v160</stringProp>
                    <stringProp name="Argument.value">Work Calendar</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v161" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v161</stringProp>
                    <stringProp name="Argument.value">Request Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v162" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v162</stringProp>
                    <stringProp name="Argument.value">Attachments</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v163" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v163</stringProp>
                    <stringProp name="Argument.value">Facility Level 1 to 2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v164" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v164</stringProp>
                    <stringProp name="Argument.value">Facility Level 2 to 3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v165" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v165</stringProp>
                    <stringProp name="Argument.value">Geographic Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v166" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v166</stringProp>
                    <stringProp name="Argument.value">Meter Location</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v167" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v167</stringProp>
                    <stringProp name="Argument.value">Meter Read Instruction</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v168" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v168</stringProp>
                    <stringProp name="Argument.value">Meter Read Warning</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v169" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v169</stringProp>
                    <stringProp name="Argument.value">Postal Code Default</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v170" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v170</stringProp>
                    <stringProp name="Argument.value">Premise Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v171" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v171</stringProp>
                    <stringProp name="Argument.value">SP Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v172" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v172</stringProp>
                    <stringProp name="Argument.value">Migration Data Set Export</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v173" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v173</stringProp>
                    <stringProp name="Argument.value">Migration Data Set Import</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v174" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v174</stringProp>
                    <stringProp name="Argument.value">Migration Plan</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v175" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v175</stringProp>
                    <stringProp name="Argument.value">Migration Request</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v176" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v176</stringProp>
                    <stringProp name="Argument.value">SA Relationship Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v177" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v177</stringProp>
                    <stringProp name="Argument.value">SA Type SA Rel. Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v178" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v178</stringProp>
                    <stringProp name="Argument.value">Service Provider</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v179" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v179</stringProp>
                    <stringProp name="Argument.value">Frequency</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v180" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v180</stringProp>
                    <stringProp name="Argument.value">Item Type SQ Estimate</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v181" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v181</stringProp>
                    <stringProp name="Argument.value">Register Rule</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v182" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v182</stringProp>
                    <stringProp name="Argument.value">Service Quantity Identifier</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v183" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v183</stringProp>
                    <stringProp name="Argument.value">Service Quantity Rule</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v184" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v184</stringProp>
                    <stringProp name="Argument.value">Report Definition</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v185" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v185</stringProp>
                    <stringProp name="Argument.value">Reporting Options</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v186" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v186</stringProp>
                    <stringProp name="Argument.value">Credit Unit</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v187" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v187</stringProp>
                    <stringProp name="Argument.value">Proposal SA Decline Reason</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v188" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v188</stringProp>
                    <stringProp name="Argument.value">Quote Route Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v189" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v189</stringProp>
                    <stringProp name="Argument.value">SC Membership Inactive Reason</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v190" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v190</stringProp>
                    <stringProp name="Argument.value">Service Credit Event Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v191" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v191</stringProp>
                    <stringProp name="Argument.value">Service Credit Membership Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v192" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v192</stringProp>
                    <stringProp name="Argument.value">Terms and Conditions</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v193" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v193</stringProp>
                    <stringProp name="Argument.value">Access Group</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v194" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v194</stringProp>
                    <stringProp name="Argument.value">Application Service</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v195" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v195</stringProp>
                    <stringProp name="Argument.value">Data Access Role</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v196" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v196</stringProp>
                    <stringProp name="Argument.value">LDAP Import</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v197" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v197</stringProp>
                    <stringProp name="Argument.value">Security Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v198" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v198</stringProp>
                    <stringProp name="Argument.value">User</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v199" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v199</stringProp>
                    <stringProp name="Argument.value">User Group</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v200" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v200</stringProp>
                    <stringProp name="Argument.value">Algorithm</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v201" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v201</stringProp>
                    <stringProp name="Argument.value">Algorithm Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v202" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v202</stringProp>
                    <stringProp name="Argument.value">Batch Control</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v203" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v203</stringProp>
                    <stringProp name="Argument.value">Bundle Export</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v204" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v204</stringProp>
                    <stringProp name="Argument.value">Bundle Import</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v205" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v205</stringProp>
                    <stringProp name="Argument.value">Business Object</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v206" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v206</stringProp>
                    <stringProp name="Argument.value">Business Service</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v207" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v207</stringProp>
                    <stringProp name="Argument.value">COBOL Program</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v208" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v208</stringProp>
                    <stringProp name="Argument.value">Characteristic Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v209" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v209</stringProp>
                    <stringProp name="Argument.value">Context Sensitive Zone</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v210" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v210</stringProp>
                    <stringProp name="Argument.value">Data Area</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v211" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v211</stringProp>
                    <stringProp name="Argument.value">Display Icon Reference</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v212" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v212</stringProp>
                    <stringProp name="Argument.value">Embedded Help</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v213" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v213</stringProp>
                    <stringProp name="Argument.value">Feature Configuration</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v214" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v214</stringProp>
                    <stringProp name="Argument.value">Function</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v215" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v215</stringProp>
                    <stringProp name="Argument.value">Job Stream Creation Schedule</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v216" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v216</stringProp>
                    <stringProp name="Argument.value">Managed Content</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v217" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v217</stringProp>
                    <stringProp name="Argument.value">Menu</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v218" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v218</stringProp>
                    <stringProp name="Argument.value">Message</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v219" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v219</stringProp>
                    <stringProp name="Argument.value">Navigation Key</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v220" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v220</stringProp>
                    <stringProp name="Argument.value">Navigation Option</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v221" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v221</stringProp>
                    <stringProp name="Argument.value">Portal</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v222" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v222</stringProp>
                    <stringProp name="Argument.value">Revision History Search</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v223" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v223</stringProp>
                    <stringProp name="Argument.value">Script</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v224" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v224</stringProp>
                    <stringProp name="Argument.value">Script Merge</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v225" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v225</stringProp>
                    <stringProp name="Argument.value">Service Program</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v226" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v226</stringProp>
                    <stringProp name="Argument.value">Status Reason</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v227" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v227</stringProp>
                    <stringProp name="Argument.value">UI Map</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v228" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">v228</stringProp>
                    <stringProp name="Argument.value">Zone</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v229" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v229</stringProp>
                    <stringProp name="Argument.value">Zone Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v230" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v230</stringProp>
                    <stringProp name="Argument.value">Master Configuration</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v231" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v231</stringProp>
                    <stringProp name="Argument.value">TOS Cancel Reason</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v232" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v232</stringProp>
                    <stringProp name="Argument.value">Terms of Service Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v233" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v233</stringProp>
                    <stringProp name="Argument.value">Umbrella Agreement Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v234" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v234</stringProp>
                    <stringProp name="Argument.value">Workflow Event Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v235" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v235</stringProp>
                    <stringProp name="Argument.value">Workflow Process Template</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v236" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v236</stringProp>
                    <stringProp name="Argument.value">Web Service Adapter</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v237" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v237</stringProp>
                    <stringProp name="Argument.value">XAI Adapter</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v238" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v238</stringProp>
                    <stringProp name="Argument.value">XAI Class</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v239" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v239</stringProp>
                    <stringProp name="Argument.value">XAI Command</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v240" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v240</stringProp>
                    <stringProp name="Argument.value">XAI Dynamic Submission</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v241" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v241</stringProp>
                    <stringProp name="Argument.value">XAI Envelope Handler</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v242" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v242</stringProp>
                    <stringProp name="Argument.value">XAI Executer</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v243" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v243</stringProp>
                    <stringProp name="Argument.value">XAI Format</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v244" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v244</stringProp>
                    <stringProp name="Argument.value">XAI Group</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v245" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v245</stringProp>
                    <stringProp name="Argument.value">XAI Inbound Service</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v246" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v246</stringProp>
                    <stringProp name="Argument.value">XAI JDBC Connection</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v247" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v247</stringProp>
                    <stringProp name="Argument.value">XAI JMS Connection</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v248" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v248</stringProp>
                    <stringProp name="Argument.value">XAI JMS Queue</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v249" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v249</stringProp>
                    <stringProp name="Argument.value">XAI JMS Topic</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v250" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v250</stringProp>
                    <stringProp name="Argument.value">XAI JNDI Server</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v251" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v251</stringProp>
                    <stringProp name="Argument.value">XAI Option</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v252" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v252</stringProp>
                    <stringProp name="Argument.value">XAI Receiver</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v253" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v253</stringProp>
                    <stringProp name="Argument.value">XAI Route Type</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v254" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v254</stringProp>
                    <stringProp name="Argument.value">XAI Sender</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v255" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v255</stringProp>
                    <stringProp name="Argument.value">XAI Service Export</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v256" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v256</stringProp>
                    <stringProp name="Argument.value">XAI Service Import</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="v257" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">v257</stringProp>
                    <stringProp name="Argument.value">XAI Submission</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/stringSort</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl,en-us;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64; rv:18.0) Gecko/20100101 Firefox/18.0</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Cache-Control" elementType="Header">
                    <stringProp name="Header.name">Cache-Control</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.25:6500/ouaf/cisMain.jsp?language=ENG</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageDefault?service=CILTUSEP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;ADD&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;hh:mma&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;,&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;.&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;MM-dd-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILCPRMP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; GTB7.4; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.25:6500/ouaf/cisMain.jsp?language=ENG</stringProp>
                  </elementProp>
                  <elementProp name="UA-CPU" elementType="Header">
                    <stringProp name="Header.name">UA-CPU</stringProp>
                    <stringProp name="Header.value">x86</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Wylogowanie" enabled="true">
          <boolProp name="TransactionController.parent">false</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <stringProp name="TestPlan.comments">PT - przypadek testowy</stringProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/logout.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/logout.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/gif, image/jpeg, image/pjpeg, image/pjpeg, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/x-shockwave-flash, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/cis.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/cis.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/gif, image/jpeg, image/pjpeg, image/pjpeg, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/x-shockwave-flash, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/loginPage.jsp" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/loginPage.jsp</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">image/gif, image/jpeg, image/pjpeg, image/pjpeg, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, application/x-ms-application, application/x-ms-xbap, application/vnd.ms-xpsdocument, application/xaml+xml, application/x-shockwave-flash, */*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Logowanie" enabled="true"/>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Faktura" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="1 Generuj" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Generowanie fakturyj] /ouaf/pageDefault?service=CILBBLLP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;BILL_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CUTOFF_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BSEG_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;BGS&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILBBLLP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="DEFAULT_FOR_FLG" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">DEFAULT_FOR_FLG</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;DEFAULT_FOR_FLG&quot;:&quot;(.*)&quot;,&quot;BILL_ID</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak BILL_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="2 Oblicz ok" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Obliczanie faktury]/ouaf/pageAdd?service=CILBBLLP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;BILL_ID&quot;/&gt; 	&lt;field name=&quot;BILL_CYC_CD&quot;/&gt; 	&lt;field name=&quot;WIN_START_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_STAT_FLG&quot;/&gt; 	&lt;field name=&quot;BILL_DT&quot;/&gt; 	&lt;field name=&quot;DUE_DT&quot;/&gt; 	&lt;field name=&quot;CRE_DTTM&quot;/&gt; 	&lt;field name=&quot;COMPLETE_DTTM&quot;/&gt; 	&lt;field name=&quot;LATE_PAY_CHARGE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LATE_PAY_CHARGE_DT&quot;/&gt; 	&lt;field name=&quot;ALLOW_REOPEN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;NEXT_CR_RVW_DT&quot;/&gt; 	&lt;field name=&quot;CR_NOTE_FR_BILL_ID&quot;/&gt; 	&lt;field name=&quot;ALT_BILL_ID&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;APAY_CRE_DT&quot;/&gt; 	&lt;field name=&quot;APAY_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;APAY_STOP_USER_ID&quot;/&gt; 	&lt;field name=&quot;APAY_STOP_DTTM&quot;/&gt; 	&lt;field name=&quot;APAY_STOP_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;APAY_STOP_CRE_DT&quot;/&gt; 	&lt;field name=&quot;ARCHIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DOC_ID&quot;/&gt; 	&lt;field name=&quot;DOC_TYPE_FLG&quot;/&gt; 	&lt;field name=&quot;OFFCYC_BGEN_ID&quot;/&gt; 	&lt;field name=&quot;BILL_SIGN&quot;/&gt; 	&lt;field name=&quot;ACTION_GENERATE2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_FREEZE2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_COMPLETE2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REOPEN2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_DELETE2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_DSP_BL2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SAVE_BILL_ID&quot;/&gt; 	&lt;field name=&quot;ON_LINE_BILL_URL&quot;/&gt; 	&lt;field name=&quot;BILPRT_PLATFORM_FLG&quot;/&gt; 	&lt;field name=&quot;REPORT_CD&quot;/&gt; 	&lt;field name=&quot;BILL_INFO&quot;/&gt; 	&lt;field name=&quot;BILL_STATUS&quot;/&gt; 	&lt;field name=&quot;ACCT_NAME&quot;&gt;${ACCT_NAME}&lt;/field&gt; 	&lt;field name=&quot;BEGINNING_BAL&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_PAYMENTS&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_ADJUSTMENTS&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_CORRECTIONS&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_CURR_CHGS&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;ENDING_BAL&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_COM_REBILL&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_COM_CANCEL&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_AFT_COMPLETION&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;EXP_MSG&quot;/&gt; 	&lt;field name=&quot;BSEG_STATUS_INFO&quot;/&gt; 	&lt;field name=&quot;CREDIT_NOTE_MSG&quot;/&gt; 	&lt;field name=&quot;CORR_NOTE_MSG_1&quot;/&gt; 	&lt;field name=&quot;CORR_NOTE_MSG_2&quot;/&gt; 	&lt;field name=&quot;TOT_GEN_CHG&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;LATEST_BILL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FRZ_CNC_POP_UP_MSG&quot;/&gt; 	&lt;field name=&quot;PROCESS_DT&quot;/&gt; 	&lt;field name=&quot;AUTO_PAY_MSG&quot;/&gt; 	&lt;field name=&quot;ARCHIVE_MSG&quot;/&gt; 	&lt;field name=&quot;CM_WRK_FLD&quot;/&gt; 	&lt;field name=&quot;TOTAL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;RETRIEVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;RETRIEVE_FILTER&quot;/&gt; 	&lt;field name=&quot;RETRIEVED_BILL_ID&quot;/&gt; 	&lt;field name=&quot;SA_FILTER_FLG&quot;/&gt; 	&lt;field name=&quot;BS_STAT_FILTER_FLG&quot;/&gt; 	&lt;field name=&quot;ADDRESS1&quot;/&gt; 	&lt;field name=&quot;CITY&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;GEO_VAL&quot;/&gt; 	&lt;field name=&quot;ACTION_GENERATE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_FREEZE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_COMPLETE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_FRZ_CMPL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REOPEN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_DELETE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_DSP_BL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CR_NOTE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CAN_FRZN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_STP_APAY_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_WO_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REV_WO_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CORR_NOTE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_UNDO_CORR_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HIDE_FREEZE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HIDE_COMPLETE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HIDE_FRZ_CMPL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HIDE_STP_APAY_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;HIDE_WRITE_OFF_SW&quot;/&gt; 	&lt;field name=&quot;HIDE_REV_WO_SW&quot;/&gt; 	&lt;field name=&quot;HIDE_CANCEL_SW&quot;/&gt; 	&lt;field name=&quot;PROT_GENERATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_FREEZE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_COMPLETE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_FRZ_CMPL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_REOPEN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_DELETE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_CR_NOTE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_CAN_FRZN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_STP_APAY_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_CORR_NOTE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_UNDO_CORR_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_GEN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_FRZ_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_DEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_RBLF_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_CAN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_CRNT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ERROR_SHOWN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUTOFF_DT&quot;&gt;${dataProgowa}&lt;/field&gt; 	&lt;field name=&quot;ACCOUNTING_DT&quot;&gt;${dateShort}&lt;/field&gt; 	&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BILLING_OPT_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;USE_OLD_INFO_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CAN_RSN_CD&quot;/&gt; 	&lt;field name=&quot;CAN_FRZN_MSG&quot;/&gt; 	&lt;field name=&quot;CREDIT_NOTE_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;OVRD_BILL_DT_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;BILL_DT_OVRD_MSG&quot;/&gt; 	&lt;field name=&quot;OBC_BILL_DT&quot;/&gt; 	&lt;field name=&quot;SHOW_ACCTNG_DT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CMPLTN_POP_UP_MSG&quot;/&gt; 	&lt;field name=&quot;SHOW_RESULT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BSEG_INFO_1&quot;/&gt; 	&lt;field name=&quot;BSEG_INFO_2&quot;/&gt; 	&lt;field name=&quot;BSEG_INFO_3&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;/&gt; 	&lt;field name=&quot;EMAIL_LBL&quot;/&gt; 	&lt;field name=&quot;FAX_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE&quot;/&gt; 	&lt;field name=&quot;OPEN_ITEM_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NBR_BAL_ITEM&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;BAL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;NBR_UBAL_ITEM&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;UBAL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;NBR_DISP_ITEM&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;DISP_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;NBR_UMAT_ITEM&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;UMAT_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;OIA_TOTAL_ADJ&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;OIA_TOTAL_CORR&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;OIA_TOTAL_CURR_CHG&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME1&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL1&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME2&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL2&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME3&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL3&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME4&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL4&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME5&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL5&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME6&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL6&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME7&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL7&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME8&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL8&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME9&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL9&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME10&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL10&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;ROWS_SELECTED_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MSG_MORE_THAN_BS&quot;/&gt; 	&lt;list name=&quot;BILL_RTG&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;BILL_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SEQNO&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;BILL_ID&quot;/&gt; 			&lt;field name=&quot;SEQNO&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PER_ID&quot;/&gt; 			&lt;field name=&quot;NBR_BILL_COPIES&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;BATCH_CD&quot;/&gt; 			&lt;field name=&quot;BILL_FORMAT_FLG&quot;/&gt; 			&lt;field name=&quot;CUST_PO_ID&quot;/&gt; 			&lt;field name=&quot;ENTITY_NAME1&quot;/&gt; 			&lt;field name=&quot;ENTITY_NAME2&quot;/&gt; 			&lt;field name=&quot;ENTITY_NAME3&quot;/&gt; 			&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 			&lt;field name=&quot;ADDRESS1&quot;/&gt; 			&lt;field name=&quot;ADDRESS2&quot;/&gt; 			&lt;field name=&quot;ADDRESS3&quot;/&gt; 			&lt;field name=&quot;ADDRESS4&quot;/&gt; 			&lt;field name=&quot;CITY&quot;/&gt; 			&lt;field name=&quot;NUM1&quot;/&gt; 			&lt;field name=&quot;NUM2&quot;/&gt; 			&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 			&lt;field name=&quot;COUNTY&quot;/&gt; 			&lt;field name=&quot;STATE&quot;/&gt; 			&lt;field name=&quot;POSTAL&quot;/&gt; 			&lt;field name=&quot;GEO_CODE&quot;/&gt; 			&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;BATCH_NBR&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;EXTRACT_DTTM&quot;/&gt; 			&lt;field name=&quot;REPRINT_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;NO_BATCH_PRT_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;BILL_PRT_INTERCEPT&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;BILL_RTG_METH_FLG&quot;/&gt; 			&lt;field name=&quot;COUNTRY_DESCR&quot;/&gt; 			&lt;field name=&quot;STATE_DESCR&quot;/&gt; 			&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 			&lt;field name=&quot;ENTITY_NAME&quot;/&gt; 			&lt;field name=&quot;ENTITY_INFO&quot;/&gt; 			&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 			&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 			&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 			&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 			&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 			&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 			&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 			&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 			&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 			&lt;field name=&quot;NUM1_LBL&quot;/&gt; 			&lt;field name=&quot;NUM2_LBL&quot;/&gt; 			&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 			&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 			&lt;field name=&quot;STATE_LBL&quot;/&gt; 			&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 			&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 			&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILBBLLP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1432352548">resultCode....E....serverMessage.....message....Dla konta istnieje już faktura lub fa</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BILL_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">BILL_ID</stringProp>
                <stringProp name="RegexExtractor.regex">BILL_ID&quot;:&quot;(\d+?)&quot;,&quot;BILL_CYC_CD</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak BILL_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BILL_STATUS" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">BILL_STATUS</stringProp>
                <stringProp name="RegexExtractor.regex">BILL_STATUS&quot;:&quot;(.*)&quot;,&quot;ACCT_NAME</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak BILL_STATUS</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BSEG_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">BSEG_ID</stringProp>
                <stringProp name="RegexExtractor.regex">BSEG_ID&quot;:&quot;(\d+?)&quot;,&quot;SA_ID</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak BSEG_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BSEG_INFO" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">BSEG_INFO</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;BSEG_INFO&quot;:&quot;(.*)&quot;,&quot;DESCR&quot;:&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak BSEG_INFO</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="OBC_BILL_DT" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">OBC_BILL_DT</stringProp>
                <stringProp name="RegexExtractor.regex">OBC_BILL_DT&quot;:&quot;(.*)&quot;,&quot;SHOW_ACCTNG_DT_SW</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">OBC_BILL_DT</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="TOT_GEN_CHG" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">TOT_GEN_CHG</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;TOT_GEN_CHG&quot;:&quot;(.*)&quot;,&quot;LATEST_BILL_SW&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak TOT_GEN_CHG</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1316290247">resultCode&quot;: &quot;E&quot;, &quot;serverMessage&quot;: {&quot;message&quot;:</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-805636951">resultCode&quot;: &quot;W&quot;, &quot;serverWarnings&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="CRE_DTTM" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">CRE_DTTM</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;CRE_DTTM&quot;:&quot;(.*)&quot;,&quot;COMPLETE_DTTM&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak CRE_DTTM</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="/ouaf/uiPage/billBillSegmentGrid" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/uiPage/billBillSegmentGrid" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="language" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">language</stringProp>
                      <stringProp name="Argument.value">POL</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
                <stringProp name="HTTPSampler.port">6500</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/uiPage/billBillSegmentGrid</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/uiPage/billBillMainPage?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="3 Kasowanie segmentu robocze ok" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[wyszukanie segmentu] ouaf/search?service=CILBSEGS" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="SEARCH_TYPE" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">SEARCH_TYPE</stringProp>
                    <stringProp name="Argument.value">MN</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="BSEG_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">BSEG_ID</stringProp>
                    <stringProp name="Argument.value">${BSEG_ID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/search?service=CILBSEGS</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[wyswietlenie segmentu] /ouaf/pageRead?service=CILBSEGP&amp;ignoreWarnings=true" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="BSEG_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">BSEG_ID</stringProp>
                    <stringProp name="Argument.value">${BSEG_ID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path"> /ouaf/pageRead?service=CILBSEGP&amp;ignoreWarnings=true</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[usuniecie segmentu faktury]/ouaf/pageChange?service=CILBSEGP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;BSEG_INFO&quot;&gt;${BSEG_INFO}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, drzemi89552&lt;/field&gt; 	&lt;field name=&quot;BILL_INFO&quot;&gt;Data: , Oczekująca, termin:&lt;/field&gt; 	&lt;field name=&quot;SA_INFO&quot;&gt;Umowa sprzedaży energii elektrycznej, Aktywna, Grupa taryfowa C21, 01-01-2013, 0886873168,&lt;/field&gt; 	&lt;field name=&quot;CURRENT_AMT&quot;&gt;488.93&lt;/field&gt; 	&lt;field name=&quot;PAYOFF_AMT&quot;&gt;488.93&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;SA_REL_ID&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;&gt;Worska 25, 13-467 Marinos89552, Obiekt biurowy, 3763827162&lt;/field&gt; 	&lt;field name=&quot;BSEG_PERIOD&quot;/&gt; 	&lt;field name=&quot;BSEG_STAT_DESC&quot;&gt;Podlega zamrażaniu&lt;/field&gt; 	&lt;field name=&quot;BSEG_BCYC_INFO&quot;/&gt; 	&lt;field name=&quot;CAN_RSN_DESC&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;EXP_MSG&quot;/&gt; 	&lt;field name=&quot;QTE_DTL_INFO&quot;/&gt; 	&lt;field name=&quot;QUOTE_ID&quot;/&gt; 	&lt;field name=&quot;USAGE_PERIOD&quot;/&gt; 	&lt;field name=&quot;ACTION_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_DELETE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_FREEZE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_GENERATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_INIT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REBILL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REGEN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_UNDO_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CR_NOTE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CORR_NOTE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HIDE_FREEZE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_CANCEL_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_DELETE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_FREEZE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_GENERATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_INIT_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_REBILL_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_UNDO_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_CR_NOTE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_CORR_NOTE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CALC_DTLS_VISIBLE_SW&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;CALC_DTLS_ALLOWED_SW&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;USAGE_DTTM_ALLOWED_SW&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;USAGE_DTLS_VISIBLE_SW&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;CUTOFF_DT&quot;&gt;${CUTOFF_DT_SA}&lt;/field&gt; 	&lt;field name=&quot;ACCOUNTING_DT&quot;&gt;${ACCOUNTING_DT}&lt;/field&gt; 	&lt;field name=&quot;CAN_RSN_CD&quot;/&gt; 	&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BILLING_OPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;USE_OLD_INFO_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;OBC_BILL_DT&quot;&gt;${OBC_BILL_DT}&lt;/field&gt; 	&lt;field name=&quot;CREDIT_NOTE&quot;/&gt; 	&lt;field name=&quot;CORRECTION_NOTE&quot;/&gt; 	&lt;field name=&quot;BILL_STAT_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;SHOW_ACCTNG_DT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FRZ_CNC_POP_UP_MSG&quot;/&gt; 	&lt;field name=&quot;PROCESS_DT&quot;&gt;2014-01-22&lt;/field&gt; 	&lt;field name=&quot;SPECIAL_USAGE_FLG&quot;/&gt; 	&lt;field name=&quot;SATY_REQ_BD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FUND_ACTG_FLG&quot;&gt;NTPR&lt;/field&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CHG_BSEG_STAT_FLG&quot;/&gt; 	&lt;field name=&quot;CHG_SQ_OVERRIDE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CHG_ITEM_OVERRIDE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BSEG_ID&quot;&gt;${BSEG_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_CYC_CD&quot;/&gt; 	&lt;field name=&quot;WIN_START_DT&quot;/&gt; 	&lt;field name=&quot;CAN_RSN_CD2&quot;/&gt; 	&lt;field name=&quot;CAN_BSEG_ID&quot;/&gt; 	&lt;field name=&quot;SA_ID&quot;&gt;${SA_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ID&quot;&gt;${BILL_ID}&lt;/field&gt; 	&lt;field name=&quot;START_DT&quot;&gt;2013-01-01&lt;/field&gt; 	&lt;field name=&quot;END_DT&quot;&gt;2013-01-31&lt;/field&gt; 	&lt;field name=&quot;EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CLOSING_BSEG_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SQ_OVERRIDE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ITEM_OVERRIDE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;BSEG_STAT_FLG&quot;&gt;30&lt;/field&gt; 	&lt;field name=&quot;CRE_DTTM&quot;&gt;2014-01-22-14.49.50&lt;/field&gt; 	&lt;field name=&quot;STAT_CHG_DTTM&quot;/&gt; 	&lt;field name=&quot;REBILL_SEG_ID&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 	&lt;field name=&quot;MASTER_BSEG_ID&quot;/&gt; 	&lt;field name=&quot;QUOTE_DTL_ID&quot;/&gt; 	&lt;field name=&quot;BSEG_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;MDM_START_DTTM&quot;/&gt; 	&lt;field name=&quot;MDM_END_DTTM&quot;/&gt; 	&lt;field name=&quot;BILL_SCNR_ID&quot;/&gt; 	&lt;field name=&quot;C1_T_CHG_BSEG_STAT_FLG&quot;/&gt; 	&lt;field name=&quot;C1_T_CHG_SQ_OVERRIDE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_T_CHG_ITEM_OVERRIDE_SW&quot;&gt;false&lt;/field&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILBSEGP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Usuniecie segmentu faktury] /ouaf/pageDelete?service=CILBBLLP" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;BSEG_INFO&quot;&gt;${BSEG_INFO}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, drzemi89552&lt;/field&gt; 	&lt;field name=&quot;BILL_INFO&quot;&gt;Data: , Oczekująca, termin:&lt;/field&gt; 	&lt;field name=&quot;SA_INFO&quot;&gt;Umowa sprzedaży energii elektrycznej, Aktywna, Grupa taryfowa C21, 01-01-2013, 0886873168,&lt;/field&gt; 	&lt;field name=&quot;CURRENT_AMT&quot;&gt;488.93&lt;/field&gt; 	&lt;field name=&quot;PAYOFF_AMT&quot;&gt;488.93&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;SA_REL_ID&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;&gt;Worska 25, 13-467 Marinos89552, Obiekt biurowy, 3763827162&lt;/field&gt; 	&lt;field name=&quot;BSEG_PERIOD&quot;/&gt; 	&lt;field name=&quot;BSEG_STAT_DESC&quot;&gt;Podlega zamrażaniu&lt;/field&gt; 	&lt;field name=&quot;BSEG_BCYC_INFO&quot;/&gt; 	&lt;field name=&quot;CAN_RSN_DESC&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;EXP_MSG&quot;/&gt; 	&lt;field name=&quot;QTE_DTL_INFO&quot;/&gt; 	&lt;field name=&quot;QUOTE_ID&quot;/&gt; 	&lt;field name=&quot;USAGE_PERIOD&quot;/&gt; 	&lt;field name=&quot;ACTION_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_DELETE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_FREEZE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_GENERATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_INIT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REBILL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REGEN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_UNDO_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CR_NOTE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CORR_NOTE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HIDE_FREEZE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_CANCEL_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_DELETE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_FREEZE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_GENERATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_INIT_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_REBILL_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_UNDO_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_CR_NOTE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_CORR_NOTE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CALC_DTLS_VISIBLE_SW&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;CALC_DTLS_ALLOWED_SW&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;USAGE_DTTM_ALLOWED_SW&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;USAGE_DTLS_VISIBLE_SW&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;CUTOFF_DT&quot;&gt;${CUTOFF_DT_SA}&lt;/field&gt; 	&lt;field name=&quot;ACCOUNTING_DT&quot;&gt;${ACCOUNTING_DT}&lt;/field&gt; 	&lt;field name=&quot;CAN_RSN_CD&quot;/&gt; 	&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BILLING_OPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;USE_OLD_INFO_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;OBC_BILL_DT&quot;&gt;${OBC_BILL_DT}&lt;/field&gt; 	&lt;field name=&quot;CREDIT_NOTE&quot;/&gt; 	&lt;field name=&quot;CORRECTION_NOTE&quot;/&gt; 	&lt;field name=&quot;BILL_STAT_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;SHOW_ACCTNG_DT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FRZ_CNC_POP_UP_MSG&quot;/&gt; 	&lt;field name=&quot;PROCESS_DT&quot;&gt;2014-01-22&lt;/field&gt; 	&lt;field name=&quot;SPECIAL_USAGE_FLG&quot;/&gt; 	&lt;field name=&quot;SATY_REQ_BD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FUND_ACTG_FLG&quot;&gt;NTPR&lt;/field&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CHG_BSEG_STAT_FLG&quot;/&gt; 	&lt;field name=&quot;CHG_SQ_OVERRIDE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CHG_ITEM_OVERRIDE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BSEG_ID&quot;&gt;${BSEG_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_CYC_CD&quot;/&gt; 	&lt;field name=&quot;WIN_START_DT&quot;/&gt; 	&lt;field name=&quot;CAN_RSN_CD2&quot;/&gt; 	&lt;field name=&quot;CAN_BSEG_ID&quot;/&gt; 	&lt;field name=&quot;SA_ID&quot;&gt;${SA_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ID&quot;&gt;${BILL_ID}&lt;/field&gt; 	&lt;field name=&quot;START_DT&quot;&gt;2013-01-01&lt;/field&gt; 	&lt;field name=&quot;END_DT&quot;&gt;2013-01-31&lt;/field&gt; 	&lt;field name=&quot;EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CLOSING_BSEG_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SQ_OVERRIDE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ITEM_OVERRIDE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;BSEG_STAT_FLG&quot;&gt;30&lt;/field&gt; 	&lt;field name=&quot;CRE_DTTM&quot;&gt;2014-01-22-14.49.50&lt;/field&gt; 	&lt;field name=&quot;STAT_CHG_DTTM&quot;/&gt; 	&lt;field name=&quot;REBILL_SEG_ID&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 	&lt;field name=&quot;MASTER_BSEG_ID&quot;/&gt; 	&lt;field name=&quot;QUOTE_DTL_ID&quot;/&gt; 	&lt;field name=&quot;BSEG_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;MDM_START_DTTM&quot;/&gt; 	&lt;field name=&quot;MDM_END_DTTM&quot;/&gt; 	&lt;field name=&quot;BILL_SCNR_ID&quot;/&gt; 	&lt;field name=&quot;C1_T_CHG_BSEG_STAT_FLG&quot;/&gt; 	&lt;field name=&quot;C1_T_CHG_SQ_OVERRIDE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_T_CHG_ITEM_OVERRIDE_SW&quot;&gt;false&lt;/field&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageDelete?service=CILBBLLP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-897336524">resultCode.: .E....serverMessage&quot;: {&quot;message&quot;: &quot;(.*) not found in the database</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2139009542">while.1.</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="318687791">resultCode&quot;: &quot;E&quot;, &quot;serverMessage&quot;: {&quot;message</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="4 Kasowanie ok" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Usuniecie faktury] /ouaf/pageDelete?service=CILBBLLP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;BILL_ID&quot;&gt;${BILL_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_CYC_CD&quot;/&gt; 	&lt;field name=&quot;WIN_START_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_STAT_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;BILL_DT&quot;/&gt; 	&lt;field name=&quot;DUE_DT&quot;/&gt; 	&lt;field name=&quot;CRE_DTTM&quot;&gt;2014-01-22-14.03.56&lt;/field&gt; 	&lt;field name=&quot;COMPLETE_DTTM&quot;/&gt; 	&lt;field name=&quot;LATE_PAY_CHARGE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LATE_PAY_CHARGE_DT&quot;/&gt; 	&lt;field name=&quot;ALLOW_REOPEN_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 	&lt;field name=&quot;NEXT_CR_RVW_DT&quot;/&gt; 	&lt;field name=&quot;CR_NOTE_FR_BILL_ID&quot;/&gt; 	&lt;field name=&quot;ALT_BILL_ID&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;APAY_CRE_DT&quot;/&gt; 	&lt;field name=&quot;APAY_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;APAY_STOP_USER_ID&quot;/&gt; 	&lt;field name=&quot;APAY_STOP_DTTM&quot;/&gt; 	&lt;field name=&quot;APAY_STOP_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;APAY_STOP_CRE_DT&quot;/&gt; 	&lt;field name=&quot;ARCHIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DOC_ID&quot;/&gt; 	&lt;field name=&quot;DOC_TYPE_FLG&quot;/&gt; 	&lt;field name=&quot;OFFCYC_BGEN_ID&quot;/&gt; 	&lt;field name=&quot;BILL_SIGN&quot;/&gt; 	&lt;field name=&quot;ACTION_GENERATE2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_FREEZE2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_COMPLETE2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REOPEN2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_DELETE2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_DSP_BL2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SAVE_BILL_ID&quot;&gt;${BILL_ID}&lt;/field&gt; 	&lt;field name=&quot;ON_LINE_BILL_URL&quot;/&gt; 	&lt;field name=&quot;BILPRT_PLATFORM_FLG&quot;/&gt; 	&lt;field name=&quot;REPORT_CD&quot;/&gt; 	&lt;field name=&quot;BILL_INFO&quot;&gt;Data: , Oczekująca, termin:&lt;/field&gt; 	&lt;field name=&quot;BILL_STATUS&quot;&gt;Oczekująca&lt;/field&gt; 	&lt;field name=&quot;ACCT_NAME&quot;&gt;Biznesowy, 0,00zł, drzemi82042&lt;/field&gt; 	&lt;field name=&quot;BEGINNING_BAL&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_PAYMENTS&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_ADJUSTMENTS&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_CORRECTIONS&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_CURR_CHGS&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;ENDING_BAL&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_COM_REBILL&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_COM_CANCEL&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_AFT_COMPLETION&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;EXP_MSG&quot;/&gt; 	&lt;field name=&quot;BSEG_STATUS_INFO&quot;&gt;Wszystkie segmenty podlegają zamrażaniu.&lt;/field&gt; 	&lt;field name=&quot;CREDIT_NOTE_MSG&quot;/&gt; 	&lt;field name=&quot;CORR_NOTE_MSG_1&quot;/&gt; 	&lt;field name=&quot;CORR_NOTE_MSG_2&quot;/&gt; 	&lt;field name=&quot;TOT_GEN_CHG&quot;&gt;488.93&lt;/field&gt; 	&lt;field name=&quot;LATEST_BILL_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;FRZ_CNC_POP_UP_MSG&quot;/&gt; 	&lt;field name=&quot;PROCESS_DT&quot;&gt;2014-01-22&lt;/field&gt; 	&lt;field name=&quot;AUTO_PAY_MSG&quot;/&gt; 	&lt;field name=&quot;ARCHIVE_MSG&quot;/&gt; 	&lt;field name=&quot;CM_WRK_FLD&quot;/&gt; 	&lt;field name=&quot;TOTAL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;RETRIEVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;RETRIEVE_FILTER&quot;/&gt; 	&lt;field name=&quot;RETRIEVED_BILL_ID&quot;&gt;${BILL_ID}&lt;/field&gt; 	&lt;field name=&quot;SA_FILTER_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;BS_STAT_FILTER_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;/&gt; 	&lt;field name=&quot;CITY&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;GEO_VAL&quot;/&gt; 	&lt;field name=&quot;ACTION_GENERATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_FREEZE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_COMPLETE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_FRZ_CMPL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REOPEN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_DELETE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_DSP_BL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CR_NOTE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CAN_FRZN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_STP_APAY_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_WO_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REV_WO_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CORR_NOTE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_UNDO_CORR_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HIDE_FREEZE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;HIDE_COMPLETE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;HIDE_FRZ_CMPL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HIDE_STP_APAY_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;HIDE_WRITE_OFF_SW&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;HIDE_REV_WO_SW&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;HIDE_CANCEL_SW&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;PROT_GENERATE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_FREEZE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_COMPLETE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_FRZ_CMPL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_REOPEN_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_DELETE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_CR_NOTE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_CAN_FRZN_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_STP_APAY_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_CORR_NOTE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_UNDO_CORR_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_GEN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_FRZ_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_DEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_RBLF_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_CAN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_CRNT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ERROR_SHOWN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUTOFF_DT&quot;/&gt; 	&lt;field name=&quot;ACCOUNTING_DT&quot;&gt;2014-01-22&lt;/field&gt; 	&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BILLING_OPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;USE_OLD_INFO_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CAN_RSN_CD&quot;/&gt; 	&lt;field name=&quot;CAN_FRZN_MSG&quot;/&gt; 	&lt;field name=&quot;CREDIT_NOTE_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;OVRD_BILL_DT_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;BILL_DT_OVRD_MSG&quot;/&gt; 	&lt;field name=&quot;OBC_BILL_DT&quot;&gt;2014-01-22&lt;/field&gt; 	&lt;field name=&quot;SHOW_ACCTNG_DT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CMPLTN_POP_UP_MSG&quot;/&gt; 	&lt;field name=&quot;SHOW_RESULT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BSEG_INFO_1&quot;/&gt; 	&lt;field name=&quot;BSEG_INFO_2&quot;/&gt; 	&lt;field name=&quot;BSEG_INFO_3&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;EMAIL_LBL&quot;&gt;Adres e-mail&lt;/field&gt; 	&lt;field name=&quot;FAX_LBL&quot;&gt;Faks&lt;/field&gt; 	&lt;field name=&quot;COLL_TYPE&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;OPEN_ITEM_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NBR_BAL_ITEM&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;BAL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;NBR_UBAL_ITEM&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;UBAL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;NBR_DISP_ITEM&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;DISP_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;NBR_UMAT_ITEM&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;UMAT_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;OIA_TOTAL_ADJ&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;OIA_TOTAL_CORR&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;OIA_TOTAL_CURR_CHG&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME1&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL1&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME2&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL2&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME3&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL3&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME4&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL4&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME5&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL5&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME6&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL6&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME7&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL7&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME8&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL8&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME9&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL9&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME10&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL10&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;ROWS_SELECTED_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MSG_MORE_THAN_BS&quot;/&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageDelete?service=CILBBLLP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-897336524">resultCode.: .E....serverMessage&quot;: {&quot;message&quot;: &quot;(.*) not found in the database</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-2139009542">while.1.</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">2</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="318687791">resultCode&quot;: &quot;E&quot;, &quot;serverMessage&quot;: {&quot;message</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="5 Zamróź ok" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zamrażanie faktury] /ouaf/pageDefault?service=CILBBLLP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;OBC_BILL_DT&quot;&gt;${OBC_BILL_DT}&lt;/field&gt;&lt;field name=&quot;BILL_STATUS&quot;&gt;${BILL_STATUS}&lt;/field&gt;&lt;field name=&quot;OVRD_BILL_DT_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;SHOW_ACCTNG_DT_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;BILL_ID&quot;&gt;${BILL_ID}&lt;/field&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;BDT&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILBBLLP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="6 END BILL" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[BILL END]/ouaf/pageChange?service=CILBBLLP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;BILL_ID&quot;&gt;${BILL_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_CYC_CD&quot;/&gt; 	&lt;field name=&quot;WIN_START_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_STAT_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;BILL_DT&quot;/&gt; 	&lt;field name=&quot;DUE_DT&quot;/&gt; 	&lt;field name=&quot;CRE_DTTM&quot;&gt;${CRE_DTTM}&lt;/field&gt; 	&lt;field name=&quot;COMPLETE_DTTM&quot;/&gt; 	&lt;field name=&quot;LATE_PAY_CHARGE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LATE_PAY_CHARGE_DT&quot;/&gt; 	&lt;field name=&quot;ALLOW_REOPEN_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 	&lt;field name=&quot;NEXT_CR_RVW_DT&quot;/&gt; 	&lt;field name=&quot;CR_NOTE_FR_BILL_ID&quot;/&gt; 	&lt;field name=&quot;ALT_BILL_ID&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;APAY_CRE_DT&quot;/&gt; 	&lt;field name=&quot;APAY_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;APAY_STOP_USER_ID&quot;/&gt; 	&lt;field name=&quot;APAY_STOP_DTTM&quot;/&gt; 	&lt;field name=&quot;APAY_STOP_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;APAY_STOP_CRE_DT&quot;/&gt; 	&lt;field name=&quot;ARCHIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DOC_ID&quot;/&gt; 	&lt;field name=&quot;DOC_TYPE_FLG&quot;/&gt; 	&lt;field name=&quot;OFFCYC_BGEN_ID&quot;/&gt; 	&lt;field name=&quot;BILL_SIGN&quot;/&gt; 	&lt;field name=&quot;ACTION_GENERATE2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_FREEZE2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_COMPLETE2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REOPEN2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_DELETE2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_DSP_BL2_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SAVE_BILL_ID&quot;&gt;${BILL_ID}&lt;/field&gt; 	&lt;field name=&quot;ON_LINE_BILL_URL&quot;/&gt; 	&lt;field name=&quot;BILPRT_PLATFORM_FLG&quot;/&gt; 	&lt;field name=&quot;REPORT_CD&quot;/&gt; 	&lt;field name=&quot;BILL_INFO&quot;&gt;${BILL_INFO}&lt;/field&gt; 	&lt;field name=&quot;BILL_STATUS&quot;&gt;${BILL_STATUS}&lt;/field&gt; 	&lt;field name=&quot;ACCT_NAME&quot;&gt;Biznesowy, 0,00zł, drzemi51459&lt;/field&gt; 	&lt;field name=&quot;BEGINNING_BAL&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_PAYMENTS&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_ADJUSTMENTS&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_CORRECTIONS&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_CURR_CHGS&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;ENDING_BAL&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_COM_REBILL&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOTAL_COM_CANCEL&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_AFT_COMPLETION&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;EXP_MSG&quot;/&gt; 	&lt;field name=&quot;BSEG_STATUS_INFO&quot;&gt;Wszystkie segmenty podlegają zamrażaniu.&lt;/field&gt; 	&lt;field name=&quot;CREDIT_NOTE_MSG&quot;/&gt; 	&lt;field name=&quot;CORR_NOTE_MSG_1&quot;/&gt; 	&lt;field name=&quot;CORR_NOTE_MSG_2&quot;/&gt; 	&lt;field name=&quot;TOT_GEN_CHG&quot;&gt;${TOT_GEN_CHG}&lt;/field&gt; 	&lt;field name=&quot;LATEST_BILL_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;FRZ_CNC_POP_UP_MSG&quot;/&gt; 	&lt;field name=&quot;PROCESS_DT&quot;&gt;${PROCESS_DT}&lt;/field&gt; 	&lt;field name=&quot;AUTO_PAY_MSG&quot;/&gt; 	&lt;field name=&quot;ARCHIVE_MSG&quot;/&gt; 	&lt;field name=&quot;CM_WRK_FLD&quot;/&gt; 	&lt;field name=&quot;TOTAL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;RETRIEVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;RETRIEVE_FILTER&quot;/&gt; 	&lt;field name=&quot;RETRIEVED_BILL_ID&quot;&gt;${BILL_ID}&lt;/field&gt; 	&lt;field name=&quot;SA_FILTER_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;BS_STAT_FILTER_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;/&gt; 	&lt;field name=&quot;CITY&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;GEO_VAL&quot;/&gt; 	&lt;field name=&quot;ACTION_GENERATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_FREEZE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_COMPLETE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_FRZ_CMPL_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_REOPEN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_DELETE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_DSP_BL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CR_NOTE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CAN_FRZN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_STP_APAY_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_WO_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_REV_WO_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_CORR_NOTE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_UNDO_CORR_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HIDE_FREEZE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;HIDE_COMPLETE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;HIDE_FRZ_CMPL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HIDE_STP_APAY_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;HIDE_WRITE_OFF_SW&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;HIDE_REV_WO_SW&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;HIDE_CANCEL_SW&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;PROT_GENERATE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_FREEZE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_COMPLETE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_FRZ_CMPL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_REOPEN_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_DELETE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PROT_CR_NOTE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_CAN_FRZN_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_STP_APAY_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_CORR_NOTE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;PROT_UNDO_CORR_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_GEN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_FRZ_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_DEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_RBLF_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_CAN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_BS_CRNT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ERROR_SHOWN_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUTOFF_DT&quot;/&gt; 	&lt;field name=&quot;ACCOUNTING_DT&quot;&gt;${ACCOUNTING_DT}&lt;/field&gt; 	&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BILLING_OPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;USE_OLD_INFO_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CAN_RSN_CD&quot;/&gt; 	&lt;field name=&quot;CAN_FRZN_MSG&quot;/&gt; 	&lt;field name=&quot;CREDIT_NOTE_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;OVRD_BILL_DT_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;BILL_DT_OVRD_MSG&quot;/&gt; 	&lt;field name=&quot;OBC_BILL_DT&quot;&gt;${OBC_BILL_DT}&lt;/field&gt; 	&lt;field name=&quot;SHOW_ACCTNG_DT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CMPLTN_POP_UP_MSG&quot;/&gt; 	&lt;field name=&quot;SHOW_RESULT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BSEG_INFO_1&quot;/&gt; 	&lt;field name=&quot;BSEG_INFO_2&quot;/&gt; 	&lt;field name=&quot;BSEG_INFO_3&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;EMAIL_LBL&quot;&gt;Adres e-mail&lt;/field&gt; 	&lt;field name=&quot;FAX_LBL&quot;&gt;Faks&lt;/field&gt; 	&lt;field name=&quot;COLL_TYPE&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;OPEN_ITEM_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NBR_BAL_ITEM&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;BAL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;NBR_UBAL_ITEM&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;UBAL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;NBR_DISP_ITEM&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;DISP_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;NBR_UMAT_ITEM&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;UMAT_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;OIA_TOTAL_ADJ&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;OIA_TOTAL_CORR&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;OIA_TOTAL_CURR_CHG&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME1&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL1&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME2&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL2&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME3&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL3&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME4&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL4&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME5&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL5&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME6&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL6&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME7&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL7&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME8&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL8&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME9&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL9&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;FIELD_NAME10&quot;/&gt; 	&lt;field name=&quot;FIELD_VAL10&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;ROWS_SELECTED_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MSG_MORE_THAN_BS&quot;/&gt; &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILBBLLP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="DOC_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">DOC_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;DOC_ID&quot;:&quot;(.*)&quot;,&quot;DOC_TYPE_FLG&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak DOC_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="TOT_GEN_CHG" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">TOT_GEN_CHG</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;TOT_GEN_CHG&quot;:&quot;(.*)&quot;,&quot;LATEST_BILL_SW&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak TOT_GEN_CHG</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
                <stringProp name="cacheKey"></stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">import java.util.*;
import java.text.*;
NumberFormat format = NumberFormat.getIntegerInstance(Locale.FR);
   Float parsed = (Float) format.parse(vars[&quot;TOT_GEN_CHG&quot;]); 
   parsed += 100;
   vars.put(&quot;NEW_VAR&quot;, format.format(parsed));</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Anuluj zamrażanie" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Otwórz ponownie" enabled="true"/>
          <hashTree/>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Koryguj" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kliknięcie Koryguj" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="language" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">language</stringProp>
                    <stringProp name="Argument.value">POL</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="language" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">language</stringProp>
                    <stringProp name="Argument.value">POL</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/uiPage/billCorrectionNotePopupPage</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="kliknięcie Koryguj" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="xmlRequest" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">xmlRequest</stringProp>
                    <stringProp name="Argument.value">&lt;root&gt;&lt;input&gt;&lt;billId&gt;${BILL_ID}&lt;/billId&gt;&lt;cmValidateOriginalBillIdOnly&gt;true&lt;/cmValidateOriginalBillIdOnly&gt;&lt;/input&gt;&lt;/root&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="globalContextXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">globalContextXML</stringProp>
                    <stringProp name="Argument.value">&lt;globalContext&gt;&lt;ACCT_ID&gt;${ACCT_ID}&lt;/ACCT_ID&gt;&lt;PER_ID&gt;${PER_ID}&lt;/PER_ID&gt;&lt;PREM_ID&gt;${PREM_ID}&lt;/PREM_ID&gt;&lt;/globalContext&gt;  </stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/serverBusinessService?bs=CmCreateCorrectingBillForAdj&amp;ignoreWarnings=false</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageRead?service=CILFFTBP&amp;ignoreWarnings=true" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="BILL_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">BILL_ID</stringProp>
                    <stringProp name="Argument.value">${BILL_ID}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageRead?service=CILFFTBP&amp;ignoreWarnings=true</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageRead?service=CMTWSDP&amp;ignoreWarnings=true" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="EXT_SYS_TYP_FLG" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">EXT_SYS_TYP_FLG</stringProp>
                    <stringProp name="Argument.value">XBIJ</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageRead?service=CMTWSDP&amp;ignoreWarnings=true</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/serverBusinessService?bs=CmCreateCorrectingBillForAdj&amp;ignoreWarnings=false" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="xmlRequest" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">xmlRequest</stringProp>
                    <stringProp name="Argument.value">&lt;root&gt;&lt;input&gt;&lt;billId&gt;${BILL_ID}&lt;/billId&gt;&lt;cmValidateOriginalBillIdOnly&gt;true&lt;/cmValidateOriginalBillIdOnly&gt;&lt;/input&gt;&lt;/root&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="globalContextXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">globalContextXML</stringProp>
                    <stringProp name="Argument.value">&lt;globalContext&gt;&lt;ACCT_ID&gt;4314045666&lt;/ACCT_ID&gt;&lt;PER_ID&gt;5102559587&lt;/PER_ID&gt;&lt;PREM_ID&gt;2355314269&lt;/PREM_ID&gt;&lt;/globalContext&gt;&#xd; </stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/serverBusinessService?bs=CmCreateCorrectingBillForAdj&amp;ignoreWarnings=false</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageChange?service=CILBBLLP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_ID&quot;&gt;431402771678&lt;/field&gt;&lt;field name=&quot;BILL_CYC_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WIN_START_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;4314045666&lt;/field&gt;&lt;field name=&quot;BILL_STAT_FLG&quot;&gt;C&lt;/field&gt;&lt;field name=&quot;BILL_DT&quot;&gt;2014-02-01&lt;/field&gt;&lt;field name=&quot;DUE_DT&quot;&gt;2014-02-17&lt;/field&gt;&lt;field name=&quot;CRE_DTTM&quot;&gt;2014-02-01-09.00.34&lt;/field&gt;&lt;field name=&quot;COMPLETE_DTTM&quot;&gt;2014-02-01-09.00.44&lt;/field&gt;&lt;field name=&quot;LATE_PAY_CHARGE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;LATE_PAY_CHARGE_DT&quot;&gt;2014-02-18&lt;/field&gt;&lt;field name=&quot;ALLOW_REOPEN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;14&lt;/field&gt;&lt;field name=&quot;NEXT_CR_RVW_DT&quot;&gt;2014-02-18&lt;/field&gt;&lt;field name=&quot;CR_NOTE_FR_BILL_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ALT_BILL_ID&quot;&gt;1&lt;/field&gt;&lt;field name=&quot;APAY_CRE_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;APAY_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;APAY_STOP_USER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;APAY_STOP_DTTM&quot;&gt;&lt;/field&gt;&lt;field name=&quot;APAY_STOP_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;APAY_STOP_CRE_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ARCHIVE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;DOC_ID&quot;&gt;4314045666/FES/00001&lt;/field&gt;&lt;field name=&quot;DOC_TYPE_FLG&quot;&gt;FES&lt;/field&gt;&lt;field name=&quot;OFFCYC_BGEN_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_SIGN&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACTION_GENERATE2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_FREEZE2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_COMPLETE2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_REOPEN2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_DELETE2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_DSP_BL2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;SAVE_BILL_ID&quot;&gt;431402771678&lt;/field&gt;&lt;field name=&quot;ON_LINE_BILL_URL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILPRT_PLATFORM_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;REPORT_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_INFO&quot;&gt;Data: 01-02-2014, Zakończ, termin: 17-02-2014, 94,01zł, 4314045666/FES/00001, Faktura rozliczeniowa, Niezapłacone: 1, 94,01zł&lt;/field&gt;&lt;field name=&quot;BILL_STATUS&quot;&gt;Zakończ&lt;/field&gt;&lt;field name=&quot;ACCT_NAME&quot;&gt;Jednostka Wojskowa nr 1278; Biznesowy; 94,01zł; 63 1240 6960 8960 1043 1404 5666&lt;/field&gt;&lt;field name=&quot;BEGINNING_BAL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_PAYMENTS&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_ADJUSTMENTS&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_CORRECTIONS&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_CURR_CHGS&quot;&gt;94.01&lt;/field&gt;&lt;field name=&quot;ENDING_BAL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_COM_REBILL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_COM_CANCEL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_AFT_COMPLETION&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;EXP_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BSEG_STATUS_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CREDIT_NOTE_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CORR_NOTE_MSG_1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CORR_NOTE_MSG_2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;TOT_GEN_CHG&quot;&gt;94.01&lt;/field&gt;&lt;field name=&quot;LATEST_BILL_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;FRZ_CNC_POP_UP_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PROCESS_DT&quot;&gt;2014-02-01&lt;/field&gt;&lt;field name=&quot;AUTO_PAY_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ARCHIVE_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CM_WRK_FLD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;TOTAL_AMT&quot;&gt;94.01&lt;/field&gt;&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;C1_VAL_SCR_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RETRIEVE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;RETRIEVE_FILTER&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RETRIEVED_BILL_ID&quot;&gt;431402771678&lt;/field&gt;&lt;field name=&quot;SA_FILTER_FLG&quot;&gt;ALL&lt;/field&gt;&lt;field name=&quot;BS_STAT_FILTER_FLG&quot;&gt;ALL&lt;/field&gt;&lt;field name=&quot;ADDRESS1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CITY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CIS_DIVISION&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SA_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_VAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACTION_GENERATE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_FREEZE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_COMPLETE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_FRZ_CMPL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_REOPEN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_DELETE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_DSP_BL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_CR_NOTE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_CAN_FRZN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_STP_APAY_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_WO_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_REV_WO_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_CANCEL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_CORR_NOTE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ACTION_UNDO_CORR_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HIDE_FREEZE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;HIDE_COMPLETE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;HIDE_FRZ_CMPL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HIDE_STP_APAY_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;HIDE_WRITE_OFF_SW&quot;&gt;N&lt;/field&gt;&lt;field name=&quot;HIDE_REV_WO_SW&quot;&gt;Y&lt;/field&gt;&lt;field name=&quot;HIDE_CANCEL_SW&quot;&gt;Y&lt;/field&gt;&lt;field name=&quot;PROT_GENERATE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_FREEZE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_COMPLETE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_FRZ_CMPL_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_REOPEN_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_DELETE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_CR_NOTE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_CAN_FRZN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROT_STP_APAY_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_CORR_NOTE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROT_UNDO_CORR_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ACTION_BS_GEN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_FRZ_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_DEL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_RBLF_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_CAN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_CRNT_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ERROR_SHOWN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CUTOFF_DT&quot;&gt;2014-01-31&lt;/field&gt;&lt;field name=&quot;ACCOUNTING_DT&quot;&gt;2014-02-01&lt;/field&gt;&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;BILLING_OPT_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;USE_OLD_INFO_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CAN_RSN_CD&quot;&gt;PK01&lt;/field&gt;&lt;field name=&quot;CAN_FRZN_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CREDIT_NOTE_CNT&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;OVRD_BILL_DT_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;BILL_DT_OVRD_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OBC_BILL_DT&quot;&gt;2014-02-01&lt;/field&gt;&lt;field name=&quot;SHOW_ACCTNG_DT_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CMPLTN_POP_UP_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SHOW_RESULT_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;BSEG_INFO_1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BSEG_INFO_2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BSEG_INFO_3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt;&lt;field name=&quot;EMAIL_LBL&quot;&gt;Adres e-mail&lt;/field&gt;&lt;field name=&quot;FAX_LBL&quot;&gt;Faks&lt;/field&gt;&lt;field name=&quot;COLL_TYPE&quot;&gt;D&lt;/field&gt;&lt;field name=&quot;OPEN_ITEM_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;NBR_BAL_ITEM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;BAL_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;NBR_UBAL_ITEM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;UBAL_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;NBR_DISP_ITEM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;DISP_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;NBR_UMAT_ITEM&quot;&gt;1&lt;/field&gt;&lt;field name=&quot;UMAT_AMT&quot;&gt;94.01&lt;/field&gt;&lt;field name=&quot;OIA_TOTAL_ADJ&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;OIA_TOTAL_CORR&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;OIA_TOTAL_CURR_CHG&quot;&gt;94.01&lt;/field&gt;&lt;field name=&quot;FIELD_NAME1&quot;&gt;Podsumowanie faktury&lt;/field&gt;&lt;field name=&quot;FIELD_VAL1&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME2&quot;&gt;Nowe obciążenia&lt;/field&gt;&lt;field name=&quot;FIELD_VAL2&quot;&gt;94.01&lt;/field&gt;&lt;field name=&quot;FIELD_NAME3&quot;&gt;Opłaty dodatkowe&lt;/field&gt;&lt;field name=&quot;FIELD_VAL3&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME4&quot;&gt;Korekty&lt;/field&gt;&lt;field name=&quot;FIELD_VAL4&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME5&quot;&gt;Suma&lt;/field&gt;&lt;field name=&quot;FIELD_VAL5&quot;&gt;94.01&lt;/field&gt;&lt;field name=&quot;FIELD_NAME6&quot;&gt;Podsumuj dopasowanie&lt;/field&gt;&lt;field name=&quot;FIELD_VAL6&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME7&quot;&gt;Pozycje zbilansowane&lt;/field&gt;&lt;field name=&quot;FIELD_VAL7&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME8&quot;&gt;Pozycje niezbilansowane&lt;/field&gt;&lt;field name=&quot;FIELD_VAL8&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME9&quot;&gt;Pozycje sporne&lt;/field&gt;&lt;field name=&quot;FIELD_VAL9&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME10&quot;&gt;Pozycje niedopasowane&lt;/field&gt;&lt;field name=&quot;FIELD_VAL10&quot;&gt;94.01&lt;/field&gt;&lt;field name=&quot;ROWS_SELECTED_CNT&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;MSG_MORE_THAN_BS&quot;&gt;&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILBBLLP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageRead?service=CILFFTBP&amp;ignoreWarnings=true" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="BILL_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">BILL_ID</stringProp>
                    <stringProp name="Argument.value">431407136731</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageRead?service=CILFFTBP&amp;ignoreWarnings=true</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageRead?service=CMTWSDP&amp;ignoreWarnings=true" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="EXT_SYS_TYP_FLG" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">EXT_SYS_TYP_FLG</stringProp>
                    <stringProp name="Argument.value">XBIJ</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageRead?service=CMTWSDP&amp;ignoreWarnings=true</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/uiPage/billBillSegmentGrid" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="language" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">language</stringProp>
                    <stringProp name="Argument.value">POL</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/uiPage/billBillSegmentGrid</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/uiPage/billBillMainPage?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/cisEnabled.css" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/cisEnabled.css</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/uiPage/billBillSegmentGrid?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/yui/json/json-min.js" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/yui/json/json-min.js</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/uiPage/billBillSegmentGrid?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/code/xslListGridSupport.js" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/code/xslListGridSupport.js</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/uiPage/billBillSegmentGrid?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/images/sortUp.gif" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/images/sortUp.gif</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/uiPage/billBillSegmentGrid?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/yui/yahoo-dom-event/yahoo-dom-event.js" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/yui/yahoo-dom-event/yahoo-dom-event.js</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/uiPage/billBillSegmentGrid?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/code/searchClientSupport.js" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/code/searchClientSupport.js</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/uiPage/billBillSegmentGrid?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/code/keyboard.js" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/code/keyboard.js</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/uiPage/billBillSegmentGrid?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/code/common.js" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/code/common.js</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/uiPage/billBillSegmentGrid?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/cisDisabled.css" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ltr" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ltr</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata"></stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/cisDisabled.css</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/uiPage/billBillSegmentGrid?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/cisEnabled.css" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/cisEnabled.css</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/blankEmpty.html</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/cisDisabled.css" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/cisDisabled.css</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/blankEmpty.html</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/blankEmpty.html" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/blankEmpty.html</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/uiPage/billBillSegmentGrid?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/images/expandScroll.gif" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/images/expandScroll.gif</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/uiPage/billBillSegmentGrid?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/images/collapseScroll.gif" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments"/>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/images/collapseScroll.gif</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/uiPage/billBillSegmentGrid?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/portal" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">dashboard</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="TD_ENTRY_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">TD_ENTRY_ID</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="preferences" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">preferences</stringProp>
                    <stringProp name="Argument.value">%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%0D%0A%3Cportal+name%3D%22CI_DASHBOARD%22%3E%3Czone+name%3D%22CI_ALERTS%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22F1-CURRTODO%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_DBCONTEXT%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_SCRIPTS%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_FININFO%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_CC_Q_ADD%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22F1-WORKLIST%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_CAMPAIGN%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_TODO%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22F1_SWTCHLANG%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_FAVORITES%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22F1-USRCHKOUT%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3C%2Fportal%3E</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%0D%0A%3Cprofile%3E%3CportalProfileUserId%3E%3C%2FportalProfileUserId%3E%3CcurrencyCode%3EPLN%3C%2FcurrencyCode%3E%3CtimeFormat%3EHH%3Amm%3Ass%3C%2FtimeFormat%3E%3CmoneyFormat%3E-1.1%3C%2FmoneyFormat%3E%3CshowAllPremises%3EN%3C%2FshowAllPremises%3E%3CnumberGroupSeparator%3ES%3C%2FnumberGroupSeparator%3E%3CdecimalSeparator%3E%2C%3C%2FdecimalSeparator%3E%3CisTemplateUser%3Efalse%3C%2FisTemplateUser%3E%3CdateDisplayFormat%3Edd-MM-yyyy%3C%2FdateDisplayFormat%3E%3CnumberFormat%3E-1.1%3C%2FnumberFormat%3E%3CmoneyDecimalDigits%3E2%3C%2FmoneyDecimalDigits%3E%3CdashboardWidth%3E200%3C%2FdashboardWidth%3E%3CuserTimeZone%3ECET%3C%2FuserTimeZone%3E%3ChomePage%3ECI0000001399%3C%2FhomePage%3E%3CuserTag%3E%3C%2FuserTag%3E%3C%2Fprofile%3E</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="favorites" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">favorites</stringProp>
                    <stringProp name="Argument.value">%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%0D%0A%3Cfavorites%2F%3E</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="debug" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">debug</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="traceTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">traceTime</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="traceSQL" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">traceSQL</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="traceProgramStart" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">traceProgramStart</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="traceProgramEnd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">traceProgramEnd</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="traceCobolBuffers" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">traceCobolBuffers</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="contextNavigationKey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">contextNavigationKey</stringProp>
                    <stringProp name="Argument.value">billForAcct</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="configToolDebug" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">configToolDebug</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">GOaMxngqRIUDiZJhWWdXqqmlefZq4vQCznDuCU8c1Z8%3D</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ACCT_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ACCT_ID</stringProp>
                    <stringProp name="Argument.value">4314045666</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CONTEXT_NAME1" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CONTEXT_NAME1</stringProp>
                    <stringProp name="Argument.value">ACCT_ID</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CONTEXT_VALUE1" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CONTEXT_VALUE1</stringProp>
                    <stringProp name="Argument.value">4314045666</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PER_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PER_ID</stringProp>
                    <stringProp name="Argument.value">5102559587</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CONTEXT_NAME2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CONTEXT_NAME2</stringProp>
                    <stringProp name="Argument.value">PER_ID</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CONTEXT_VALUE2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CONTEXT_VALUE2</stringProp>
                    <stringProp name="Argument.value">5102559587</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PREM_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PREM_ID</stringProp>
                    <stringProp name="Argument.value">2355314269</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CONTEXT_NAME3" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CONTEXT_NAME3</stringProp>
                    <stringProp name="Argument.value">PREM_ID</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CONTEXT_VALUE3" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CONTEXT_VALUE3</stringProp>
                    <stringProp name="Argument.value">2355314269</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="cache_CI_TODO" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">cache_CI_TODO</stringProp>
                    <stringProp name="Argument.value">%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%0D%0A%3CpageBody+action%3D%22%22+metaInfoKey%3D%22CILQTDSP%22%3E%3Cfield+type%3D%22string%22+name%3D%22USER_FULL_NAME%22%3ECichy%2C+Konrad%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORKED_ONLY_SW%22%3E%3C%2Ffield%3E%3Clist+name%3D%22TODO_SUMM%22+service%3D%22CILQTDSL%22%3E%3ClistHeader+action%3D%22%22+hasMoreRows%3D%22false%22+alertRowIndex%3D%220%22%3E%3Cfield+type%3D%22string%22+name%3D%22USER_ID%22%3E%3C%2Ffield%3E%3C%2FlistHeader%3E%3C%2Flist%3E%3C%2FpageBody%3E</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.122.76</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/portal</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/dashboard.jsp</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Cofanie faktury korygującej" enabled="true"/>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Kasowanie faktury" enabled="true">
            <boolProp name="TransactionController.parent">false</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageDefault?service=CILBBLLP" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt;
&lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;COU&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILBBLLP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="[Wyszukanie faktury] /ouaf/search?service=CILBBILS" enabled="false"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/search?service=CILBBILS" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="SEARCH_TYPE" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">SEARCH_TYPE</stringProp>
                      <stringProp name="Argument.value">MN</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="BILL_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">BILL_ID</stringProp>
                      <stringProp name="Argument.value">${BILL_ID}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_TYPE_CD" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_TYPE_CD</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_ENTITY_FLG" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_ENTITY_FLG</stringProp>
                      <stringProp name="Argument.value">BILL</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_VAL" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_VAL</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_VAL_FK1" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_VAL_FK1</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_VAL_FK2" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_VAL_FK2</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_VAL_FK3" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_VAL_FK3</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_VAL_FK4" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_VAL_FK4</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_VAL_FK5" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_VAL_FK5</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_VAL_FK_STR" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_VAL_FK_STR</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_VAL_FK_INFO" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_VAL_FK_INFO</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ENTITY_NAME" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">ENTITY_NAME</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/search?service=CILBBILS</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageRead?service=CILBBLLP&amp;ignoreWarnings=false" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="ACCT_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">ACCT_ID</stringProp>
                      <stringProp name="Argument.value">${ACCT_ID}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="DESCR" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">DESCR</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="DESCR2" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">DESCR2</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="BILL_DT" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">BILL_DT</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="BILL_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">BILL_ID</stringProp>
                      <stringProp name="Argument.value">${BILL_ID}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ENTITY_NAME" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">ENTITY_NAME</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="DUE_DT" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">DUE_DT</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CUR_AMT" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CUR_AMT</stringProp>
                      <stringProp name="Argument.value">0.00</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ALT_BILL_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">ALT_BILL_ID</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="DOC_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">DOC_ID</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="DOC_TYPE_FLG" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">DOC_TYPE_FLG</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ORIGINAL_BILL_DT" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">ORIGINAL_BILL_DT</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_TYPE_CD" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_TYPE_CD</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_TYPE_FLG" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_TYPE_FLG</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_VAL" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_VAL</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ADHOC_CHAR_VAL" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">ADHOC_CHAR_VAL</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_VAL_FK1" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_VAL_FK1</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_VAL_FK2" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_VAL_FK2</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_VAL_FK3" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_VAL_FK3</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_VAL_FK4" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_VAL_FK4</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CHAR_VAL_FK5" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CHAR_VAL_FK5</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="CURRENCY_CD" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CURRENCY_CD</stringProp>
                      <stringProp name="Argument.value">PLN</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="getCurrencyCode" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">getCurrencyCode</stringProp>
                      <stringProp name="Argument.value">function() {&#xd;
    return this.CURRENCY_CD;&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageRead?service=CILBBLLP&amp;ignoreWarnings=false</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/uiPage/billBillSegmentGrid" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="language" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">language</stringProp>
                      <stringProp name="Argument.value">POL</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/uiPage/billBillSegmentGrid</stringProp>
                <stringProp name="HTTPSampler.method">GET</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl-PL</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/uiPage/billBillMainPage?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="/ouaf/pageRead?service=CILZMSGP&amp;ignoreWarnings=true" enabled="false"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageRead?service=CILZMSGP&amp;ignoreWarnings=true" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MESSAGE_CAT_NBR" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MESSAGE_CAT_NBR</stringProp>
                      <stringProp name="Argument.value">11001</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="MESSAGE_NBR" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MESSAGE_NBR</stringProp>
                      <stringProp name="Argument.value">202</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageRead?service=CILZMSGP&amp;ignoreWarnings=true</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
            <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="[Kasowanie faktury] /ouaf/pageDelete?service=CILBBLLP" enabled="true"/>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Usuniecie faktury] /ouaf/pageDelete?service=CILBBLLP" enabled="true">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_ID&quot;&gt;${BILL_ID}&lt;/field&gt;&lt;field name=&quot;BILL_CYC_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WIN_START_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt;&lt;field name=&quot;BILL_STAT_FLG&quot;&gt;P&lt;/field&gt;&lt;field name=&quot;BILL_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;DUE_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CRE_DTTM&quot;&gt;2013-11-04-08.11.28&lt;/field&gt;&lt;field name=&quot;COMPLETE_DTTM&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LATE_PAY_CHARGE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;LATE_PAY_CHARGE_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ALLOW_REOPEN_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt;&lt;field name=&quot;NEXT_CR_RVW_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CR_NOTE_FR_BILL_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ALT_BILL_ID&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;APAY_CRE_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;APAY_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;APAY_STOP_USER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;APAY_STOP_DTTM&quot;&gt;&lt;/field&gt;&lt;field name=&quot;APAY_STOP_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;APAY_STOP_CRE_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ARCHIVE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;DOC_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;DOC_TYPE_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OFFCYC_BGEN_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_SIGN&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACTION_GENERATE2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_FREEZE2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_COMPLETE2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_REOPEN2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_DELETE2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_DSP_BL2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;SAVE_BILL_ID&quot;&gt;${BILL_ID}&lt;/field&gt;&lt;field name=&quot;ON_LINE_BILL_URL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILPRT_PLATFORM_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;REPORT_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_INFO&quot;&gt;Data: , Oczekująca, termin:&lt;/field&gt;&lt;field name=&quot;BILL_STATUS&quot;&gt;Oczekująca&lt;/field&gt;&lt;field name=&quot;ACCT_NAME&quot;&gt;JMETERPawlonka,Augustyna 58610, Indywidualny, 0,00PLN, 6284790034,&lt;/field&gt;&lt;field name=&quot;BEGINNING_BAL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_PAYMENTS&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_ADJUSTMENTS&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_CORRECTIONS&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_CURR_CHGS&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;ENDING_BAL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_COM_REBILL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_COM_CANCEL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_AFT_COMPLETION&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;EXP_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BSEG_STATUS_INFO&quot;&gt;Wszystkie segmenty są błędne.&lt;/field&gt;&lt;field name=&quot;CREDIT_NOTE_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CORR_NOTE_MSG_1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CORR_NOTE_MSG_2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;TOT_GEN_CHG&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;LATEST_BILL_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;FRZ_CNC_POP_UP_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PROCESS_DT&quot;&gt;2013-11-04&lt;/field&gt;&lt;field name=&quot;AUTO_PAY_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ARCHIVE_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CM_WRK_FLD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;TOTAL_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;C1_VAL_SCR_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RETRIEVE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;RETRIEVE_FILTER&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RETRIEVED_BILL_ID&quot;&gt;${BILL_ID}&lt;/field&gt;&lt;field name=&quot;SA_FILTER_FLG&quot;&gt;ALL&lt;/field&gt;&lt;field name=&quot;BS_STAT_FILTER_FLG&quot;&gt;ALL&lt;/field&gt;&lt;field name=&quot;ADDRESS1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CITY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CIS_DIVISION&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SA_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_VAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACTION_GENERATE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_FREEZE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_COMPLETE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_FRZ_CMPL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_REOPEN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_DELETE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_DSP_BL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_CR_NOTE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_CAN_FRZN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_STP_APAY_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_WO_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_REV_WO_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_CANCEL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_CORR_NOTE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_UNDO_CORR_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HIDE_FREEZE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HIDE_COMPLETE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HIDE_FRZ_CMPL_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;HIDE_STP_APAY_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;HIDE_WRITE_OFF_SW&quot;&gt;Y&lt;/field&gt;&lt;field name=&quot;HIDE_REV_WO_SW&quot;&gt;Y&lt;/field&gt;&lt;field name=&quot;HIDE_CANCEL_SW&quot;&gt;Y&lt;/field&gt;&lt;field name=&quot;PROT_GENERATE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_FREEZE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_COMPLETE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_FRZ_CMPL_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_REOPEN_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_DELETE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROT_CR_NOTE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_CAN_FRZN_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_STP_APAY_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_CORR_NOTE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;PROT_UNDO_CORR_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ACTION_BS_GEN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_FRZ_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_DEL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_RBLF_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_CAN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_CRNT_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ERROR_SHOWN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CUTOFF_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACCOUNTING_DT&quot;&gt;2013-11-04&lt;/field&gt;&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;BILLING_OPT_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;USE_OLD_INFO_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CAN_RSN_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CAN_FRZN_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CREDIT_NOTE_CNT&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;OVRD_BILL_DT_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;BILL_DT_OVRD_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OBC_BILL_DT&quot;&gt;2013-11-04&lt;/field&gt;&lt;field name=&quot;SHOW_ACCTNG_DT_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CMPLTN_POP_UP_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SHOW_RESULT_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;BSEG_INFO_1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BSEG_INFO_2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BSEG_INFO_3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt;&lt;field name=&quot;EMAIL_LBL&quot;&gt;Adres e-mail&lt;/field&gt;&lt;field name=&quot;FAX_LBL&quot;&gt;Faks&lt;/field&gt;&lt;field name=&quot;COLL_TYPE&quot;&gt;D&lt;/field&gt;&lt;field name=&quot;OPEN_ITEM_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;NBR_BAL_ITEM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;BAL_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;NBR_UBAL_ITEM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;UBAL_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;NBR_DISP_ITEM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;DISP_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;NBR_UMAT_ITEM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;UMAT_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;OIA_TOTAL_ADJ&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;OIA_TOTAL_CORR&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;OIA_TOTAL_CURR_CHG&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL1&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL2&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL3&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME4&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL4&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME5&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL5&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME6&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL6&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME7&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL7&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME8&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL8&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME9&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL9&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME10&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL10&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;ROWS_SELECTED_CNT&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;MSG_MORE_THAN_BS&quot;&gt;&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageDelete?service=CILBBLLP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-897336524">resultCode.: .E....serverMessage&quot;: {&quot;message&quot;: &quot;(.*) not found in the database</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="-2139009542">while.1.</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">2</intProp>
                </ResponseAssertion>
                <hashTree/>
                <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                  <collectionProp name="Asserion.test_strings">
                    <stringProp name="318687791">resultCode&quot;: &quot;E&quot;, &quot;serverMessage&quot;: {&quot;message</stringProp>
                  </collectionProp>
                  <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                  <boolProp name="Assertion.assume_success">false</boolProp>
                  <intProp name="Assertion.test_type">6</intProp>
                </ResponseAssertion>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageDefault?service=CILBBLLP" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="pageBody" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">pageBody</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt;
&lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;COU&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">${SecurityToken}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain"></stringProp>
                <stringProp name="HTTPSampler.port"></stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol"></stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILBBLLP</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/portal" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="type" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">type</stringProp>
                      <stringProp name="Argument.value">dashboard</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="TD_ENTRY_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">TD_ENTRY_ID</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="preferences" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">preferences</stringProp>
                      <stringProp name="Argument.value">%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%0D%0A%3Cportal+name%3D%22CI_DASHBOARD%22%3E%3Czone+name%3D%22CI_ALERTS%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_CAMPAIGN%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22F1-USRCHKOUT%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_DBCONTEXT%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22F1-CURRTODO%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_CC_Q_ADD%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_SCRIPTS%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_FAVORITES%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22F1_USRSCR%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_FININFO%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_DOCTDB%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_UPDFEATCG%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22F1_SWTCHLANG%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22CI_TODO%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3Czone+name%3D%22F1-WORKLIST%22+collapsed%3D%22false%22+refreshPeriod%3D%220%22%2F%3E%3C%2Fportal%3E</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%0D%0A%3Cprofile%3E%3CportalProfileUserId%3EDEMO%3C%2FportalProfileUserId%3E%3CcurrencyCode%3EUSD%3C%2FcurrencyCode%3E%3CtimeFormat%3EHH%3Amm%3Ass%3C%2FtimeFormat%3E%3CmoneyFormat%3E1.1-%3C%2FmoneyFormat%3E%3CshowAllPremises%3EY%3C%2FshowAllPremises%3E%3CnumberGroupSeparator%3E.%3C%2FnumberGroupSeparator%3E%3CdecimalSeparator%3E%2C%3C%2FdecimalSeparator%3E%3CisTemplateUser%3Efalse%3C%2FisTemplateUser%3E%3CdateDisplayFormat%3Ed-M-yyyy%3C%2FdateDisplayFormat%3E%3CnumberFormat%3E1.1-%3C%2FnumberFormat%3E%3CmoneyDecimalDigits%3E2%3C%2FmoneyDecimalDigits%3E%3CdashboardWidth%3E200%3C%2FdashboardWidth%3E%3CuserTimeZone%3EUSEASTERN%3C%2FuserTimeZone%3E%3ChomePage%3ECI0000001399%3C%2FhomePage%3E%3CuserTag%3E%3C%2FuserTag%3E%3C%2Fprofile%3E</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="favorites" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">favorites</stringProp>
                      <stringProp name="Argument.value">%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%0D%0A%3Cfavorites%3E%3CnavLink+name%3D%22CI0000000722%22%2F%3E%3CnavLink+name%3D%22CI0000001399%22%2F%3E%3CnavLink+name%3D%22CI0000001340%22%2F%3E%3C%2Ffavorites%3E</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="debug" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">debug</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="traceTime" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">traceTime</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="traceSQL" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">traceSQL</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="traceProgramStart" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">traceProgramStart</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="traceProgramEnd" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">traceProgramEnd</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="traceCobolBuffers" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">traceCobolBuffers</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="contextNavigationKey" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">contextNavigationKey</stringProp>
                      <stringProp name="Argument.value">billForAcct</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="configToolDebug" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">configToolDebug</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">wBj79HQ5qEY8DG30D0yjx%2F9Xk67jbJpxmJzGmu40160%3D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="ACCT_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">ACCT_ID</stringProp>
                      <stringProp name="Argument.value">6284790034</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="CONTEXT_NAME1" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CONTEXT_NAME1</stringProp>
                      <stringProp name="Argument.value">ACCT_ID</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="CONTEXT_VALUE1" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CONTEXT_VALUE1</stringProp>
                      <stringProp name="Argument.value">6284790034</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="PER_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">PER_ID</stringProp>
                      <stringProp name="Argument.value">5597967344</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="CONTEXT_NAME2" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CONTEXT_NAME2</stringProp>
                      <stringProp name="Argument.value">PER_ID</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="CONTEXT_VALUE2" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CONTEXT_VALUE2</stringProp>
                      <stringProp name="Argument.value">5597967344</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="PREM_ID" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">PREM_ID</stringProp>
                      <stringProp name="Argument.value">8618421675</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="CONTEXT_NAME3" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CONTEXT_NAME3</stringProp>
                      <stringProp name="Argument.value">PREM_ID</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="CONTEXT_VALUE3" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">CONTEXT_VALUE3</stringProp>
                      <stringProp name="Argument.value">8618421675</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="cache_CI_TODO" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">cache_CI_TODO</stringProp>
                      <stringProp name="Argument.value">%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%0D%0A%3CpageBody+action%3D%22%22+metaInfoKey%3D%22CILQTDSP%22%3E%3Cfield+type%3D%22string%22+name%3D%22USER_FULL_NAME%22%3EStudent%2C+01%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORKED_ONLY_SW%22%3E%3C%2Ffield%3E%3Clist+name%3D%22TODO_SUMM%22+service%3D%22CILQTDSL%22%3E%3ClistHeader+action%3D%22%22+hasMoreRows%3D%22false%22+alertRowIndex%3D%220%22%3E%3Cfield+type%3D%22string%22+name%3D%22USER_ID%22%3E%3C%2Ffield%3E%3C%2FlistHeader%3E%3ClistBody+action%3D%22%22%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_CD%22%3EFANRMRCO%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_DESCR%22%3EB%C5%82.+zad.+dot.+ko%C5%84.+zad.+w+ter.+przy+u%C5%BC.+ost.+odcz.+licz.%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_PRIORITY_INFO%22%3E10%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22TOTAL_CNT%22+raw%3D%2228%22%3E28%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_CNT%22+raw%3D%2228%22%3E28%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22BEING_WORKED_CNT%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE1%22+raw%3D%222%22%3E2%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE3%22+raw%3D%2226%22%3E26%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL1%22%3ELiczba+otwartych+zapis%C3%B3w+m%C5%82odszych+ni%C5%BC+5+dni%3A+2%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL3%22%3E26+otwartych+zapis%C3%B3w+starszych+ni%C5%BC+10+dni%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE3%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL3%22%3E%3C%2Ffield%3E%3C%2FlistBody%3E%3ClistBody+action%3D%22%22%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_CD%22%3ECI_HLPDD%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_DESCR%22%3EHelp+Ticket+%28Used+in+demo+data+propagation%29%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_PRIORITY_INFO%22%3E10+%281%29%2C+50+%281%29%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22TOTAL_CNT%22+raw%3D%222%22%3E2%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_CNT%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22BEING_WORKED_CNT%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE3%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL3%22%3E1+otwartych+zapis%C3%B3w+starszych+ni%C5%BC+10+dni%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE3%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL3%22%3E1+pozycji+w+trakcie+opracowywania+op%C3%B3%C5%BAnionych+o+wi%C4%99cej+ni%C5%BC+10+dni%3C%2Ffield%3E%3C%2FlistBody%3E%3ClistBody+action%3D%22%22%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_CD%22%3ETD-HILO%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_DESCR%22%3EB%C5%82%C4%85d+najwy%C5%BCszego%2Fnajni%C5%BCszego+odczytu+licznika%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_PRIORITY_INFO%22%3E20%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22TOTAL_CNT%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_CNT%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22BEING_WORKED_CNT%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE3%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL3%22%3E1+otwartych+zapis%C3%B3w+starszych+ni%C5%BC+10+dni%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE3%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL3%22%3E%3C%2Ffield%3E%3C%2FlistBody%3E%3ClistBody+action%3D%22%22%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_CD%22%3ECI_HELP%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_DESCR%22%3EHelp+Ticket%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_PRIORITY_INFO%22%3E20%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22TOTAL_CNT%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_CNT%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22BEING_WORKED_CNT%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE3%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL3%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE3%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL3%22%3E1+pozycji+w+trakcie+opracowywania+op%C3%B3%C5%BAnionych+o+wi%C4%99cej+ni%C5%BC+10+dni%3C%2Ffield%3E%3C%2FlistBody%3E%3ClistBody+action%3D%22%22%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_CD%22%3ECI_IHB%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_DESCR%22%3ENew+High+Bill+Complaint%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_PRIORITY_INFO%22%3E20%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22TOTAL_CNT%22+raw%3D%222%22%3E2%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_CNT%22+raw%3D%222%22%3E2%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22BEING_WORKED_CNT%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE3%22+raw%3D%222%22%3E2%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL3%22%3E2+otwartych+zapis%C3%B3w+starszych+ni%C5%BC+10+dni%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE3%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL3%22%3E%3C%2Ffield%3E%3C%2FlistBody%3E%3ClistBody+action%3D%22%22%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_CD%22%3ETD-CCCB%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_DESCR%22%3EPo%C5%82%C4%85czenie+zwrotne+dotycz%C4%85ce+kontaktu+z+klientem%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_PRIORITY_INFO%22%3E30%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22TOTAL_CNT%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_CNT%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22BEING_WORKED_CNT%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE3%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL3%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE3%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL3%22%3E1+pozycji+w+trakcie+opracowywania+op%C3%B3%C5%BAnionych+o+wi%C4%99cej+ni%C5%BC+10+dni%3C%2Ffield%3E%3C%2FlistBody%3E%3ClistBody+action%3D%22%22%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_CD%22%3ED%2FC+REG%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_DESCR%22%3ERejestr+zapotrzebowania%2Flicznika+zerowanego%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_PRIORITY_INFO%22%3E40%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22TOTAL_CNT%22+raw%3D%224%22%3E4%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_CNT%22+raw%3D%224%22%3E4%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22BEING_WORKED_CNT%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE3%22+raw%3D%224%22%3E4%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL3%22%3E4+otwartych+zapis%C3%B3w+starszych+ni%C5%BC+10+dni%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE3%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL3%22%3E%3C%2Ffield%3E%3C%2FlistBody%3E%3ClistBody+action%3D%22%22%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_CD%22%3EBILLING%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_DESCR%22%3EB%C5%82%C4%99dy+tworzenia+faktur+przy+u%C5%BCyciu+cyklu+rozliczeniowego%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_PRIORITY_INFO%22%3E80%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22TOTAL_CNT%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_CNT%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22BEING_WORKED_CNT%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE3%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL3%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE3%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL3%22%3E1+pozycji+w+trakcie+opracowywania+op%C3%B3%C5%BAnionych+o+wi%C4%99cej+ni%C5%BC+10+dni%3C%2Ffield%3E%3C%2FlistBody%3E%3ClistBody+action%3D%22%22%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_CD%22%3ECPCRRETR%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_DESCR%22%3EB%C5%82%C4%99dy+wycofania+kredytu+kupieckiego%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_PRIORITY_INFO%22%3E80%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22TOTAL_CNT%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_CNT%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22BEING_WORKED_CNT%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE3%22+raw%3D%221%22%3E1%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL3%22%3E1+otwartych+zapis%C3%B3w+starszych+ni%C5%BC+10+dni%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE3%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL3%22%3E%3C%2Ffield%3E%3C%2FlistBody%3E%3ClistBody+action%3D%22%22%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_CD%22%3ECI_PI%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_TYPE_DESCR%22%3EProduct+Inquiry%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22TD_PRIORITY_INFO%22%3E80%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22TOTAL_CNT%22+raw%3D%224%22%3E4%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_CNT%22+raw%3D%224%22%3E4%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22BEING_WORKED_CNT%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22OPEN_DAYS_AGE3%22+raw%3D%224%22%3E4%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22OPEN_DAYS_LABEL3%22%3E4+otwartych+zapis%C3%B3w+starszych+ni%C5%BC+10+dni%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE1%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE2%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22bigInteger%22+name%3D%22WORK_DAYS_AGE3%22+raw%3D%220%22%3E0%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL1%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL2%22%3E%3C%2Ffield%3E%3Cfield+type%3D%22string%22+name%3D%22WORK_DAYS_LABEL3%22%3E%3C%2Ffield%3E%3C%2FlistBody%3E%3C%2Flist%3E%3C%2FpageBody%3E</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">192.168.121.10</stringProp>
                <stringProp name="HTTPSampler.port">6500</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/portal</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl-PL</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/dashboard.jsp</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/zonemap?ZONE_CD=F1_USRSCR&amp;language=POL&amp;seqID=109&amp;PORTAL_CD=undefined" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%0D%0A%3Cprofile%3E%3CportalProfileUserId%3EDEMO%3C%2FportalProfileUserId%3E%3CcurrencyCode%3EUSD%3C%2FcurrencyCode%3E%3CtimeFormat%3EHH%3Amm%3Ass%3C%2FtimeFormat%3E%3CmoneyFormat%3E1.1-%3C%2FmoneyFormat%3E%3CshowAllPremises%3EY%3C%2FshowAllPremises%3E%3CnumberGroupSeparator%3E.%3C%2FnumberGroupSeparator%3E%3CdecimalSeparator%3E%2C%3C%2FdecimalSeparator%3E%3CisTemplateUser%3Efalse%3C%2FisTemplateUser%3E%3CdateDisplayFormat%3Ed-M-yyyy%3C%2FdateDisplayFormat%3E%3CnumberFormat%3E1.1-%3C%2FnumberFormat%3E%3CmoneyDecimalDigits%3E2%3C%2FmoneyDecimalDigits%3E%3CdashboardWidth%3E200%3C%2FdashboardWidth%3E%3CuserTimeZone%3EUSEASTERN%3C%2FuserTimeZone%3E%3ChomePage%3ECI0000001399%3C%2FhomePage%3E%3CuserTag%3E%3C%2FuserTag%3E%3C%2Fprofile%3E</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">wBj79HQ5qEY8DG30D0yjx%2F9Xk67jbJpxmJzGmu40160%3D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">192.168.121.10</stringProp>
                <stringProp name="HTTPSampler.port">6500</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/zonemap?ZONE_CD=F1_USRSCR&amp;language=POL&amp;seqID=109&amp;PORTAL_CD=undefined</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl-PL</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/portal</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/zonemap?ZONE_CD=CI_UPDFEATCG&amp;WFM_NAME=CI_GENSYSCFG&amp;EXT_SYS_TYP_FLG=F1GC&amp;language=POL&amp;seqID=112&amp;PORTAL_CD=undefined" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">%3C%3Fxml+version%3D%221.0%22+encoding%3D%22UTF-8%22%3F%3E%0D%0A%3Cprofile%3E%3CportalProfileUserId%3EDEMO%3C%2FportalProfileUserId%3E%3CcurrencyCode%3EUSD%3C%2FcurrencyCode%3E%3CtimeFormat%3EHH%3Amm%3Ass%3C%2FtimeFormat%3E%3CmoneyFormat%3E1.1-%3C%2FmoneyFormat%3E%3CshowAllPremises%3EY%3C%2FshowAllPremises%3E%3CnumberGroupSeparator%3E.%3C%2FnumberGroupSeparator%3E%3CdecimalSeparator%3E%2C%3C%2FdecimalSeparator%3E%3CisTemplateUser%3Efalse%3C%2FisTemplateUser%3E%3CdateDisplayFormat%3Ed-M-yyyy%3C%2FdateDisplayFormat%3E%3CnumberFormat%3E1.1-%3C%2FnumberFormat%3E%3CmoneyDecimalDigits%3E2%3C%2FmoneyDecimalDigits%3E%3CdashboardWidth%3E200%3C%2FdashboardWidth%3E%3CuserTimeZone%3EUSEASTERN%3C%2FuserTimeZone%3E%3ChomePage%3ECI0000001399%3C%2FhomePage%3E%3CuserTag%3E%3C%2FuserTag%3E%3C%2Fprofile%3E</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">wBj79HQ5qEY8DG30D0yjx%2F9Xk67jbJpxmJzGmu40160%3D</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">192.168.121.10</stringProp>
                <stringProp name="HTTPSampler.port">6500</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding"></stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/zonemap?ZONE_CD=CI_UPDFEATCG&amp;WFM_NAME=CI_GENSYSCFG&amp;EXT_SYS_TYP_FLG=F1GC&amp;language=POL&amp;seqID=112&amp;PORTAL_CD=undefined</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl-PL</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/portal</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageRead?service=FWLZDEXP&amp;ignoreWarnings=true" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="ZONE_CD" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">ZONE_CD</stringProp>
                      <stringProp name="Argument.value">CI_DOCTDB</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="USE_INPUT_SEQ_SW" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">USE_INPUT_SEQ_SW</stringProp>
                      <stringProp name="Argument.value">true</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="PORTAL_CD" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">PORTAL_CD</stringProp>
                      <stringProp name="Argument.value"></stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C1_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C1_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C2_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C2_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C3_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C3_SEQ</stringProp>
                      <stringProp name="Argument.value">2</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C4_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C4_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C5_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C5_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="C6_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C6_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="C7_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C7_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="C8_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C8_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="C9_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C9_SEQ</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="C10_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C10_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="C11_SEQ" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">C11_SEQ</stringProp>
                      <stringProp name="Argument.value">0</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="H1_VALUE" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">H1_VALUE</stringProp>
                      <stringProp name="Argument.value">5597967344</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">wBj79HQ5qEY8DG30D0yjx/9Xk67jbJpxmJzGmu40160=</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">192.168.121.10</stringProp>
                <stringProp name="HTTPSampler.port">6500</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageRead?service=FWLZDEXP&amp;ignoreWarnings=true</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageRead?service=CILZMSGP&amp;ignoreWarnings=true" enabled="false">
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="MESSAGE_CAT_NBR" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MESSAGE_CAT_NBR</stringProp>
                      <stringProp name="Argument.value">11002</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="MESSAGE_NBR" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MESSAGE_NBR</stringProp>
                      <stringProp name="Argument.value">90012</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="MESSAGE_PARM_COLL_CNT" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MESSAGE_PARM_COLL_CNT</stringProp>
                      <stringProp name="Argument.value">1</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="MESSAGE_PARM_1" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.name">MESSAGE_PARM_1</stringProp>
                      <stringProp name="Argument.value">3</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                      <stringProp name="Argument.value">wBj79HQ5qEY8DG30D0yjx/9Xk67jbJpxmJzGmu40160=</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                    <elementProp name="userProfileXML" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">true</boolProp>
                      <stringProp name="Argument.name">userProfileXML</stringProp>
                      <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                      <boolProp name="HTTPArgument.use_equals">true</boolProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.domain">192.168.121.10</stringProp>
                <stringProp name="HTTPSampler.port">6500</stringProp>
                <stringProp name="HTTPSampler.connect_timeout"></stringProp>
                <stringProp name="HTTPSampler.response_timeout"></stringProp>
                <stringProp name="HTTPSampler.protocol">http</stringProp>
                <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
                <stringProp name="HTTPSampler.path">/ouaf/pageRead?service=CILZMSGP&amp;ignoreWarnings=true</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.monitor">false</boolProp>
                <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="Content-Type" elementType="Header">
                      <stringProp name="Header.name">Content-Type</stringProp>
                      <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Language" elementType="Header">
                      <stringProp name="Header.name">Accept-Language</stringProp>
                      <stringProp name="Header.value">pl</stringProp>
                    </elementProp>
                    <elementProp name="Accept" elementType="Header">
                      <stringProp name="Header.name">Accept</stringProp>
                      <stringProp name="Header.value">*/*</stringProp>
                    </elementProp>
                    <elementProp name="User-Agent" elementType="Header">
                      <stringProp name="Header.name">User-Agent</stringProp>
                      <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                    </elementProp>
                    <elementProp name="DNT" elementType="Header">
                      <stringProp name="Header.name">DNT</stringProp>
                      <stringProp name="Header.value">1</stringProp>
                    </elementProp>
                    <elementProp name="Accept-Encoding" elementType="Header">
                      <stringProp name="Header.name">Accept-Encoding</stringProp>
                      <stringProp name="Header.value">gzip, deflate</stringProp>
                    </elementProp>
                    <elementProp name="Referer" elementType="Header">
                      <stringProp name="Header.name">Referer</stringProp>
                      <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                    </elementProp>
                    <elementProp name="Pragma" elementType="Header">
                      <stringProp name="Header.name">Pragma</stringProp>
                      <stringProp name="Header.value">no-cache</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Generowanie faktury" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Wybor Menu główne &gt; + Faktura] /ouaf/pageDefault?service=CILBBLLP" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;COU&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILBBLLP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Wskazanie konta do faktury] /ouaf/pageDefault?service=CILBBLLP" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;ACC&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILBBLLP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Klikniecie generuj] /ouaf/pageDefault?service=CILBBLLP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;BILL_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CUTOFF_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BSEG_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;BGS&lt;/field&gt;&lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILBBLLP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Kliknięcie Obliczanie[ ]/ouaf/pageAdd?service=CILBBLLP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_CYC_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WIN_START_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt;&lt;field name=&quot;BILL_STAT_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;DUE_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CRE_DTTM&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COMPLETE_DTTM&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LATE_PAY_CHARGE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;LATE_PAY_CHARGE_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ALLOW_REOPEN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;NEXT_CR_RVW_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CR_NOTE_FR_BILL_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ALT_BILL_ID&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;APAY_CRE_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;APAY_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;APAY_STOP_USER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;APAY_STOP_DTTM&quot;&gt;&lt;/field&gt;&lt;field name=&quot;APAY_STOP_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;APAY_STOP_CRE_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ARCHIVE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;DOC_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;DOC_TYPE_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OFFCYC_BGEN_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_SIGN&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACTION_GENERATE2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_FREEZE2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_COMPLETE2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_REOPEN2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_DELETE2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_DSP_BL2_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;SAVE_BILL_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ON_LINE_BILL_URL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILPRT_PLATFORM_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;REPORT_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_STATUS&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACCT_NAME&quot;&gt;${ACCT_NAME_INFO}&lt;/field&gt;&lt;field name=&quot;BEGINNING_BAL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_PAYMENTS&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_ADJUSTMENTS&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_CORRECTIONS&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_CURR_CHGS&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;ENDING_BAL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_COM_REBILL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOTAL_COM_CANCEL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_AFT_COMPLETION&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;EXP_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BSEG_STATUS_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CREDIT_NOTE_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CORR_NOTE_MSG_1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CORR_NOTE_MSG_2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;TOT_GEN_CHG&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;LATEST_BILL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;FRZ_CNC_POP_UP_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PROCESS_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;AUTO_PAY_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ARCHIVE_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CM_WRK_FLD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;TOTAL_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;C1_VAL_SCR_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RETRIEVE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;RETRIEVE_FILTER&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RETRIEVED_BILL_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SA_FILTER_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BS_STAT_FILTER_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CITY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CIS_DIVISION&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SA_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_VAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACTION_GENERATE_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ACTION_FREEZE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_COMPLETE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_FRZ_CMPL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_REOPEN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_DELETE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_DSP_BL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_CR_NOTE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_CAN_FRZN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_STP_APAY_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_WO_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_REV_WO_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_CANCEL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_CORR_NOTE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_UNDO_CORR_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HIDE_FREEZE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HIDE_COMPLETE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HIDE_FRZ_CMPL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HIDE_STP_APAY_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;HIDE_WRITE_OFF_SW&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HIDE_REV_WO_SW&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HIDE_CANCEL_SW&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PROT_GENERATE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROT_FREEZE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROT_COMPLETE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROT_FRZ_CMPL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROT_REOPEN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROT_DELETE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROT_CR_NOTE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROT_CAN_FRZN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROT_STP_APAY_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROT_CORR_NOTE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;PROT_UNDO_CORR_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_GEN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_FRZ_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_DEL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_RBLF_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_CAN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACTION_BS_CRNT_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ERROR_SHOWN_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CUTOFF_DT&quot;&gt;${dataProgowa}&lt;/field&gt;&lt;field name=&quot;ACCOUNTING_DT&quot;&gt;${dateShort}&lt;/field&gt;&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;BILLING_OPT_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;USE_OLD_INFO_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CAN_RSN_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CAN_FRZN_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CREDIT_NOTE_CNT&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;OVRD_BILL_DT_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;BILL_DT_OVRD_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OBC_BILL_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SHOW_ACCTNG_DT_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CMPLTN_POP_UP_MSG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SHOW_RESULT_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;BSEG_INFO_1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BSEG_INFO_2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BSEG_INFO_3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CURRENCY_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;EMAIL_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FAX_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COLL_TYPE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OPEN_ITEM_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;NBR_BAL_ITEM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;BAL_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;NBR_UBAL_ITEM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;UBAL_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;NBR_DISP_ITEM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;DISP_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;NBR_UMAT_ITEM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;UMAT_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;OIA_TOTAL_ADJ&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;OIA_TOTAL_CORR&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;OIA_TOTAL_CURR_CHG&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL1&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL2&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL3&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME4&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL4&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME5&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL5&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME6&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL6&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME7&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL7&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME8&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL8&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME9&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL9&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;FIELD_NAME10&quot;&gt;&lt;/field&gt;&lt;field name=&quot;FIELD_VAL10&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;ROWS_SELECTED_CNT&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;MSG_MORE_THAN_BS&quot;&gt;&lt;/field&gt;&lt;list name=&quot;BILL_RTG&quot;&gt;&lt;listHeader&gt;&lt;field name=&quot;BILL_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_SEQNO&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;lastInfo&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;A&quot;&gt;&lt;field name=&quot;BILL_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SEQNO&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NBR_BILL_COPIES&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;BATCH_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_FORMAT_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CUST_PO_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY&quot;&gt;USA&lt;/field&gt;&lt;field name=&quot;ADDRESS1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS4&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CITY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;BATCH_NBR&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;EXTRACT_DTTM&quot;&gt;&lt;/field&gt;&lt;field name=&quot;REPRINT_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;NO_BATCH_PRT_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;BILL_PRT_INTERCEPT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE_POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENTITY_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY2&quot;&gt;USA&lt;/field&gt;&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;VERSION2&quot;&gt;11&lt;/field&gt;&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;STATE_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt;&lt;field name=&quot;DESCR&quot;&gt;United States of America&lt;/field&gt;&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres 1&lt;/field&gt;&lt;field name=&quot;ADDR2_LBL&quot;&gt;Adres 2&lt;/field&gt;&lt;field name=&quot;ADDR3_LBL&quot;&gt;Adres 3&lt;/field&gt;&lt;field name=&quot;ADDR4_LBL&quot;&gt;Adres 4&lt;/field&gt;&lt;field name=&quot;CITY_LBL&quot;&gt;City&lt;/field&gt;&lt;field name=&quot;NUM1_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY_LBL&quot;&gt;County&lt;/field&gt;&lt;field name=&quot;STATE_LBL&quot;&gt;Stan&lt;/field&gt;&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIM_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE_LBL&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILBBLLP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1432352548">resultCode....E....serverMessage.....message....Dla konta istnieje już faktura lub fa</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BILL_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">BILL_ID</stringProp>
                <stringProp name="RegexExtractor.regex">BILL_ID&quot;:&quot;(.*)&quot;,&quot;BILL_CYC_CD</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak BILL_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="BILL_STATUS" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">BILL_STATUS</stringProp>
                <stringProp name="RegexExtractor.regex">BILL_STATUS&quot;:&quot;(.*)&quot;,&quot;ACCT_NAME</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">brak BILL_STATUS</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
              </RegexExtractor>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="1316290247">resultCode&quot;: &quot;E&quot;, &quot;serverMessage&quot;: {&quot;message&quot;:</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="-805636951">resultCode&quot;: &quot;W&quot;, &quot;serverWarnings&quot;</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/uiPage/billBillSegmentGrid" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="language" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">language</stringProp>
                    <stringProp name="Argument.value">POL</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/uiPage/billBillSegmentGrid</stringProp>
              <stringProp name="HTTPSampler.method">GET</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/uiPage/billBillMainPage?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/portal" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">type</stringProp>
                    <stringProp name="Argument.value">dashboard</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="TD_ENTRY_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">TD_ENTRY_ID</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="preferences" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">preferences</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;portal name=&quot;CI_DASHBOARD&quot;&gt;&lt;zone name=&quot;CI_ALERTS&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_CAMPAIGN&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;F1-USRCHKOUT&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_DBCONTEXT&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;F1-CURRTODO&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_CC_Q_ADD&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_SCRIPTS&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_FAVORITES&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;F1_USRSCR&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_FININFO&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_DOCTDB&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_UPDFEATCG&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;F1_SWTCHLANG&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;CI_TODO&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;zone name=&quot;F1-WORKLIST&quot; collapsed=&quot;false&quot; refreshPeriod=&quot;0&quot;/&gt;&lt;/portal&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="favorites" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">favorites</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;favorites&gt;&lt;navLink name=&quot;CI0000000722&quot;/&gt;&lt;navLink name=&quot;CI0000001399&quot;/&gt;&lt;navLink name=&quot;CI0000001340&quot;/&gt;&lt;/favorites&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="debug" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">debug</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="traceTime" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">traceTime</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="traceSQL" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">traceSQL</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="traceProgramStart" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">traceProgramStart</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="traceProgramEnd" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">traceProgramEnd</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="traceCobolBuffers" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">traceCobolBuffers</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="contextNavigationKey" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">contextNavigationKey</stringProp>
                    <stringProp name="Argument.value">billForAcct</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="configToolDebug" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">configToolDebug</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">B3hoenIJUziCEMfj1R9RdcizlePOTjkDeUgqusnZRtg=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ACCT_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ACCT_ID</stringProp>
                    <stringProp name="Argument.value">2176472339</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CONTEXT_NAME1" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CONTEXT_NAME1</stringProp>
                    <stringProp name="Argument.value">ACCT_ID</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CONTEXT_VALUE1" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CONTEXT_VALUE1</stringProp>
                    <stringProp name="Argument.value">2176472339</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PER_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PER_ID</stringProp>
                    <stringProp name="Argument.value">6797776989</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CONTEXT_NAME2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CONTEXT_NAME2</stringProp>
                    <stringProp name="Argument.value">PER_ID</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CONTEXT_VALUE2" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CONTEXT_VALUE2</stringProp>
                    <stringProp name="Argument.value">6797776989</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PREM_ID" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PREM_ID</stringProp>
                    <stringProp name="Argument.value">9810494652</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CONTEXT_NAME3" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CONTEXT_NAME3</stringProp>
                    <stringProp name="Argument.value">PREM_ID</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="CONTEXT_VALUE3" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">CONTEXT_VALUE3</stringProp>
                    <stringProp name="Argument.value">9810494652</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="cache_CI_TODO" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">cache_CI_TODO</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;pageBody action=&quot;&quot; metaInfoKey=&quot;CILQTDSP&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;USER_FULL_NAME&quot;&gt;Student, 01&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORKED_ONLY_SW&quot;&gt;&lt;/field&gt;&lt;list name=&quot;TODO_SUMM&quot; service=&quot;CILQTDSL&quot;&gt;&lt;listHeader action=&quot;&quot; hasMoreRows=&quot;false&quot; alertRowIndex=&quot;0&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;USER_ID&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;FANRMRCO&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Bł. zad. dot. koń. zad. w ter. przy uż. ost. odcz. licz.&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;10&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;26&quot;&gt;26&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;26&quot;&gt;26&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;26&quot;&gt;26&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;26 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;CI_HLPDD&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Help Ticket (Used in demo data propagation)&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;10 (1), 50 (1)&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;2&quot;&gt;2&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;1 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;1 pozycji w trakcie opracowywania opóźnionych o więcej niż 10 dni&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;TD-HILO&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Błąd najwyższego/najniższego odczytu licznika&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;20&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;1 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;CI_HELP&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Help Ticket&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;20&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;1 pozycji w trakcie opracowywania opóźnionych o więcej niż 10 dni&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;CI_IHB&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;New High Bill Complaint&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;20&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;2&quot;&gt;2&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;2&quot;&gt;2&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;2&quot;&gt;2&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;2 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;TD-CCCB&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Połączenie zwrotne dotyczące kontaktu z klientem&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;30&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;1 pozycji w trakcie opracowywania opóźnionych o więcej niż 10 dni&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;D/C REG&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Rejestr zapotrzebowania/licznika zerowanego&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;40&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;4&quot;&gt;4&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;4&quot;&gt;4&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;4&quot;&gt;4&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;4 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;SAACT&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Błędy aktywacji umowy oczekującej na rozpocz./zatrzym.&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;80&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;3&quot;&gt;3&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;3&quot;&gt;3&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;3&quot;&gt;3&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;3 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;BILLING&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Błędy tworzenia faktur przy użyciu cyklu rozliczeniowego&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;80&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;1 pozycji w trakcie opracowywania opóźnionych o więcej niż 10 dni&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;CPCRRETR&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Błędy wycofania kredytu kupieckiego&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;80&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;1&quot;&gt;1&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;1 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;listBody action=&quot;&quot;&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_CD&quot;&gt;CI_PI&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_TYPE_DESCR&quot;&gt;Product Inquiry&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;TD_PRIORITY_INFO&quot;&gt;80&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;TOTAL_CNT&quot; raw=&quot;4&quot;&gt;4&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_CNT&quot; raw=&quot;4&quot;&gt;4&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;BEING_WORKED_CNT&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;OPEN_DAYS_AGE3&quot; raw=&quot;4&quot;&gt;4&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;OPEN_DAYS_LABEL3&quot;&gt;4 otwartych zapisów starszych niż 10 dni&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE1&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE2&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;bigInteger&quot; name=&quot;WORK_DAYS_AGE3&quot; raw=&quot;0&quot;&gt;0&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL1&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL2&quot;&gt;&lt;/field&gt;&lt;field type=&quot;string&quot; name=&quot;WORK_DAYS_LABEL3&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.121.10</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/portal</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/dashboard.jsp</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/zonemap?ZONE_CD=F1_USRSCR&amp;language=POL&amp;seqID=109&amp;PORTAL_CD=null" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">B3hoenIJUziCEMfj1R9RdcizlePOTjkDeUgqusnZRtg=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.121.10</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/zonemap?ZONE_CD=F1_USRSCR&amp;language=POL&amp;seqID=109&amp;PORTAL_CD=null</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/portal</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/zonemap?ZONE_CD=CI_UPDFEATCG&amp;WFM_NAME=CI_GENSYSCFG&amp;EXT_SYS_TYP_FLG=F1GC&amp;language=POL&amp;seqID=112&amp;PORTAL_CD=null" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#xd;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">B3hoenIJUziCEMfj1R9RdcizlePOTjkDeUgqusnZRtg=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.121.10</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/zonemap?ZONE_CD=CI_UPDFEATCG&amp;WFM_NAME=CI_GENSYSCFG&amp;EXT_SYS_TYP_FLG=F1GC&amp;language=POL&amp;seqID=112&amp;PORTAL_CD=null</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl-PL</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/x-ms-application, image/jpeg, application/xaml+xml, image/gif, image/pjpeg, application/x-ms-xbap, application/vnd.ms-excel, application/vnd.ms-powerpoint, application/msword, */*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/portal</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageRead?service=FWLZDEXP&amp;ignoreWarnings=true" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="ZONE_CD" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">ZONE_CD</stringProp>
                    <stringProp name="Argument.value">CI_DOCTDB</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="USE_INPUT_SEQ_SW" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">USE_INPUT_SEQ_SW</stringProp>
                    <stringProp name="Argument.value">true</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="PORTAL_CD" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">PORTAL_CD</stringProp>
                    <stringProp name="Argument.value"></stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="C1_SEQ" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">C1_SEQ</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="C2_SEQ" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">C2_SEQ</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="C3_SEQ" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">C3_SEQ</stringProp>
                    <stringProp name="Argument.value">2</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="C4_SEQ" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">C4_SEQ</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="C5_SEQ" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">C5_SEQ</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="C6_SEQ" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">C6_SEQ</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="C7_SEQ" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">C7_SEQ</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="C8_SEQ" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">C8_SEQ</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="C9_SEQ" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">C9_SEQ</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="C10_SEQ" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">C10_SEQ</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="C11_SEQ" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">C11_SEQ</stringProp>
                    <stringProp name="Argument.value">0</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="H1_VALUE" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">H1_VALUE</stringProp>
                    <stringProp name="Argument.value">6797776989</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">B3hoenIJUziCEMfj1R9RdcizlePOTjkDeUgqusnZRtg=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.121.10</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageRead?service=FWLZDEXP&amp;ignoreWarnings=true</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/ouaf/pageRead?service=CILZMSGP&amp;ignoreWarnings=true" enabled="false">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="MESSAGE_CAT_NBR" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MESSAGE_CAT_NBR</stringProp>
                    <stringProp name="Argument.value">11002</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="MESSAGE_NBR" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MESSAGE_NBR</stringProp>
                    <stringProp name="Argument.value">90012</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="MESSAGE_PARM_COLL_CNT" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MESSAGE_PARM_COLL_CNT</stringProp>
                    <stringProp name="Argument.value">1</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="MESSAGE_PARM_1" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">MESSAGE_PARM_1</stringProp>
                    <stringProp name="Argument.value">3</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">B3hoenIJUziCEMfj1R9RdcizlePOTjkDeUgqusnZRtg=</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;DEMO&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;USD&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;1.1-&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;.&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;d-M-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;1.1-&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;USEASTERN&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain">192.168.121.10</stringProp>
              <stringProp name="HTTPSampler.port">6500</stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol">http</stringProp>
              <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageRead?service=CILZMSGP&amp;ignoreWarnings=true</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0E; InfoPath.3; .NET4.0C)</stringProp>
                  </elementProp>
                  <elementProp name="DNT" elementType="Header">
                    <stringProp name="Header.name">DNT</stringProp>
                    <stringProp name="Header.value">1</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.121.10:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (Jesli powiodlo się zakładanie faktury)" enabled="true">
              <stringProp name="IfController.condition">${__javaScript(&quot;${BILL_ID}&quot;!=&quot;brak BILL_ID&quot;)}</stringProp>
              <boolProp name="IfController.evaluateAll">false</boolProp>
            </IfController>
            <hashTree>
              <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (jeśli zrodloDanych to db)" enabled="true">
                <stringProp name="IfController.condition">${__javaScript(&quot;${zrodloDanych}&quot;==&quot;db&quot;)}</stringProp>
                <boolProp name="IfController.evaluateAll">false</boolProp>
              </IfController>
              <hashTree>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Dodaję fakturę do bazy" enabled="true">
                  <stringProp name="dataSource">energa_test</stringProp>
                  <stringProp name="queryType">Prepared Update Statement</stringProp>
                  <stringProp name="query">insert into ccb_bill values (${BILL_ID},&apos;${BILL_STATUS}&apos;);</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                </JDBCSampler>
                <hashTree/>
                <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Dodaję fakturę do tabeli ccb_acct" enabled="true">
                  <stringProp name="dataSource">energa_test</stringProp>
                  <stringProp name="queryType">Prepared Update Statement</stringProp>
                  <stringProp name="query">update ccb_acct set BILL_ID = ${BILL_ID} where ACCT_ID = ${ACCT_ID}</stringProp>
                  <stringProp name="queryArguments"></stringProp>
                  <stringProp name="queryArgumentsTypes"></stringProp>
                  <stringProp name="variableNames"></stringProp>
                  <stringProp name="resultVariable"></stringProp>
                  <stringProp name="queryTimeout"></stringProp>
                </JDBCSampler>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Umowa ( + Umowa)" enabled="true"/>
        <hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="C21" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie umowy C21]  /ouaf/pageAdd?service=CILCSVAP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;TIME_MODE_FLG&quot;/&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;PHY_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_DESC&quot;/&gt; 	&lt;field name=&quot;STM_SHIFT_REMARK&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACCT_NAME_INFO&quot;&gt;; CMFOSWIN ; Przedsiębiorstwo transportowe Jakkolwiek; Biznesowy; 0,00zł; 20 1240 6960 8960 1003 9113 7617&lt;/field&gt; 	&lt;field name=&quot;PREMISE_INFO&quot;&gt;${PREM_INFO}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 	&lt;field name=&quot;DEBT_CL_INFO&quot;&gt;Brak długu&lt;/field&gt; 	&lt;field name=&quot;SIC_INFO&quot;/&gt; 	&lt;field name=&quot;RECUR_CHARGE&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;CUR_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;RECUR_CHG_LBL&quot;&gt;Obciążenie cykliczne&lt;/field&gt; 	&lt;field name=&quot;SA_REL_INFO&quot;/&gt; 	&lt;field name=&quot;ENRL_INFO&quot;/&gt; 	&lt;field name=&quot;SA_REMARKS&quot;/&gt; 	&lt;field name=&quot;DECLINE_RSN&quot;/&gt; 	&lt;field name=&quot;NBB_RR_DESCR&quot;/&gt; 	&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 	&lt;field name=&quot;FT_EXIST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NEW_EFF_DT&quot;/&gt; 	&lt;field name=&quot;SS_OPT_EFFDT&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_DESC&quot;/&gt; 	&lt;field name=&quot;ACTIVATE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CLOSE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;APLY_ST_OPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACCEPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_DECLINE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_REACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REINSTATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;INITIATE_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;R_CONT_FLG&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;V_CONT_FLG&quot;&gt;V&lt;/field&gt; 	&lt;field name=&quot;T_CONT_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_RDR&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG_VAL&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TOU&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TAX&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EFF_DTTM&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EXPIRE_DTTM&quot;/&gt; 	&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 	&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ALLOW_SP_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;RT_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ONE_TIME_CH_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SUB_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 	&lt;field name=&quot;SA_ID&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_CD&quot;&gt;${SA_TYPE_CD}&lt;/field&gt; 	&lt;field name=&quot;SA_STATUS_FLG&quot;&gt;10&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;END_DT&quot;/&gt; 	&lt;field name=&quot;OLD_ACCT_ID&quot;/&gt; 	&lt;field name=&quot;SA_REL_ID&quot;/&gt; 	&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUST_READ_FLG&quot;&gt;${CUST_READ_FLG}&lt;/field&gt; 	&lt;field name=&quot;SIC_CD&quot;/&gt; 	&lt;field name=&quot;CHAR_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;/&gt; 	&lt;field name=&quot;HIGH_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;INT_CALC_DT&quot;/&gt; 	&lt;field name=&quot;CIAC_REVIEW_DT&quot;/&gt; 	&lt;field name=&quot;STRT_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 	&lt;field name=&quot;ENRL_ID&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_TM&quot;/&gt; 	&lt;field name=&quot;IB_BASE_TM_DAY_FLG&quot;/&gt; 	&lt;field name=&quot;SPECIAL_USAGE_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_SA_STAT_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_DCL_RSN_CD&quot;/&gt; 	&lt;field name=&quot;PROP_SA_ID&quot;/&gt; 	&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;NB_RULE_CD&quot;/&gt; 	&lt;field name=&quot;EXPIRE_DT&quot;/&gt; 	&lt;field name=&quot;RENEWAL_DT&quot;/&gt; 	&lt;field name=&quot;NB_APAY_FLG&quot;/&gt; 	&lt;field name=&quot;SA_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_DTTM_TM&quot;/&gt; 	&lt;field name=&quot;DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;TM_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUTOFF_DT&quot;/&gt; 	&lt;field name=&quot;FORCE_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FORCE_DRV_START_DT&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;TC_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;TC_TYPE_TXT&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_RNWL_FLG&quot;&gt;OPTN&lt;/field&gt; 	&lt;field name=&quot;DELETE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;RSA_START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;REAL_SA_ID&quot;/&gt; 	&lt;field name=&quot;REAL_SA_INFO&quot;/&gt; 	&lt;field name=&quot;PROP_SA_INFO&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;list name=&quot;SA_SP&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SA_SP_ID&quot;/&gt; 			&lt;field name=&quot;CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 			&lt;field name=&quot;SA_SP_ID&quot;/&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;START_DTTM&quot;&gt;${START_DTTM}&lt;/field&gt; 			&lt;field name=&quot;START_MR_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;STOP_DTTM&quot;/&gt; 			&lt;field name=&quot;USAGE_FLG&quot;&gt;+&lt;/field&gt; 			&lt;field name=&quot;STOP_MR_ID&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;USE_PCT&quot;&gt;100&lt;/field&gt; 			&lt;field name=&quot;SP_SUBTYPE_FLG&quot;&gt;M&lt;/field&gt; 			&lt;field name=&quot;C1_T_CALL_ORIG_FM_FLG&quot;/&gt;  			&lt;field name=&quot;SP_INFO&quot;&gt;${SP_INFO}&lt;/field&gt; 			&lt;field name=&quot;MTR_ITEM_INFO&quot;&gt;${MTR_INFO}&lt;/field&gt; 			&lt;field name=&quot;START_MR_INFO&quot;&gt;${MR_INFO}&lt;/field&gt; 			&lt;field name=&quot;STOP_MR_INFO&quot;/&gt; 			&lt;field name=&quot;MTR_ITEM_ID&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;SA_RS_HIST&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_EFFDT&quot;/&gt; 			&lt;field name=&quot;CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;EFFDT&quot;&gt;${EFFDT_RS_CD}&lt;/field&gt; 			&lt;field name=&quot;RS_CD&quot;&gt;${RS_CD}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;RS_VERSION_FLG&quot;/&gt; 			&lt;field name=&quot;DESCR&quot;&gt;Rozliczenie dla C21 TPA&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt;                                     &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCSVAP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983947757">resultCode....W..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCT_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACCT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;ACCT_ID&quot;:&quot;([0-9]*)&quot;,&quot;START_DT&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak ACCT_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">		</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SA_ID</stringProp>
                <stringProp name="RegexExtractor.regex">SA_ID&quot;:&quot;(.*)&quot;,&quot;SA_TYPE_CD</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">		</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCT_NAME_INFO" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACCT_NAME_INFO</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;ACCT_NAME_INFO&quot;:&quot;(.*)&quot;,&quot;PREMISE_INFO&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">		</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="C22A" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie umowy C22A  /ouaf/pageAdd?service=CILCSVAP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;TIME_MODE_FLG&quot;/&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;PHY_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_DESC&quot;/&gt; 	&lt;field name=&quot;STM_SHIFT_REMARK&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACCT_NAME_INFO&quot;&gt;; CMFOSWIN ; Przedsiębiorstwo transportowe Jakkolwiek; Biznesowy; 0,00zł; 20 1240 6960 8960 1003 9113 7617&lt;/field&gt; 	&lt;field name=&quot;PREMISE_INFO&quot;&gt;${PREM_INFO}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 	&lt;field name=&quot;DEBT_CL_INFO&quot;&gt;Brak długu&lt;/field&gt; 	&lt;field name=&quot;SIC_INFO&quot;/&gt; 	&lt;field name=&quot;RECUR_CHARGE&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;CUR_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;RECUR_CHG_LBL&quot;&gt;Obciążenie cykliczne&lt;/field&gt; 	&lt;field name=&quot;SA_REL_INFO&quot;/&gt; 	&lt;field name=&quot;ENRL_INFO&quot;/&gt; 	&lt;field name=&quot;SA_REMARKS&quot;/&gt; 	&lt;field name=&quot;DECLINE_RSN&quot;/&gt; 	&lt;field name=&quot;NBB_RR_DESCR&quot;/&gt; 	&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 	&lt;field name=&quot;FT_EXIST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NEW_EFF_DT&quot;/&gt; 	&lt;field name=&quot;SS_OPT_EFFDT&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_DESC&quot;/&gt; 	&lt;field name=&quot;ACTIVATE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CLOSE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;APLY_ST_OPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACCEPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_DECLINE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_REACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REINSTATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;INITIATE_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;R_CONT_FLG&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;V_CONT_FLG&quot;&gt;V&lt;/field&gt; 	&lt;field name=&quot;T_CONT_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_RDR&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG_VAL&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TOU&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TAX&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EFF_DTTM&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EXPIRE_DTTM&quot;/&gt; 	&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 	&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ALLOW_SP_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;RT_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ONE_TIME_CH_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SUB_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 	&lt;field name=&quot;SA_ID&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_CD&quot;&gt;${SA_TYPE_CD}&lt;/field&gt; 	&lt;field name=&quot;SA_STATUS_FLG&quot;&gt;10&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;END_DT&quot;/&gt; 	&lt;field name=&quot;OLD_ACCT_ID&quot;/&gt; 	&lt;field name=&quot;SA_REL_ID&quot;/&gt; 	&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUST_READ_FLG&quot;&gt;${CUST_READ_FLG}&lt;/field&gt; 	&lt;field name=&quot;SIC_CD&quot;/&gt; 	&lt;field name=&quot;CHAR_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;/&gt; 	&lt;field name=&quot;HIGH_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;INT_CALC_DT&quot;/&gt; 	&lt;field name=&quot;CIAC_REVIEW_DT&quot;/&gt; 	&lt;field name=&quot;STRT_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 	&lt;field name=&quot;ENRL_ID&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_TM&quot;/&gt; 	&lt;field name=&quot;IB_BASE_TM_DAY_FLG&quot;/&gt; 	&lt;field name=&quot;SPECIAL_USAGE_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_SA_STAT_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_DCL_RSN_CD&quot;/&gt; 	&lt;field name=&quot;PROP_SA_ID&quot;/&gt; 	&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;NB_RULE_CD&quot;/&gt; 	&lt;field name=&quot;EXPIRE_DT&quot;/&gt; 	&lt;field name=&quot;RENEWAL_DT&quot;/&gt; 	&lt;field name=&quot;NB_APAY_FLG&quot;/&gt; 	&lt;field name=&quot;SA_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_DTTM_TM&quot;/&gt; 	&lt;field name=&quot;DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;TM_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUTOFF_DT&quot;/&gt; 	&lt;field name=&quot;FORCE_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FORCE_DRV_START_DT&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;TC_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;TC_TYPE_TXT&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_RNWL_FLG&quot;&gt;OPTN&lt;/field&gt; 	&lt;field name=&quot;DELETE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;RSA_START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;REAL_SA_ID&quot;/&gt; 	&lt;field name=&quot;REAL_SA_INFO&quot;/&gt; 	&lt;field name=&quot;PROP_SA_INFO&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;list name=&quot;SA_SP&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SA_SP_ID&quot;/&gt; 			&lt;field name=&quot;CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 			&lt;field name=&quot;SA_SP_ID&quot;/&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;START_DTTM&quot;&gt;${START_DTTM}&lt;/field&gt; 			&lt;field name=&quot;START_MR_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;STOP_DTTM&quot;/&gt; 			&lt;field name=&quot;USAGE_FLG&quot;&gt;+&lt;/field&gt; 			&lt;field name=&quot;STOP_MR_ID&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;USE_PCT&quot;&gt;100&lt;/field&gt; 			&lt;field name=&quot;SP_SUBTYPE_FLG&quot;&gt;M&lt;/field&gt; 			&lt;field name=&quot;C1_T_CALL_ORIG_FM_FLG&quot;/&gt;  			&lt;field name=&quot;SP_INFO&quot;&gt;${SP_INFO}&lt;/field&gt; 			&lt;field name=&quot;MTR_ITEM_INFO&quot;&gt;${MTR_INFO}&lt;/field&gt; 			&lt;field name=&quot;START_MR_INFO&quot;&gt;${MR_INFO}&lt;/field&gt; 			&lt;field name=&quot;STOP_MR_INFO&quot;/&gt; 			&lt;field name=&quot;MTR_ITEM_ID&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;SA_RS_HIST&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_EFFDT&quot;/&gt; 			&lt;field name=&quot;CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;EFFDT&quot;&gt;${EFFDT_RS_CD}&lt;/field&gt; 			&lt;field name=&quot;RS_CD&quot;&gt;${RS_CD}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;RS_VERSION_FLG&quot;/&gt; 			&lt;field name=&quot;DESCR&quot;&gt;Rozliczenie dla C21 TPA&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt;                                     &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCSVAP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983947757">resultCode....W..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCT_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACCT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;ACCT_ID&quot;:&quot;([0-9]*)&quot;,&quot;START_DT&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak ACCT_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">		</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SA_ID</stringProp>
                <stringProp name="RegexExtractor.regex">SA_ID&quot;:&quot;(.*)&quot;,&quot;SA_TYPE_CD</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">		</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCT_NAME_INFO" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACCT_NAME_INFO</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;ACCT_NAME_INFO&quot;:&quot;(.*)&quot;,&quot;PREMISE_INFO&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">		</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="C22B" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie umowy C22B]  /ouaf/pageAdd?service=CILCSVAP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;TIME_MODE_FLG&quot;/&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;PHY_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_DESC&quot;/&gt; 	&lt;field name=&quot;STM_SHIFT_REMARK&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACCT_NAME_INFO&quot;&gt;; CMFOSWIN ; Przedsiębiorstwo transportowe Jakkolwiek; Biznesowy; 0,00zł; 20 1240 6960 8960 1003 9113 7617&lt;/field&gt; 	&lt;field name=&quot;PREMISE_INFO&quot;&gt;${PREM_INFO}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 	&lt;field name=&quot;DEBT_CL_INFO&quot;&gt;Brak długu&lt;/field&gt; 	&lt;field name=&quot;SIC_INFO&quot;/&gt; 	&lt;field name=&quot;RECUR_CHARGE&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;CUR_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;RECUR_CHG_LBL&quot;&gt;Obciążenie cykliczne&lt;/field&gt; 	&lt;field name=&quot;SA_REL_INFO&quot;/&gt; 	&lt;field name=&quot;ENRL_INFO&quot;/&gt; 	&lt;field name=&quot;SA_REMARKS&quot;/&gt; 	&lt;field name=&quot;DECLINE_RSN&quot;/&gt; 	&lt;field name=&quot;NBB_RR_DESCR&quot;/&gt; 	&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 	&lt;field name=&quot;FT_EXIST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NEW_EFF_DT&quot;/&gt; 	&lt;field name=&quot;SS_OPT_EFFDT&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_DESC&quot;/&gt; 	&lt;field name=&quot;ACTIVATE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CLOSE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;APLY_ST_OPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACCEPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_DECLINE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_REACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REINSTATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;INITIATE_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;R_CONT_FLG&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;V_CONT_FLG&quot;&gt;V&lt;/field&gt; 	&lt;field name=&quot;T_CONT_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_RDR&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG_VAL&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TOU&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TAX&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EFF_DTTM&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EXPIRE_DTTM&quot;/&gt; 	&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 	&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ALLOW_SP_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;RT_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ONE_TIME_CH_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SUB_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 	&lt;field name=&quot;SA_ID&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_CD&quot;&gt;${SA_TYPE_CD}&lt;/field&gt; 	&lt;field name=&quot;SA_STATUS_FLG&quot;&gt;10&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;END_DT&quot;/&gt; 	&lt;field name=&quot;OLD_ACCT_ID&quot;/&gt; 	&lt;field name=&quot;SA_REL_ID&quot;/&gt; 	&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUST_READ_FLG&quot;&gt;${CUST_READ_FLG}&lt;/field&gt; 	&lt;field name=&quot;SIC_CD&quot;/&gt; 	&lt;field name=&quot;CHAR_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;/&gt; 	&lt;field name=&quot;HIGH_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;INT_CALC_DT&quot;/&gt; 	&lt;field name=&quot;CIAC_REVIEW_DT&quot;/&gt; 	&lt;field name=&quot;STRT_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 	&lt;field name=&quot;ENRL_ID&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_TM&quot;/&gt; 	&lt;field name=&quot;IB_BASE_TM_DAY_FLG&quot;/&gt; 	&lt;field name=&quot;SPECIAL_USAGE_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_SA_STAT_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_DCL_RSN_CD&quot;/&gt; 	&lt;field name=&quot;PROP_SA_ID&quot;/&gt; 	&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;NB_RULE_CD&quot;/&gt; 	&lt;field name=&quot;EXPIRE_DT&quot;/&gt; 	&lt;field name=&quot;RENEWAL_DT&quot;/&gt; 	&lt;field name=&quot;NB_APAY_FLG&quot;/&gt; 	&lt;field name=&quot;SA_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_DTTM_TM&quot;/&gt; 	&lt;field name=&quot;DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;TM_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUTOFF_DT&quot;/&gt; 	&lt;field name=&quot;FORCE_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FORCE_DRV_START_DT&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;TC_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;TC_TYPE_TXT&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_RNWL_FLG&quot;&gt;OPTN&lt;/field&gt; 	&lt;field name=&quot;DELETE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;RSA_START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;REAL_SA_ID&quot;/&gt; 	&lt;field name=&quot;REAL_SA_INFO&quot;/&gt; 	&lt;field name=&quot;PROP_SA_INFO&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;list name=&quot;SA_SP&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SA_SP_ID&quot;/&gt; 			&lt;field name=&quot;CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 			&lt;field name=&quot;SA_SP_ID&quot;/&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;START_DTTM&quot;&gt;${START_DTTM}&lt;/field&gt; 			&lt;field name=&quot;START_MR_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;STOP_DTTM&quot;/&gt; 			&lt;field name=&quot;USAGE_FLG&quot;&gt;+&lt;/field&gt; 			&lt;field name=&quot;STOP_MR_ID&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;USE_PCT&quot;&gt;100&lt;/field&gt; 			&lt;field name=&quot;SP_SUBTYPE_FLG&quot;&gt;M&lt;/field&gt; 			&lt;field name=&quot;C1_T_CALL_ORIG_FM_FLG&quot;/&gt;  			&lt;field name=&quot;SP_INFO&quot;&gt;${SP_INFO}&lt;/field&gt; 			&lt;field name=&quot;MTR_ITEM_INFO&quot;&gt;${MTR_INFO}&lt;/field&gt; 			&lt;field name=&quot;START_MR_INFO&quot;&gt;${MR_INFO}&lt;/field&gt; 			&lt;field name=&quot;STOP_MR_INFO&quot;/&gt; 			&lt;field name=&quot;MTR_ITEM_ID&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;SA_RS_HIST&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_EFFDT&quot;/&gt; 			&lt;field name=&quot;CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;EFFDT&quot;&gt;${EFFDT_RS_CD}&lt;/field&gt; 			&lt;field name=&quot;RS_CD&quot;&gt;${RS_CD}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;RS_VERSION_FLG&quot;/&gt; 			&lt;field name=&quot;DESCR&quot;&gt;Rozliczenie dla C21 TPA&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt;                                     &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCSVAP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983947757">resultCode....W..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCT_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACCT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;ACCT_ID&quot;:&quot;([0-9]*)&quot;,&quot;START_DT&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak ACCT_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">		</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SA_ID</stringProp>
                <stringProp name="RegexExtractor.regex">SA_ID&quot;:&quot;(.*)&quot;,&quot;SA_TYPE_CD</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">		</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCT_NAME_INFO" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACCT_NAME_INFO</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;ACCT_NAME_INFO&quot;:&quot;(.*)&quot;,&quot;PREMISE_INFO&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">		</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="C23" enabled="true"/>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie umowy C23]  /ouaf/pageAdd?service=CILCSVAP" enabled="true">
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="pageBody" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">pageBody</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;TIME_MODE_FLG&quot;/&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;PHY_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_DESC&quot;/&gt; 	&lt;field name=&quot;STM_SHIFT_REMARK&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACCT_NAME_INFO&quot;&gt;; CMFOSWIN ; Przedsiębiorstwo transportowe Jakkolwiek; Biznesowy; 0,00zł; 20 1240 6960 8960 1003 9113 7617&lt;/field&gt; 	&lt;field name=&quot;PREMISE_INFO&quot;&gt;${PREM_INFO}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 	&lt;field name=&quot;DEBT_CL_INFO&quot;&gt;Brak długu&lt;/field&gt; 	&lt;field name=&quot;SIC_INFO&quot;/&gt; 	&lt;field name=&quot;RECUR_CHARGE&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;CUR_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;RECUR_CHG_LBL&quot;&gt;Obciążenie cykliczne&lt;/field&gt; 	&lt;field name=&quot;SA_REL_INFO&quot;/&gt; 	&lt;field name=&quot;ENRL_INFO&quot;/&gt; 	&lt;field name=&quot;SA_REMARKS&quot;/&gt; 	&lt;field name=&quot;DECLINE_RSN&quot;/&gt; 	&lt;field name=&quot;NBB_RR_DESCR&quot;/&gt; 	&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 	&lt;field name=&quot;FT_EXIST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NEW_EFF_DT&quot;/&gt; 	&lt;field name=&quot;SS_OPT_EFFDT&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_DESC&quot;/&gt; 	&lt;field name=&quot;ACTIVATE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CLOSE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;APLY_ST_OPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACCEPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_DECLINE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_REACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REINSTATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;INITIATE_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;R_CONT_FLG&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;V_CONT_FLG&quot;&gt;V&lt;/field&gt; 	&lt;field name=&quot;T_CONT_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_RDR&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG_VAL&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TOU&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TAX&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EFF_DTTM&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EXPIRE_DTTM&quot;/&gt; 	&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 	&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ALLOW_SP_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;RT_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ONE_TIME_CH_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SUB_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 	&lt;field name=&quot;SA_ID&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_CD&quot;&gt;${SA_TYPE_CD}&lt;/field&gt; 	&lt;field name=&quot;SA_STATUS_FLG&quot;&gt;10&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;END_DT&quot;/&gt; 	&lt;field name=&quot;OLD_ACCT_ID&quot;/&gt; 	&lt;field name=&quot;SA_REL_ID&quot;/&gt; 	&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUST_READ_FLG&quot;&gt;${CUST_READ_FLG}&lt;/field&gt; 	&lt;field name=&quot;SIC_CD&quot;/&gt; 	&lt;field name=&quot;CHAR_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;/&gt; 	&lt;field name=&quot;HIGH_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;INT_CALC_DT&quot;/&gt; 	&lt;field name=&quot;CIAC_REVIEW_DT&quot;/&gt; 	&lt;field name=&quot;STRT_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 	&lt;field name=&quot;ENRL_ID&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_TM&quot;/&gt; 	&lt;field name=&quot;IB_BASE_TM_DAY_FLG&quot;/&gt; 	&lt;field name=&quot;SPECIAL_USAGE_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_SA_STAT_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_DCL_RSN_CD&quot;/&gt; 	&lt;field name=&quot;PROP_SA_ID&quot;/&gt; 	&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;NB_RULE_CD&quot;/&gt; 	&lt;field name=&quot;EXPIRE_DT&quot;/&gt; 	&lt;field name=&quot;RENEWAL_DT&quot;/&gt; 	&lt;field name=&quot;NB_APAY_FLG&quot;/&gt; 	&lt;field name=&quot;SA_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_DTTM_TM&quot;/&gt; 	&lt;field name=&quot;DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;TM_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUTOFF_DT&quot;/&gt; 	&lt;field name=&quot;FORCE_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FORCE_DRV_START_DT&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;TC_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;TC_TYPE_TXT&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_RNWL_FLG&quot;&gt;OPTN&lt;/field&gt; 	&lt;field name=&quot;DELETE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;RSA_START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;REAL_SA_ID&quot;/&gt; 	&lt;field name=&quot;REAL_SA_INFO&quot;/&gt; 	&lt;field name=&quot;PROP_SA_INFO&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;list name=&quot;SA_SP&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SA_SP_ID&quot;/&gt; 			&lt;field name=&quot;CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 			&lt;field name=&quot;SA_SP_ID&quot;/&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;START_DTTM&quot;&gt;${START_DTTM}&lt;/field&gt; 			&lt;field name=&quot;START_MR_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;STOP_DTTM&quot;/&gt; 			&lt;field name=&quot;USAGE_FLG&quot;&gt;+&lt;/field&gt; 			&lt;field name=&quot;STOP_MR_ID&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;/&gt; 			&lt;field name=&quot;USE_PCT&quot;&gt;100&lt;/field&gt; 			&lt;field name=&quot;SP_SUBTYPE_FLG&quot;&gt;M&lt;/field&gt; 			&lt;field name=&quot;C1_T_CALL_ORIG_FM_FLG&quot;/&gt;  			&lt;field name=&quot;SP_INFO&quot;&gt;${SP_INFO}&lt;/field&gt; 			&lt;field name=&quot;MTR_ITEM_INFO&quot;&gt;${MTR_INFO}&lt;/field&gt; 			&lt;field name=&quot;START_MR_INFO&quot;&gt;${MR_INFO}&lt;/field&gt; 			&lt;field name=&quot;STOP_MR_INFO&quot;/&gt; 			&lt;field name=&quot;MTR_ITEM_ID&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;SA_RS_HIST&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_EFFDT&quot;/&gt; 			&lt;field name=&quot;CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;SA_ID&quot;/&gt; 			&lt;field name=&quot;EFFDT&quot;&gt;${EFFDT_RS_CD}&lt;/field&gt; 			&lt;field name=&quot;RS_CD&quot;&gt;${RS_CD}&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;C1_T_CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;RS_VERSION_FLG&quot;/&gt; 			&lt;field name=&quot;DESCR&quot;&gt;Rozliczenie dla C21 TPA&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt;                                     &lt;/pageBody&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                    <stringProp name="Argument.value">${SecurityToken}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userProfileXML" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">true</boolProp>
                    <stringProp name="Argument.name">userProfileXML</stringProp>
                    <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
              <stringProp name="HTTPSampler.domain"></stringProp>
              <stringProp name="HTTPSampler.port"></stringProp>
              <stringProp name="HTTPSampler.connect_timeout"></stringProp>
              <stringProp name="HTTPSampler.response_timeout"></stringProp>
              <stringProp name="HTTPSampler.protocol"></stringProp>
              <stringProp name="HTTPSampler.contentEncoding"></stringProp>
              <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCSVAP</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
              <boolProp name="HTTPSampler.monitor">false</boolProp>
              <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">pl</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">*/*</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">http://192.168.122.76:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                  </elementProp>
                  <elementProp name="Pragma" elementType="Header">
                    <stringProp name="Header.name">Pragma</stringProp>
                    <stringProp name="Header.value">no-cache</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983930459">resultCode....E..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
                <collectionProp name="Asserion.test_strings">
                  <stringProp name="983947757">resultCode....W..</stringProp>
                </collectionProp>
                <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
                <boolProp name="Assertion.assume_success">false</boolProp>
                <intProp name="Assertion.test_type">6</intProp>
              </ResponseAssertion>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCT_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACCT_ID</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;ACCT_ID&quot;:&quot;([0-9]*)&quot;,&quot;START_DT&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak ACCT_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">		</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_ID" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">SA_ID</stringProp>
                <stringProp name="RegexExtractor.regex">SA_ID&quot;:&quot;(.*)&quot;,&quot;SA_TYPE_CD</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">		</stringProp>
              </RegexExtractor>
              <hashTree/>
              <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCT_NAME_INFO" enabled="true">
                <stringProp name="RegexExtractor.useHeaders">false</stringProp>
                <stringProp name="RegexExtractor.refname">ACCT_NAME_INFO</stringProp>
                <stringProp name="RegexExtractor.regex">&quot;ACCT_NAME_INFO&quot;:&quot;(.*)&quot;,&quot;PREMISE_INFO&quot;</stringProp>
                <stringProp name="RegexExtractor.template">$1$</stringProp>
                <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
                <stringProp name="RegexExtractor.match_number">1</stringProp>
                <stringProp name="TestPlan.comments">		</stringProp>
              </RegexExtractor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Konto (klient + osoba)" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie osoby bez konta po migracji TST]  /ouaf/pageAdd?service=CILCPERP" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENTITY_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE_POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PERSON_ACCT_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PARENT_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID_LIST_CHANGE&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADD_ACCT_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CUST_CL_CD&quot;&gt;${CUST_CL_CD}&lt;/field&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GOTO_SS_SW&quot;&gt;&lt;/field&gt;&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;C1_VAL_SCR_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_OR_BUS_FLG&quot;&gt;${PER_OR_BUS_FLG}&lt;/field&gt;&lt;field name=&quot;LS_SL_FLG&quot;&gt;N&lt;/field&gt;&lt;field name=&quot;LS_SL_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;EMAILID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OVRD_MAIL_NAME1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt;&lt;field name=&quot;ADDRESS2&quot;&gt;${ADDRESS2}&lt;/field&gt;&lt;field name=&quot;ADDRESS3&quot;&gt;${ADDRESS3}&lt;/field&gt;&lt;field name=&quot;ADDRESS4&quot;&gt;${ADDRESS4}&lt;/field&gt;&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt;&lt;field name=&quot;NUM1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY&quot;&gt;${COUNTY}&lt;/field&gt;&lt;field name=&quot;POSTAL&quot;&gt;${POSTAL}&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;STATE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt;&lt;field name=&quot;OVRD_MAIL_NAME2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;OVRD_MAIL_NAME3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WEB_PASSWD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RECV_MKTG_INFO_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WEB_PASSWD_ANS&quot;&gt;&lt;/field&gt;&lt;field name=&quot;WEB_PWD_HINT_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_DATA_AREA&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt;&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt;&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;LANGUAGE_CD2&quot;&gt;POL&lt;/field&gt;&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt;&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt;&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt;&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt;&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt;&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt;&lt;field name=&quot;NUM1_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt;&lt;field name=&quot;STATE_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIM_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE_LBL&quot;&gt;&lt;/field&gt;&lt;list name=&quot;PER_IDENTIFIER&quot;&gt;&lt;listHeader&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_ID_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;lastInfo&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;A&quot;&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ID_TYPE_CD&quot;&gt;PESEL&lt;/field&gt;&lt;field name=&quot;PER_ID_NBR&quot;&gt;${LosowaLiczbaPerIdNbr}&lt;/field&gt;&lt;field name=&quot;PRIM_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;ENCR_PER_ID_NBR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HASH_PER_ID_NBR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;IDENTIFIER_FMT&quot;&gt;${LosowaLiczba}&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;list name=&quot;PER_NAME&quot;&gt;&lt;listHeader&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;lastInfo&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;A&quot;&gt;&lt;field name=&quot;ENTITY_NAME_UPR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SEQ_NUM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME&quot;&gt;${ENTITY_NAME}${LosowaLiczba}&lt;/field&gt;&lt;field name=&quot;NAME_TYPE_FLG&quot;&gt;${NAME_TYPE_FLG}&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;PRIM_NAME_SW&quot;&gt;false&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;list name=&quot;PER_PHONE&quot;&gt;&lt;listHeader&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;lastInfo&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;A&quot;&gt;&lt;field name=&quot;PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;SEQ_NUM&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt;&lt;field name=&quot;COUNTRY_CODE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PHONE&quot;&gt;${PHONE}${LosowaLiczbaNrTel}&lt;/field&gt;&lt;field name=&quot;EXTENSION&quot;&gt;&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PHONE_ALG_PARM_VAL&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCPERP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://ccbtst01.grupaenerga-ivmx.pl:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-24061823">resultCode&quot;: &quot;E&quot;</stringProp>
                <stringProp name="-24061265">resultCode&quot;: &quot;W&quot;</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1798022514">while.1....resultCode........searchList.....header....moreRows..false...list..\[\]..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PER_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">PER_ID</stringProp>
              <stringProp name="RegexExtractor.regex">PER_ID&quot;:&quot;(.*)&quot;,&quot;ENTITY_INFO</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak PER_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="PER_ID_NBR" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">PER_ID_NBR</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;PER_ID_NBR&quot;:&quot;(.*?)&quot;,&quot;PR</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak PER_ID_NBR</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zapisywanie konta] /ouaf/pageAdd?service=CILCACCP" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt;&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CANCEL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CAL_APPLY_BUD_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;RECOMMEND_BUD_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;C1_VAL_SCR_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;QUICK_ADD_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_CYC_CD&quot;&gt;1M1&lt;/field&gt;&lt;field name=&quot;SETUP_DT&quot;&gt;${SETUP_DT}&lt;/field&gt;&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt;&lt;field name=&quot;ACCT_MGMT_GRP_CD&quot;&gt;***&lt;/field&gt;&lt;field name=&quot;ALERT_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_AFTER_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PROTECT_CYC_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CIS_DIVISION&quot;&gt;POL&lt;/field&gt;&lt;field name=&quot;MAILING_PREM_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PROTECT_PREM_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;COLL_CL_CD&quot;&gt;TPA&lt;/field&gt;&lt;field name=&quot;CR_REVIEW_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;POSTPONE_CR_RVW_DT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;INT_CR_REVIEW_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CUST_CL_CD&quot;&gt;BIZNES&lt;/field&gt;&lt;field name=&quot;BILL_PRT_INTERCEPT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NO_DEP_RVW_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;BUD_PLAN_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;PROTECT_DIV_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACCESS_GRP_CD&quot;&gt;***&lt;/field&gt;&lt;field name=&quot;ACCT_DATA_AREA&quot;&gt;&lt;/field&gt;&lt;field name=&quot;C1_T_QUICK_ADD_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;USER_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACCT_CHECK_DIGIT&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PAY_ADV_FUNC_SUPP_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;DFLT_APAY_FLG&quot;&gt;C1DD&lt;/field&gt;&lt;field name=&quot;QUICK_ADD_SW2&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CUST_CL_CD2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACCT_MGMT_GRP_CD2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID&quot;&gt;${PER_ID}&lt;/field&gt;&lt;field name=&quot;PREM_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS4&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CITY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACCT_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;MGMT_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACCESS_DESCR&quot;&gt;Domyślna grupa dostępu&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME&quot;&gt;jmeterfabryka maku14036&lt;/field&gt;&lt;field name=&quot;ENTITY_INFO&quot;&gt;jmeterfabryka maku14036&lt;/field&gt;&lt;field name=&quot;PREM_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CUR_BAL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_BAL&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_CASH_ONLY_PTS&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;TOT_CR_RATING_PTS&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;NEW_BUD_DT&quot;&gt;2013-12-17&lt;/field&gt;&lt;field name=&quot;TOT_BUD_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_NEW_BUD&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_CD_ON_HAND_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_CD_REQ_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_NCD_AMT&quot;&gt;0.00&lt;/field&gt;&lt;field name=&quot;TOT_ON_HAND_AMT&quot;&gt;0.00&lt;/field&gt;&lt;list name=&quot;ACCT_PER&quot;&gt;&lt;listHeader&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_FIN_RESP_SW&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_MAIN_CUST_SW&quot;&gt;&lt;/field&gt;&lt;field name=&quot;LAST_PER_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;QUICK_ADD_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;lastInfo&quot;&gt;&lt;/field&gt;&lt;/listHeader&gt;&lt;listBody action=&quot;A&quot;&gt;&lt;field name=&quot;ACCT_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ACCT_REL_TYPE_CD&quot;&gt;STRONAUM&lt;/field&gt;&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt;&lt;field name=&quot;PER_ID&quot;&gt;${PER_ID}&lt;/field&gt;&lt;field name=&quot;MAIN_CUST_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;FIN_RESP_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;THRD_PTY_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;RECEIVE_COPY_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt;&lt;field name=&quot;BILL_FORMAT_FLG&quot;&gt;D&lt;/field&gt;&lt;field name=&quot;NBR_BILL_COPIES&quot;&gt;1&lt;/field&gt;&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;CUST_PO_ID&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NOTIFY_SW&quot;&gt;true&lt;/field&gt;&lt;field name=&quot;NAME_PFX_SFX&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PFX_SFX_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;QTE_RTE_TYPE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;RECV_QTE_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;WEB_ACCESS_FLG&quot;&gt;ALWD&lt;/field&gt;&lt;field name=&quot;C1_T_QUICK_ADD_SW&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ACCT_ID2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;PER_ID2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS3&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDRESS4&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CITY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM1&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;POSTAL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;STATE&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTRY&quot;&gt;&lt;/field&gt;&lt;field name=&quot;VERSION2&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;COUNTRY2&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;CITY_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;VERSION3&quot;&gt;0&lt;/field&gt;&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt;&lt;field name=&quot;LANGUAGE_CD&quot;&gt;&lt;/field&gt;&lt;field name=&quot;DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDR1_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDR2_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDR3_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ADDR4_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;CITY_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM1_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;NUM2_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;HOUSE_TYPE_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;COUNTY_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;POSTAL_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;IN_CITY_LIM_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;GEO_CODE_LBL&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt;&lt;field name=&quot;QTE_RTG_METH_FLG&quot;&gt;&lt;/field&gt;&lt;field name=&quot;ENTITY_NAME&quot;&gt;jmeterfabryka maku14036&lt;/field&gt;&lt;field name=&quot;ENTITY_INFO&quot;&gt;jmeterfabryka maku14036&lt;/field&gt;&lt;field name=&quot;BILL_RTE_TYPE_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;QTE_RTE_TYPE_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;BILL_ADDR_SRC_INFO&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE_DESCR&quot;&gt;&lt;/field&gt;&lt;field name=&quot;STATE_POSTAL&quot;&gt;&lt;/field&gt;&lt;/listBody&gt;&lt;/list&gt;&lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;Y&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000000574&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ignoreWarnings" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ignoreWarnings</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageAdd?service=CILCACCP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; BTRS98862; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET CLR 1.1.4322; .NET4.0C; .NET CLR 2.0.50727)</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://ccbtst01.grupaenerga-ivmx.pl:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="ACCT_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">ACCT_ID</stringProp>
              <stringProp name="RegexExtractor.regex">ACCT_ID&quot;:&quot;(.*)&quot;,&quot;BILL_CYC_CD</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak ACCT_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Rozpoczęcie/zatrzymanie C21" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Rozpoczęcie/zatrzymanie]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;/&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt;                                                                     	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Potwierdzenie rozpoczęcia umowy]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;&gt;NOLOAD&lt;/field&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt; 	&lt;list name=&quot;SA_TO_STRT&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 			&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 			&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 			&lt;field name=&quot;STRT_FROM_STOP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_COPY_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_SP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;LAST_CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;LAST_SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;LAST_SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SP_ID&quot;/&gt; 			&lt;field name=&quot;STARTSA_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;SATYSPTY_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 			&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 			&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;&gt;${SA_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;START_OPT_CD&quot;/&gt; 			&lt;field name=&quot;END_DT&quot;/&gt; 			&lt;field name=&quot;SS_INFO&quot;&gt;Ta umowa zostanie powiązana z 1 punktami poboru o typach punktu poboru: EE-TPA (1) Informacje o punkcie poboru: 4804748438 Energia  elektryczna - TPA,PLENED806435769808_EZYE02451253_21359198,Miesięczny koniec miesiąca,Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 			&lt;field name=&quot;SIC_CD&quot;/&gt; 			&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CUST_READ_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RECOMMEND_DEP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ACTION_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;HIDE_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;PROTECT_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;INTEREST_RT&quot;&gt;0.0000000&lt;/field&gt; 			&lt;field name=&quot;COPY_SA_ID&quot;/&gt; 			&lt;field name=&quot;COPY_SA_VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_1_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_2_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;STOP_COPY_SA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 			&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 			&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_LBL&quot;&gt;Kwota obciążenia cyklicznego&lt;/field&gt; 			&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 			&lt;field name=&quot;DEP_CL_CD&quot;/&gt; 			&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SIC_INFO&quot;/&gt; 			&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 			&lt;field name=&quot;START_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;GEO_VAL_INFO&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="FA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">FA_ID&quot;:&quot;(\d+)&quot;,&quot;PFA_DT_FILT_FLG&quot;:&quot;ALL</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak FA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_INFO" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_INFO</stringProp>
              <stringProp name="RegexExtractor.regex">false,&quot;SA_INFO&quot;:&quot;(.*)&quot;,&quot;PREM_INFO&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_INFO</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;SA_ID&quot;:&quot;(.*)&quot;,&quot;START_STOP_DT&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Dane_kont_VKI_PG/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
            </ResultCollector>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Działanie terenowe po rozpoczęciu umowy]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;SI&lt;/field&gt; 	&lt;list name=&quot;FA_STEP&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_STEP_SEQ_NBR&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CD&quot;&gt;ODCZYT&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CHANGE_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;W_FA_STATUS_BEFORE&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot; &quot;&gt; 			&lt;field name=&quot;STEP_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;STP_ENTITY_FLG&quot;&gt;MR&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILOFACP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zamknięcie działania terenowego]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;FA_INFO&quot;&gt;Energia, Rozpoczęcie/zatrzymanie żądania dotyczącego usługi, Odczyt licznika, Oczekująca, zaplanowano 15-01-2013 00:00:00&lt;/field&gt; 	&lt;field name=&quot;FA_CRE_INFO&quot;&gt;Stworzono dnia 03-04-2014 13:50:39 przez użytkownika KCICHY.&lt;/field&gt; 	&lt;field name=&quot;SP_INFO&quot;&gt;Energia  elektryczna - TPA,PLENED806435769808_EZYE02451253_64674165,Miesięczny koniec miesiąca,Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 9491545925&lt;/field&gt; 	&lt;field name=&quot;FO_INFO&quot;&gt;Brak informacji o zleceniach w terenie&lt;/field&gt; 	&lt;field name=&quot;DISP_GRP_DESCR&quot;/&gt; 	&lt;field name=&quot;FA_TYPE_DESCR&quot;&gt;Odczyt licznika&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 9491545925&lt;/field&gt; 	&lt;field name=&quot;APP_SCHED_INFO&quot;/&gt; 	&lt;field name=&quot;APPT_REQD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DEL_ALL_ROW_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DSBL_AFTER_SAVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_FA_UPDATE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_COMPLETE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_HOLD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_PENDING_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_REMARK_TEXT&quot;/&gt; 	&lt;field name=&quot;FA_UPL_STG_INFO&quot;/&gt; 	&lt;field name=&quot;WFM_ENABLED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CHG_ALG_CALLED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 	&lt;field name=&quot;FA_TYPE_CD&quot;&gt;ODCZYT&lt;/field&gt; 	&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 	&lt;field name=&quot;FA_PRIORITY_FLG&quot;&gt;50&lt;/field&gt; 	&lt;field name=&quot;FA_CREATED_BY_FLG&quot;&gt;SS&lt;/field&gt; 	&lt;field name=&quot;SCHED_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 	&lt;field name=&quot;FA_STATUS_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;ELIG_DISPATCH_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DISP_GRP_CD&quot;/&gt; 	&lt;field name=&quot;FO_ID&quot;/&gt; 	&lt;field name=&quot;CRE_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 	&lt;field name=&quot;TEST_SEL_ID&quot;/&gt; 	&lt;field name=&quot;USER_ID&quot;&gt;KCICHY&lt;/field&gt; 	&lt;field name=&quot;INSTRUCTIONS&quot;/&gt; 	&lt;field name=&quot;DESCRLONG&quot;/&gt; 	&lt;field name=&quot;FA_CAN_RSN_CD&quot;/&gt; 	&lt;field name=&quot;APP_SCHED_ID&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 	&lt;field name=&quot;FA_EXT_ID&quot;/&gt; 	&lt;field name=&quot;FA_INT_STATUS_FLG&quot;/&gt; 	&lt;field name=&quot;FA_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;FA_RESCHED_RSN_CD&quot;/&gt; 	&lt;field name=&quot;FA_TYPE_CHANGE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_T_CHG_ALG_CALLED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SS_EVT_TYPE_FLG&quot;/&gt; 	&lt;field name=&quot;NEW_FA_DT&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;C1_DISPLAY_RESCHED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_SCHED_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 	&lt;field name=&quot;IGNORE_CHECK_SECURITY_SW&quot;/&gt; 	&lt;list name=&quot;FA_STEP&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_STEP_SEQ_NBR&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CD&quot;&gt;ODCZYT&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CHANGE_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;W_FA_STATUS_BEFORE&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;C&quot;&gt; 			&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 			&lt;field name=&quot;STEP_SEQ_NBR&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;FA_STEP_TY_ACT_FLG&quot;&gt;MR&lt;/field&gt; 			&lt;field name=&quot;SPAWNED_FA_ID&quot;/&gt; 			&lt;field name=&quot;ACCT_ID&quot;/&gt; 			&lt;field name=&quot;CC_ID&quot;/&gt; 			&lt;field name=&quot;STP_ENTITY_FLG&quot;&gt;MR&lt;/field&gt; 			&lt;field name=&quot;SP_ITEM_HIST_ID&quot;/&gt; 			&lt;field name=&quot;SP_MTR_HIST_ID&quot;/&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 			&lt;field name=&quot;ITEM_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;MTR_CFG_MTR_ID&quot;/&gt; 			&lt;field name=&quot;MTR_ID&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;DV_TEST_ID&quot;/&gt; 			&lt;field name=&quot;C1_T_FA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;C1_T_FA_STATUS_BEFORE&quot;/&gt; 			&lt;field name=&quot;FA_STEP_TYPE_INFO&quot;&gt;Odczyt licznika&lt;/field&gt; 			&lt;field name=&quot;STEP_ID_LABEL&quot;&gt;ID odczytu licznika&lt;/field&gt; 			&lt;field name=&quot;STEP_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;FA_STEP_INFO&quot;&gt;Licznik Brak danych, odczyt 15-01-2013 12:20:08, 1 odczyt rejestru&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILOFACP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Aktywacja umowy - taryfa C21]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;TIME_MODE_FLG&quot;&gt;S&lt;/field&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;PHY_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_DESC&quot;/&gt; 	&lt;field name=&quot;STM_SHIFT_REMARK&quot;&gt;Uwaga: Informacje o dacie/godzinie powinny być podane w standardowym czasie lokalnym.&lt;/field&gt; 	&lt;field name=&quot;SA_INFO&quot;&gt;${SA_INFO}&lt;/field&gt; 	&lt;field name=&quot;ACCT_NAME_INFO&quot;&gt;${ACCT_NAME}&lt;/field&gt; 	&lt;field name=&quot;PREMISE_INFO&quot;&gt;${PREM_INFO}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 	&lt;field name=&quot;DEBT_CL_INFO&quot;&gt;Brak długu&lt;/field&gt; 	&lt;field name=&quot;SIC_INFO&quot;/&gt; 	&lt;field name=&quot;RECUR_CHARGE&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;CUR_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;RECUR_CHG_LBL&quot;&gt;Obciążenie cykliczne&lt;/field&gt; 	&lt;field name=&quot;SA_REL_INFO&quot;/&gt; 	&lt;field name=&quot;ENRL_INFO&quot;/&gt; 	&lt;field name=&quot;SA_REMARKS&quot;/&gt; 	&lt;field name=&quot;DECLINE_RSN&quot;/&gt; 	&lt;field name=&quot;NBB_RR_DESCR&quot;/&gt; 	&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 	&lt;field name=&quot;FT_EXIST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NEW_EFF_DT&quot;/&gt; 	&lt;field name=&quot;SS_OPT_EFFDT&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_DESC&quot;/&gt; 	&lt;field name=&quot;ACTIVATE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CLOSE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;APLY_ST_OPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACCEPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_DECLINE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_REACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REINSTATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;INITIATE_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;R_CONT_FLG&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;V_CONT_FLG&quot;&gt;V&lt;/field&gt; 	&lt;field name=&quot;T_CONT_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_RDR&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG_VAL&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TOU&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TAX&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EFF_DTTM&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EXPIRE_DTTM&quot;/&gt; 	&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 	&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ALLOW_SP_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;RT_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ONE_TIME_CH_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SUB_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CIS_DIVISION&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;SA_ID&quot;&gt;${SA_ID}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_CD&quot;&gt;SPEN&lt;/field&gt; 	&lt;field name=&quot;SA_STATUS_FLG&quot;&gt;10&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;END_DT&quot;/&gt; 	&lt;field name=&quot;OLD_ACCT_ID&quot;/&gt; 	&lt;field name=&quot;SA_REL_ID&quot;/&gt; 	&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUST_READ_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;SIC_CD&quot;/&gt; 	&lt;field name=&quot;CHAR_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;HIGH_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;INT_CALC_DT&quot;/&gt; 	&lt;field name=&quot;CIAC_REVIEW_DT&quot;/&gt; 	&lt;field name=&quot;STRT_RSN_FLG&quot;&gt;C&lt;/field&gt; 	&lt;field name=&quot;STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 	&lt;field name=&quot;ENRL_ID&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_TM&quot;/&gt; 	&lt;field name=&quot;IB_BASE_TM_DAY_FLG&quot;/&gt; 	&lt;field name=&quot;SPECIAL_USAGE_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_SA_STAT_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_DCL_RSN_CD&quot;/&gt; 	&lt;field name=&quot;PROP_SA_ID&quot;/&gt; 	&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;NB_RULE_CD&quot;/&gt; 	&lt;field name=&quot;EXPIRE_DT&quot;/&gt; 	&lt;field name=&quot;RENEWAL_DT&quot;/&gt; 	&lt;field name=&quot;NB_APAY_FLG&quot;/&gt; 	&lt;field name=&quot;SA_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_DTTM_TM&quot;/&gt; 	&lt;field name=&quot;DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;TM_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUTOFF_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;FORCE_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FORCE_DRV_START_DT&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;TC_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;TC_TYPE_TXT&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_RNWL_FLG&quot;&gt;OPTN&lt;/field&gt; 	&lt;field name=&quot;DELETE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;RSA_START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;REAL_SA_ID&quot;/&gt; 	&lt;field name=&quot;REAL_SA_INFO&quot;/&gt; 	&lt;field name=&quot;PROP_SA_INFO&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSVAP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.122.88:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Rozpoczęcie/zatrzymanie C23" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Rozpoczęcie/zatrzymanie]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;/&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt;                                                                     	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Dane_kont_VKI_PG/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
            </ResultCollector>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Potwierdzenie rozpoczęcia umowy]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;&gt;NOLOAD&lt;/field&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt; 	&lt;list name=&quot;SA_TO_STRT&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 			&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 			&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 			&lt;field name=&quot;STRT_FROM_STOP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_COPY_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_SP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;LAST_CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;LAST_SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;LAST_SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SP_ID&quot;/&gt; 			&lt;field name=&quot;STARTSA_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;SATYSPTY_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 			&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 			&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;&gt;${SA_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;START_OPT_CD&quot;/&gt; 			&lt;field name=&quot;END_DT&quot;/&gt; 			&lt;field name=&quot;SS_INFO&quot;&gt;Ta umowa zostanie powiązana z 1 punktami poboru o typach punktu poboru: EE-TPA (1) Informacje o punkcie poboru: 4804748438 Energia  elektryczna - TPA,PLENED806435769808_EZYE02451253_21359198,Miesięczny koniec miesiąca,Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 			&lt;field name=&quot;SIC_CD&quot;/&gt; 			&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CUST_READ_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RECOMMEND_DEP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ACTION_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;HIDE_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;PROTECT_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;INTEREST_RT&quot;&gt;0.0000000&lt;/field&gt; 			&lt;field name=&quot;COPY_SA_ID&quot;/&gt; 			&lt;field name=&quot;COPY_SA_VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_1_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_2_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;STOP_COPY_SA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 			&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 			&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_LBL&quot;&gt;Kwota obciążenia cyklicznego&lt;/field&gt; 			&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 			&lt;field name=&quot;DEP_CL_CD&quot;/&gt; 			&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SIC_INFO&quot;/&gt; 			&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 			&lt;field name=&quot;START_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;GEO_VAL_INFO&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="FA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">FA_ID&quot;:&quot;(\d+)&quot;,&quot;PFA_DT_FILT_FLG&quot;:&quot;ALL</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak FA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_INFO" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_INFO</stringProp>
              <stringProp name="RegexExtractor.regex">false,&quot;SA_INFO&quot;:&quot;(.*)&quot;,&quot;PREM_INFO&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_INFO</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;SA_ID&quot;:&quot;(.*)&quot;,&quot;START_STOP_DT&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Dane_kont_VKI_PG/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
            </ResultCollector>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Działanie terenowe po rozpoczęciu umowy]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;&gt;NOLOAD&lt;/field&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt; 	&lt;list name=&quot;SA_TO_STRT&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 			&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 			&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 			&lt;field name=&quot;STRT_FROM_STOP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_COPY_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_SP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;LAST_CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;LAST_SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;LAST_SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SP_ID&quot;/&gt; 			&lt;field name=&quot;STARTSA_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;SATYSPTY_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 			&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 			&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;&gt;${SA_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;START_OPT_CD&quot;/&gt; 			&lt;field name=&quot;END_DT&quot;/&gt; 			&lt;field name=&quot;SS_INFO&quot;&gt;Ta umowa zostanie powiązana z 1 punktami poboru o typach punktu poboru: EE-TPA (1) Informacje o punkcie poboru: 4804748438 Energia  elektryczna - TPA,PLENED806435769808_EZYE02451253_21359198,Miesięczny koniec miesiąca,Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 			&lt;field name=&quot;SIC_CD&quot;/&gt; 			&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CUST_READ_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RECOMMEND_DEP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ACTION_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;HIDE_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;PROTECT_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;INTEREST_RT&quot;&gt;0.0000000&lt;/field&gt; 			&lt;field name=&quot;COPY_SA_ID&quot;/&gt; 			&lt;field name=&quot;COPY_SA_VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_1_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_2_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;STOP_COPY_SA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 			&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 			&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_LBL&quot;&gt;Kwota obciążenia cyklicznego&lt;/field&gt; 			&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 			&lt;field name=&quot;DEP_CL_CD&quot;/&gt; 			&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SIC_INFO&quot;/&gt; 			&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 			&lt;field name=&quot;START_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;GEO_VAL_INFO&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILOFACP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zamknięcie działania terenowego]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;FA_INFO&quot;&gt;Energia, Rozpoczęcie/zatrzymanie żądania dotyczącego usługi, Odczyt licznika, Oczekująca, zaplanowano 15-01-2013 00:00:00&lt;/field&gt; 	&lt;field name=&quot;FA_CRE_INFO&quot;&gt;Stworzono dnia 03-04-2014 13:50:39 przez użytkownika KCICHY.&lt;/field&gt; 	&lt;field name=&quot;SP_INFO&quot;&gt;Energia  elektryczna - TPA,PLENED806435769808_EZYE02451253_64674165,Miesięczny koniec miesiąca,Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 9491545925&lt;/field&gt; 	&lt;field name=&quot;FO_INFO&quot;&gt;Brak informacji o zleceniach w terenie&lt;/field&gt; 	&lt;field name=&quot;DISP_GRP_DESCR&quot;/&gt; 	&lt;field name=&quot;FA_TYPE_DESCR&quot;&gt;Odczyt licznika&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 9491545925&lt;/field&gt; 	&lt;field name=&quot;APP_SCHED_INFO&quot;/&gt; 	&lt;field name=&quot;APPT_REQD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DEL_ALL_ROW_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DSBL_AFTER_SAVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_FA_UPDATE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_COMPLETE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_HOLD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_PENDING_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_REMARK_TEXT&quot;/&gt; 	&lt;field name=&quot;FA_UPL_STG_INFO&quot;/&gt; 	&lt;field name=&quot;WFM_ENABLED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CHG_ALG_CALLED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 	&lt;field name=&quot;FA_TYPE_CD&quot;&gt;ODCZYT&lt;/field&gt; 	&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 	&lt;field name=&quot;FA_PRIORITY_FLG&quot;&gt;50&lt;/field&gt; 	&lt;field name=&quot;FA_CREATED_BY_FLG&quot;&gt;SS&lt;/field&gt; 	&lt;field name=&quot;SCHED_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 	&lt;field name=&quot;FA_STATUS_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;ELIG_DISPATCH_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DISP_GRP_CD&quot;/&gt; 	&lt;field name=&quot;FO_ID&quot;/&gt; 	&lt;field name=&quot;CRE_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 	&lt;field name=&quot;TEST_SEL_ID&quot;/&gt; 	&lt;field name=&quot;USER_ID&quot;&gt;KCICHY&lt;/field&gt; 	&lt;field name=&quot;INSTRUCTIONS&quot;/&gt; 	&lt;field name=&quot;DESCRLONG&quot;/&gt; 	&lt;field name=&quot;FA_CAN_RSN_CD&quot;/&gt; 	&lt;field name=&quot;APP_SCHED_ID&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 	&lt;field name=&quot;FA_EXT_ID&quot;/&gt; 	&lt;field name=&quot;FA_INT_STATUS_FLG&quot;/&gt; 	&lt;field name=&quot;FA_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;FA_RESCHED_RSN_CD&quot;/&gt; 	&lt;field name=&quot;FA_TYPE_CHANGE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_T_CHG_ALG_CALLED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SS_EVT_TYPE_FLG&quot;/&gt; 	&lt;field name=&quot;NEW_FA_DT&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;C1_DISPLAY_RESCHED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_SCHED_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 	&lt;field name=&quot;IGNORE_CHECK_SECURITY_SW&quot;/&gt; 	&lt;list name=&quot;FA_STEP&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_STEP_SEQ_NBR&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CD&quot;&gt;ODCZYT&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CHANGE_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;W_FA_STATUS_BEFORE&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;C&quot;&gt; 			&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 			&lt;field name=&quot;STEP_SEQ_NBR&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;FA_STEP_TY_ACT_FLG&quot;&gt;MR&lt;/field&gt; 			&lt;field name=&quot;SPAWNED_FA_ID&quot;/&gt; 			&lt;field name=&quot;ACCT_ID&quot;/&gt; 			&lt;field name=&quot;CC_ID&quot;/&gt; 			&lt;field name=&quot;STP_ENTITY_FLG&quot;&gt;MR&lt;/field&gt; 			&lt;field name=&quot;SP_ITEM_HIST_ID&quot;/&gt; 			&lt;field name=&quot;SP_MTR_HIST_ID&quot;/&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 			&lt;field name=&quot;ITEM_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;MTR_CFG_MTR_ID&quot;/&gt; 			&lt;field name=&quot;MTR_ID&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;DV_TEST_ID&quot;/&gt; 			&lt;field name=&quot;C1_T_FA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;C1_T_FA_STATUS_BEFORE&quot;/&gt; 			&lt;field name=&quot;FA_STEP_TYPE_INFO&quot;&gt;Odczyt licznika&lt;/field&gt; 			&lt;field name=&quot;STEP_ID_LABEL&quot;&gt;ID odczytu licznika&lt;/field&gt; 			&lt;field name=&quot;STEP_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;FA_STEP_INFO&quot;&gt;Licznik Brak danych, odczyt 15-01-2013 12:20:08, 1 odczyt rejestru&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILOFACP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Aktywacja umowy - taryfa C23]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;TIME_MODE_FLG&quot;&gt;S&lt;/field&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;PHY_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_DESC&quot;/&gt; 	&lt;field name=&quot;STM_SHIFT_REMARK&quot;&gt;Uwaga: Informacje o dacie/godzinie powinny być podane w standardowym czasie lokalnym.&lt;/field&gt; 	&lt;field name=&quot;SA_INFO&quot;&gt;${SA_INFO}&lt;/field&gt; 	&lt;field name=&quot;ACCT_NAME_INFO&quot;&gt;${ACCT_NAME}&lt;/field&gt; 	&lt;field name=&quot;PREMISE_INFO&quot;&gt;${PREM_INFO}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 	&lt;field name=&quot;DEBT_CL_INFO&quot;&gt;Brak długu&lt;/field&gt; 	&lt;field name=&quot;SIC_INFO&quot;/&gt; 	&lt;field name=&quot;RECUR_CHARGE&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;CUR_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;RECUR_CHG_LBL&quot;&gt;Obciążenie cykliczne&lt;/field&gt; 	&lt;field name=&quot;SA_REL_INFO&quot;/&gt; 	&lt;field name=&quot;ENRL_INFO&quot;/&gt; 	&lt;field name=&quot;SA_REMARKS&quot;/&gt; 	&lt;field name=&quot;DECLINE_RSN&quot;/&gt; 	&lt;field name=&quot;NBB_RR_DESCR&quot;/&gt; 	&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 	&lt;field name=&quot;FT_EXIST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NEW_EFF_DT&quot;/&gt; 	&lt;field name=&quot;SS_OPT_EFFDT&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_DESC&quot;/&gt; 	&lt;field name=&quot;ACTIVATE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CLOSE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;APLY_ST_OPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACCEPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_DECLINE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_REACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REINSTATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;INITIATE_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;R_CONT_FLG&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;V_CONT_FLG&quot;&gt;V&lt;/field&gt; 	&lt;field name=&quot;T_CONT_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_RDR&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG_VAL&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TOU&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TAX&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EFF_DTTM&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EXPIRE_DTTM&quot;/&gt; 	&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 	&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ALLOW_SP_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;RT_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ONE_TIME_CH_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SUB_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CIS_DIVISION&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;SA_ID&quot;&gt;${SA_ID}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_CD&quot;&gt;SPEN&lt;/field&gt; 	&lt;field name=&quot;SA_STATUS_FLG&quot;&gt;10&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;END_DT&quot;/&gt; 	&lt;field name=&quot;OLD_ACCT_ID&quot;/&gt; 	&lt;field name=&quot;SA_REL_ID&quot;/&gt; 	&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUST_READ_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;SIC_CD&quot;/&gt; 	&lt;field name=&quot;CHAR_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;HIGH_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;INT_CALC_DT&quot;/&gt; 	&lt;field name=&quot;CIAC_REVIEW_DT&quot;/&gt; 	&lt;field name=&quot;STRT_RSN_FLG&quot;&gt;C&lt;/field&gt; 	&lt;field name=&quot;STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 	&lt;field name=&quot;ENRL_ID&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_TM&quot;/&gt; 	&lt;field name=&quot;IB_BASE_TM_DAY_FLG&quot;/&gt; 	&lt;field name=&quot;SPECIAL_USAGE_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_SA_STAT_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_DCL_RSN_CD&quot;/&gt; 	&lt;field name=&quot;PROP_SA_ID&quot;/&gt; 	&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;NB_RULE_CD&quot;/&gt; 	&lt;field name=&quot;EXPIRE_DT&quot;/&gt; 	&lt;field name=&quot;RENEWAL_DT&quot;/&gt; 	&lt;field name=&quot;NB_APAY_FLG&quot;/&gt; 	&lt;field name=&quot;SA_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_DTTM_TM&quot;/&gt; 	&lt;field name=&quot;DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;TM_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUTOFF_DT&quot;&gt;2014-04-04&lt;/field&gt; 	&lt;field name=&quot;FORCE_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FORCE_DRV_START_DT&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;TC_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;TC_TYPE_TXT&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_RNWL_FLG&quot;&gt;OPTN&lt;/field&gt; 	&lt;field name=&quot;DELETE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;RSA_START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;REAL_SA_ID&quot;/&gt; 	&lt;field name=&quot;REAL_SA_INFO&quot;/&gt; 	&lt;field name=&quot;PROP_SA_INFO&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;list name=&quot;SA_RS_HIST&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;SA_ID&quot;&gt;${SA_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_EFFDT&quot;&gt;${START_DT}&lt;/field&gt; 			&lt;field name=&quot;CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;C&quot;&gt; 			&lt;field name=&quot;SA_ID&quot;&gt;${SA_ID}&lt;/field&gt; 			&lt;field name=&quot;EFFDT&quot;&gt;${START_DT}&lt;/field&gt; 			&lt;field name=&quot;RS_CD&quot;&gt;C23&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;C1_T_CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;RS_VERSION_FLG&quot;&gt;C1V2&lt;/field&gt; 			&lt;field name=&quot;DESCR&quot;&gt;Rozliczenie dla C23 TPA&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSVAP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.122.88:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Rozpoczęcie/zatrzymanie C22A" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Rozpoczęcie/zatrzymanie]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;/&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt;                                                                     	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Dane_kont_VKI_PG/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
            </ResultCollector>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Potwierdzenie rozpoczęcia umowy]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;&gt;NOLOAD&lt;/field&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt; 	&lt;list name=&quot;SA_TO_STRT&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 			&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 			&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 			&lt;field name=&quot;STRT_FROM_STOP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_COPY_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_SP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;LAST_CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;LAST_SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;LAST_SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SP_ID&quot;/&gt; 			&lt;field name=&quot;STARTSA_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;SATYSPTY_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 			&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 			&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;&gt;${SA_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;START_OPT_CD&quot;/&gt; 			&lt;field name=&quot;END_DT&quot;/&gt; 			&lt;field name=&quot;SS_INFO&quot;&gt;Ta umowa zostanie powiązana z 1 punktami poboru o typach punktu poboru: EE-TPA (1) Informacje o punkcie poboru: 4804748438 Energia  elektryczna - TPA,PLENED806435769808_EZYE02451253_21359198,Miesięczny koniec miesiąca,Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 			&lt;field name=&quot;SIC_CD&quot;/&gt; 			&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CUST_READ_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RECOMMEND_DEP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ACTION_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;HIDE_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;PROTECT_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;INTEREST_RT&quot;&gt;0.0000000&lt;/field&gt; 			&lt;field name=&quot;COPY_SA_ID&quot;/&gt; 			&lt;field name=&quot;COPY_SA_VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_1_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_2_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;STOP_COPY_SA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 			&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 			&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_LBL&quot;&gt;Kwota obciążenia cyklicznego&lt;/field&gt; 			&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 			&lt;field name=&quot;DEP_CL_CD&quot;/&gt; 			&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SIC_INFO&quot;/&gt; 			&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 			&lt;field name=&quot;START_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;GEO_VAL_INFO&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="FA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">FA_ID&quot;:&quot;(\d+)&quot;,&quot;PFA_DT_FILT_FLG&quot;:&quot;ALL</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak FA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_INFO" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_INFO</stringProp>
              <stringProp name="RegexExtractor.regex">false,&quot;SA_INFO&quot;:&quot;(.*)&quot;,&quot;PREM_INFO&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_INFO</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;SA_ID&quot;:&quot;(.*)&quot;,&quot;START_STOP_DT&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Dane_kont_VKI_PG/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
            </ResultCollector>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Działanie terenowe]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;SI&lt;/field&gt; 	&lt;list name=&quot;FA_STEP&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_STEP_SEQ_NBR&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CD&quot;&gt;ODCZYT&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CHANGE_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;W_FA_STATUS_BEFORE&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot; &quot;&gt; 			&lt;field name=&quot;STEP_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;STP_ENTITY_FLG&quot;&gt;MR&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILOFACP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zamknięcie działania terenowego]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;FA_INFO&quot;&gt;Energia, Rozpoczęcie/zatrzymanie żądania dotyczącego usługi, Odczyt licznika, Oczekująca, zaplanowano 15-01-2013 00:00:00&lt;/field&gt; 	&lt;field name=&quot;FA_CRE_INFO&quot;&gt;Stworzono dnia 03-04-2014 13:50:39 przez użytkownika KCICHY.&lt;/field&gt; 	&lt;field name=&quot;SP_INFO&quot;&gt;Energia  elektryczna - TPA,PLENED806435769808_EZYE02451253_64674165,Miesięczny koniec miesiąca,Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 9491545925&lt;/field&gt; 	&lt;field name=&quot;FO_INFO&quot;&gt;Brak informacji o zleceniach w terenie&lt;/field&gt; 	&lt;field name=&quot;DISP_GRP_DESCR&quot;/&gt; 	&lt;field name=&quot;FA_TYPE_DESCR&quot;&gt;Odczyt licznika&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 9491545925&lt;/field&gt; 	&lt;field name=&quot;APP_SCHED_INFO&quot;/&gt; 	&lt;field name=&quot;APPT_REQD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DEL_ALL_ROW_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DSBL_AFTER_SAVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_FA_UPDATE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_COMPLETE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_HOLD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_PENDING_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_REMARK_TEXT&quot;/&gt; 	&lt;field name=&quot;FA_UPL_STG_INFO&quot;/&gt; 	&lt;field name=&quot;WFM_ENABLED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CHG_ALG_CALLED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 	&lt;field name=&quot;FA_TYPE_CD&quot;&gt;ODCZYT&lt;/field&gt; 	&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 	&lt;field name=&quot;FA_PRIORITY_FLG&quot;&gt;50&lt;/field&gt; 	&lt;field name=&quot;FA_CREATED_BY_FLG&quot;&gt;SS&lt;/field&gt; 	&lt;field name=&quot;SCHED_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 	&lt;field name=&quot;FA_STATUS_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;ELIG_DISPATCH_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DISP_GRP_CD&quot;/&gt; 	&lt;field name=&quot;FO_ID&quot;/&gt; 	&lt;field name=&quot;CRE_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 	&lt;field name=&quot;TEST_SEL_ID&quot;/&gt; 	&lt;field name=&quot;USER_ID&quot;&gt;KCICHY&lt;/field&gt; 	&lt;field name=&quot;INSTRUCTIONS&quot;/&gt; 	&lt;field name=&quot;DESCRLONG&quot;/&gt; 	&lt;field name=&quot;FA_CAN_RSN_CD&quot;/&gt; 	&lt;field name=&quot;APP_SCHED_ID&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 	&lt;field name=&quot;FA_EXT_ID&quot;/&gt; 	&lt;field name=&quot;FA_INT_STATUS_FLG&quot;/&gt; 	&lt;field name=&quot;FA_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;FA_RESCHED_RSN_CD&quot;/&gt; 	&lt;field name=&quot;FA_TYPE_CHANGE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_T_CHG_ALG_CALLED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SS_EVT_TYPE_FLG&quot;/&gt; 	&lt;field name=&quot;NEW_FA_DT&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;C1_DISPLAY_RESCHED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_SCHED_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 	&lt;field name=&quot;IGNORE_CHECK_SECURITY_SW&quot;/&gt; 	&lt;list name=&quot;FA_STEP&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_STEP_SEQ_NBR&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CD&quot;&gt;ODCZYT&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CHANGE_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;W_FA_STATUS_BEFORE&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;C&quot;&gt; 			&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 			&lt;field name=&quot;STEP_SEQ_NBR&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;FA_STEP_TY_ACT_FLG&quot;&gt;MR&lt;/field&gt; 			&lt;field name=&quot;SPAWNED_FA_ID&quot;/&gt; 			&lt;field name=&quot;ACCT_ID&quot;/&gt; 			&lt;field name=&quot;CC_ID&quot;/&gt; 			&lt;field name=&quot;STP_ENTITY_FLG&quot;&gt;MR&lt;/field&gt; 			&lt;field name=&quot;SP_ITEM_HIST_ID&quot;/&gt; 			&lt;field name=&quot;SP_MTR_HIST_ID&quot;/&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 			&lt;field name=&quot;ITEM_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;MTR_CFG_MTR_ID&quot;/&gt; 			&lt;field name=&quot;MTR_ID&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;DV_TEST_ID&quot;/&gt; 			&lt;field name=&quot;C1_T_FA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;C1_T_FA_STATUS_BEFORE&quot;/&gt; 			&lt;field name=&quot;FA_STEP_TYPE_INFO&quot;&gt;Odczyt licznika&lt;/field&gt; 			&lt;field name=&quot;STEP_ID_LABEL&quot;&gt;ID odczytu licznika&lt;/field&gt; 			&lt;field name=&quot;STEP_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;FA_STEP_INFO&quot;&gt;Licznik Brak danych, odczyt 15-01-2013 12:20:08, 1 odczyt rejestru&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILOFACP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Aktywacja umowy - taryfa C22A]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;TIME_MODE_FLG&quot;&gt;S&lt;/field&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;PHY_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_DESC&quot;/&gt; 	&lt;field name=&quot;STM_SHIFT_REMARK&quot;&gt;Uwaga: Informacje o dacie/godzinie powinny być podane w standardowym czasie lokalnym.&lt;/field&gt; 	&lt;field name=&quot;SA_INFO&quot;&gt;${SA_INFO}&lt;/field&gt; 	&lt;field name=&quot;ACCT_NAME_INFO&quot;&gt;${ACCT_NAME}&lt;/field&gt; 	&lt;field name=&quot;PREMISE_INFO&quot;&gt;${PREM_INFO}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 	&lt;field name=&quot;DEBT_CL_INFO&quot;&gt;Brak długu&lt;/field&gt; 	&lt;field name=&quot;SIC_INFO&quot;/&gt; 	&lt;field name=&quot;RECUR_CHARGE&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;CUR_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;RECUR_CHG_LBL&quot;&gt;Obciążenie cykliczne&lt;/field&gt; 	&lt;field name=&quot;SA_REL_INFO&quot;/&gt; 	&lt;field name=&quot;ENRL_INFO&quot;/&gt; 	&lt;field name=&quot;SA_REMARKS&quot;/&gt; 	&lt;field name=&quot;DECLINE_RSN&quot;/&gt; 	&lt;field name=&quot;NBB_RR_DESCR&quot;/&gt; 	&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 	&lt;field name=&quot;FT_EXIST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NEW_EFF_DT&quot;/&gt; 	&lt;field name=&quot;SS_OPT_EFFDT&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_DESC&quot;/&gt; 	&lt;field name=&quot;ACTIVATE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CLOSE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;APLY_ST_OPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACCEPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_DECLINE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_REACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REINSTATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;INITIATE_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;R_CONT_FLG&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;V_CONT_FLG&quot;&gt;V&lt;/field&gt; 	&lt;field name=&quot;T_CONT_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_RDR&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG_VAL&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TOU&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TAX&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EFF_DTTM&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EXPIRE_DTTM&quot;/&gt; 	&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 	&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ALLOW_SP_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;RT_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ONE_TIME_CH_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SUB_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CIS_DIVISION&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;SA_ID&quot;&gt;${SA_ID}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_CD&quot;&gt;SPEN&lt;/field&gt; 	&lt;field name=&quot;SA_STATUS_FLG&quot;&gt;10&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;END_DT&quot;/&gt; 	&lt;field name=&quot;OLD_ACCT_ID&quot;/&gt; 	&lt;field name=&quot;SA_REL_ID&quot;/&gt; 	&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUST_READ_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;SIC_CD&quot;/&gt; 	&lt;field name=&quot;CHAR_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;HIGH_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;INT_CALC_DT&quot;/&gt; 	&lt;field name=&quot;CIAC_REVIEW_DT&quot;/&gt; 	&lt;field name=&quot;STRT_RSN_FLG&quot;&gt;C&lt;/field&gt; 	&lt;field name=&quot;STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 	&lt;field name=&quot;ENRL_ID&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_TM&quot;/&gt; 	&lt;field name=&quot;IB_BASE_TM_DAY_FLG&quot;/&gt; 	&lt;field name=&quot;SPECIAL_USAGE_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_SA_STAT_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_DCL_RSN_CD&quot;/&gt; 	&lt;field name=&quot;PROP_SA_ID&quot;/&gt; 	&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;NB_RULE_CD&quot;/&gt; 	&lt;field name=&quot;EXPIRE_DT&quot;/&gt; 	&lt;field name=&quot;RENEWAL_DT&quot;/&gt; 	&lt;field name=&quot;NB_APAY_FLG&quot;/&gt; 	&lt;field name=&quot;SA_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_DTTM_TM&quot;/&gt; 	&lt;field name=&quot;DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;TM_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUTOFF_DT&quot;&gt;2014-04-04&lt;/field&gt; 	&lt;field name=&quot;FORCE_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FORCE_DRV_START_DT&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;TC_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;TC_TYPE_TXT&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_RNWL_FLG&quot;&gt;OPTN&lt;/field&gt; 	&lt;field name=&quot;DELETE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;RSA_START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;REAL_SA_ID&quot;/&gt; 	&lt;field name=&quot;REAL_SA_INFO&quot;/&gt; 	&lt;field name=&quot;PROP_SA_INFO&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;list name=&quot;SA_RS_HIST&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;SA_ID&quot;&gt;${SA_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_EFFDT&quot;&gt;${START_DT}&lt;/field&gt; 			&lt;field name=&quot;CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;C&quot;&gt; 			&lt;field name=&quot;SA_ID&quot;&gt;${SA_ID}&lt;/field&gt; 			&lt;field name=&quot;EFFDT&quot;&gt;${START_DT}&lt;/field&gt; 			&lt;field name=&quot;RS_CD&quot;&gt;C22A&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;C1_T_CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;RS_VERSION_FLG&quot;&gt;C1V2&lt;/field&gt; 			&lt;field name=&quot;DESCR&quot;&gt;Rozliczenie dla C22A TPA&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSVAP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.122.88:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Rozpoczęcie/zatrzymanie C22B" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Rozpoczęcie/zatrzymanie]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;/&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt;                                                                     	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Dane_kont_VKI_PG/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
            </ResultCollector>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Potwierdzenie rozpoczęcia umowy]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;&gt;NOLOAD&lt;/field&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt; 	&lt;list name=&quot;SA_TO_STRT&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 			&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 			&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 			&lt;field name=&quot;STRT_FROM_STOP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_COPY_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_SP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;LAST_CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;LAST_SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;LAST_SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SP_ID&quot;/&gt; 			&lt;field name=&quot;STARTSA_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;SATYSPTY_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 			&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 			&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;&gt;${SA_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;START_OPT_CD&quot;/&gt; 			&lt;field name=&quot;END_DT&quot;/&gt; 			&lt;field name=&quot;SS_INFO&quot;&gt;Ta umowa zostanie powiązana z 1 punktami poboru o typach punktu poboru: EE-TPA (1) Informacje o punkcie poboru: 4804748438 Energia  elektryczna - TPA,PLENED806435769808_EZYE02451253_21359198,Miesięczny koniec miesiąca,Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 			&lt;field name=&quot;SIC_CD&quot;/&gt; 			&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CUST_READ_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RECOMMEND_DEP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ACTION_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;HIDE_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;PROTECT_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;INTEREST_RT&quot;&gt;0.0000000&lt;/field&gt; 			&lt;field name=&quot;COPY_SA_ID&quot;/&gt; 			&lt;field name=&quot;COPY_SA_VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_1_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_2_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;STOP_COPY_SA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 			&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 			&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_LBL&quot;&gt;Kwota obciążenia cyklicznego&lt;/field&gt; 			&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 			&lt;field name=&quot;DEP_CL_CD&quot;/&gt; 			&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SIC_INFO&quot;/&gt; 			&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 			&lt;field name=&quot;START_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;GEO_VAL_INFO&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="FA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">FA_ID&quot;:&quot;(\d+)&quot;,&quot;PFA_DT_FILT_FLG&quot;:&quot;ALL</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak FA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_INFO" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_INFO</stringProp>
              <stringProp name="RegexExtractor.regex">false,&quot;SA_INFO&quot;:&quot;(.*)&quot;,&quot;PREM_INFO&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_INFO</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;SA_ID&quot;:&quot;(.*)&quot;,&quot;START_STOP_DT&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Dane_kont_VKI_PG/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
            </ResultCollector>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Działanie terenowe po rozpoczęciu umowy]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;SI&lt;/field&gt; 	&lt;list name=&quot;FA_STEP&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_STEP_SEQ_NBR&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CD&quot;&gt;ODCZYT&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CHANGE_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;W_FA_STATUS_BEFORE&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot; &quot;&gt; 			&lt;field name=&quot;STEP_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;STP_ENTITY_FLG&quot;&gt;MR&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILOFACP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Zamknięcie działania terenowego]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;FA_INFO&quot;&gt;Energia, Rozpoczęcie/zatrzymanie żądania dotyczącego usługi, Odczyt licznika, Oczekująca, zaplanowano 15-01-2013 00:00:00&lt;/field&gt; 	&lt;field name=&quot;FA_CRE_INFO&quot;&gt;Stworzono dnia 03-04-2014 13:50:39 przez użytkownika KCICHY.&lt;/field&gt; 	&lt;field name=&quot;SP_INFO&quot;&gt;Energia  elektryczna - TPA,PLENED806435769808_EZYE02451253_64674165,Miesięczny koniec miesiąca,Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 9491545925&lt;/field&gt; 	&lt;field name=&quot;FO_INFO&quot;&gt;Brak informacji o zleceniach w terenie&lt;/field&gt; 	&lt;field name=&quot;DISP_GRP_DESCR&quot;/&gt; 	&lt;field name=&quot;FA_TYPE_DESCR&quot;&gt;Odczyt licznika&lt;/field&gt; 	&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 9491545925&lt;/field&gt; 	&lt;field name=&quot;APP_SCHED_INFO&quot;/&gt; 	&lt;field name=&quot;APPT_REQD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DEL_ALL_ROW_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DSBL_AFTER_SAVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_FA_UPDATE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_COMPLETE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_HOLD_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_PENDING_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_REMARK_TEXT&quot;/&gt; 	&lt;field name=&quot;FA_UPL_STG_INFO&quot;/&gt; 	&lt;field name=&quot;WFM_ENABLED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CHG_ALG_CALLED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 	&lt;field name=&quot;FA_TYPE_CD&quot;&gt;ODCZYT&lt;/field&gt; 	&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 	&lt;field name=&quot;FA_PRIORITY_FLG&quot;&gt;50&lt;/field&gt; 	&lt;field name=&quot;FA_CREATED_BY_FLG&quot;&gt;SS&lt;/field&gt; 	&lt;field name=&quot;SCHED_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 	&lt;field name=&quot;FA_STATUS_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;ELIG_DISPATCH_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;DISP_GRP_CD&quot;/&gt; 	&lt;field name=&quot;FO_ID&quot;/&gt; 	&lt;field name=&quot;CRE_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 	&lt;field name=&quot;TEST_SEL_ID&quot;/&gt; 	&lt;field name=&quot;USER_ID&quot;&gt;KCICHY&lt;/field&gt; 	&lt;field name=&quot;INSTRUCTIONS&quot;/&gt; 	&lt;field name=&quot;DESCRLONG&quot;/&gt; 	&lt;field name=&quot;FA_CAN_RSN_CD&quot;/&gt; 	&lt;field name=&quot;APP_SCHED_ID&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 	&lt;field name=&quot;FA_EXT_ID&quot;/&gt; 	&lt;field name=&quot;FA_INT_STATUS_FLG&quot;/&gt; 	&lt;field name=&quot;FA_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;FA_RESCHED_RSN_CD&quot;/&gt; 	&lt;field name=&quot;FA_TYPE_CHANGE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_T_CHG_ALG_CALLED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SS_EVT_TYPE_FLG&quot;/&gt; 	&lt;field name=&quot;NEW_FA_DT&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;C1_DISPLAY_RESCHED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_SCHED_DTTM&quot;&gt;${READ_DTTM}&lt;/field&gt; 	&lt;field name=&quot;IGNORE_CHECK_SECURITY_SW&quot;/&gt; 	&lt;list name=&quot;FA_STEP&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_STEP_SEQ_NBR&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CD&quot;&gt;ODCZYT&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CHANGE_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;W_FA_STATUS_BEFORE&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;C&quot;&gt; 			&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 			&lt;field name=&quot;STEP_SEQ_NBR&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;FA_STEP_TY_ACT_FLG&quot;&gt;MR&lt;/field&gt; 			&lt;field name=&quot;SPAWNED_FA_ID&quot;/&gt; 			&lt;field name=&quot;ACCT_ID&quot;/&gt; 			&lt;field name=&quot;CC_ID&quot;/&gt; 			&lt;field name=&quot;STP_ENTITY_FLG&quot;&gt;MR&lt;/field&gt; 			&lt;field name=&quot;SP_ITEM_HIST_ID&quot;/&gt; 			&lt;field name=&quot;SP_MTR_HIST_ID&quot;/&gt; 			&lt;field name=&quot;SP_ID&quot;/&gt; 			&lt;field name=&quot;ITEM_ID&quot;/&gt; 			&lt;field name=&quot;MR_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;MTR_CFG_MTR_ID&quot;/&gt; 			&lt;field name=&quot;MTR_ID&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;DV_TEST_ID&quot;/&gt; 			&lt;field name=&quot;C1_T_FA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;C1_T_FA_STATUS_BEFORE&quot;/&gt; 			&lt;field name=&quot;FA_STEP_TYPE_INFO&quot;&gt;Odczyt licznika&lt;/field&gt; 			&lt;field name=&quot;STEP_ID_LABEL&quot;&gt;ID odczytu licznika&lt;/field&gt; 			&lt;field name=&quot;STEP_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;FA_STEP_INFO&quot;&gt;Licznik Brak danych, odczyt 15-01-2013 12:20:08, 1 odczyt rejestru&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILOFACP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.1; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Aktywacja umowy - taryfa C22B]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;TIME_MODE_FLG&quot;&gt;S&lt;/field&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;PHY_STM_SHIFT_CD&quot;/&gt; 	&lt;field name=&quot;LOG_STM_SHIFT_DESC&quot;/&gt; 	&lt;field name=&quot;STM_SHIFT_REMARK&quot;&gt;Uwaga: Informacje o dacie/godzinie powinny być podane w standardowym czasie lokalnym.&lt;/field&gt; 	&lt;field name=&quot;SA_INFO&quot;&gt;${SA_INFO}&lt;/field&gt; 	&lt;field name=&quot;ACCT_NAME_INFO&quot;&gt;${ACCT_NAME}&lt;/field&gt; 	&lt;field name=&quot;PREMISE_INFO&quot;&gt;${PREM_INFO}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 	&lt;field name=&quot;DEBT_CL_INFO&quot;&gt;Brak długu&lt;/field&gt; 	&lt;field name=&quot;SIC_INFO&quot;/&gt; 	&lt;field name=&quot;RECUR_CHARGE&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;CUR_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;TOT_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;RECUR_CHG_LBL&quot;&gt;Obciążenie cykliczne&lt;/field&gt; 	&lt;field name=&quot;SA_REL_INFO&quot;/&gt; 	&lt;field name=&quot;ENRL_INFO&quot;/&gt; 	&lt;field name=&quot;SA_REMARKS&quot;/&gt; 	&lt;field name=&quot;DECLINE_RSN&quot;/&gt; 	&lt;field name=&quot;NBB_RR_DESCR&quot;/&gt; 	&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 	&lt;field name=&quot;FT_EXIST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NEW_EFF_DT&quot;/&gt; 	&lt;field name=&quot;SS_OPT_EFFDT&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;NEW_START_OPT_DESC&quot;/&gt; 	&lt;field name=&quot;ACTIVATE_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CLOSE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;APLY_ST_OPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_ACCEPT_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_DECLINE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_CANCEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_REACTIVATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;REINSTATE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;INITIATE_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;R_CONT_FLG&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;V_CONT_FLG&quot;&gt;V&lt;/field&gt; 	&lt;field name=&quot;T_CONT_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_RDR&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG_VAL&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TOU&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;BF_SRCH_FLG_TAX&quot;&gt;R&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EFF_DTTM&quot;/&gt; 	&lt;field name=&quot;DFLT_COP_EXPIRE_DTTM&quot;/&gt; 	&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 	&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ALLOW_SP_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;RT_REQ_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ONE_TIME_CH_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SUB_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CIS_DIVISION&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;SA_ID&quot;&gt;${SA_ID}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_CD&quot;&gt;SPEN&lt;/field&gt; 	&lt;field name=&quot;SA_STATUS_FLG&quot;&gt;10&lt;/field&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;END_DT&quot;/&gt; 	&lt;field name=&quot;OLD_ACCT_ID&quot;/&gt; 	&lt;field name=&quot;SA_REL_ID&quot;/&gt; 	&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUST_READ_FLG&quot;&gt;N&lt;/field&gt; 	&lt;field name=&quot;SIC_CD&quot;/&gt; 	&lt;field name=&quot;CHAR_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;START_OPT_CD&quot;/&gt; 	&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;HIGH_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;INT_CALC_DT&quot;/&gt; 	&lt;field name=&quot;CIAC_REVIEW_DT&quot;/&gt; 	&lt;field name=&quot;STRT_RSN_FLG&quot;&gt;C&lt;/field&gt; 	&lt;field name=&quot;STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 	&lt;field name=&quot;ENRL_ID&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_TM&quot;/&gt; 	&lt;field name=&quot;IB_BASE_TM_DAY_FLG&quot;/&gt; 	&lt;field name=&quot;SPECIAL_USAGE_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_SA_STAT_FLG&quot;/&gt; 	&lt;field name=&quot;PROP_DCL_RSN_CD&quot;/&gt; 	&lt;field name=&quot;PROP_SA_ID&quot;/&gt; 	&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;NB_RULE_CD&quot;/&gt; 	&lt;field name=&quot;EXPIRE_DT&quot;/&gt; 	&lt;field name=&quot;RENEWAL_DT&quot;/&gt; 	&lt;field name=&quot;NB_APAY_FLG&quot;/&gt; 	&lt;field name=&quot;SA_DATA_AREA&quot;/&gt; 	&lt;field name=&quot;IB_SA_CUTOFF_DTTM_TM&quot;/&gt; 	&lt;field name=&quot;DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;TM_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CUTOFF_DT&quot;&gt;2014-04-04&lt;/field&gt; 	&lt;field name=&quot;FORCE_DERIVE_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;FORCE_DRV_START_DT&quot;/&gt; 	&lt;field name=&quot;BF_SRCH_FLG&quot;&gt;T&lt;/field&gt; 	&lt;field name=&quot;TC_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;TC_TYPE_TXT&quot;/&gt; 	&lt;field name=&quot;SA_TYPE_RNWL_FLG&quot;&gt;OPTN&lt;/field&gt; 	&lt;field name=&quot;DELETE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;RSA_START_DT&quot;&gt;${START_DT}&lt;/field&gt; 	&lt;field name=&quot;REAL_SA_ID&quot;/&gt; 	&lt;field name=&quot;REAL_SA_INFO&quot;/&gt; 	&lt;field name=&quot;PROP_SA_INFO&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;list name=&quot;SA_RS_HIST&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;SA_ID&quot;&gt;${SA_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_EFFDT&quot;&gt;${START_DT}&lt;/field&gt; 			&lt;field name=&quot;CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;C&quot;&gt; 			&lt;field name=&quot;SA_ID&quot;&gt;${SA_ID}&lt;/field&gt; 			&lt;field name=&quot;EFFDT&quot;&gt;${START_DT}&lt;/field&gt; 			&lt;field name=&quot;RS_CD&quot;&gt;C22B&lt;/field&gt; 			&lt;field name=&quot;VERSION&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;C1_T_CALL_ORIG_FM_FLG&quot;/&gt; 			&lt;field name=&quot;RS_VERSION_FLG&quot;&gt;C1V2&lt;/field&gt; 			&lt;field name=&quot;DESCR&quot;&gt;Rozliczenie dla C22B TPA&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSVAP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://192.168.122.88:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Oczekująca na rozpoczęcie C21" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Rozpoczęcie/zatrzymanie]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;/&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt;                                                                     	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="false">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Potwierdzenie rozpoczęcia umowy]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;&gt;NOLOAD&lt;/field&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt; 	&lt;list name=&quot;SA_TO_STRT&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 			&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 			&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 			&lt;field name=&quot;STRT_FROM_STOP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_COPY_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_SP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;LAST_CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;LAST_SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;LAST_SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SP_ID&quot;/&gt; 			&lt;field name=&quot;STARTSA_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;SATYSPTY_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 			&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 			&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;&gt;${SA_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;START_OPT_CD&quot;/&gt; 			&lt;field name=&quot;END_DT&quot;/&gt; 			&lt;field name=&quot;SS_INFO&quot;&gt;Ta umowa zostanie powiązana z 1 punktami poboru o typach punktu poboru: EE-TPA (1) Informacje o punkcie poboru: 4804748438 Energia  elektryczna - TPA,PLENED806435769808_EZYE02451253_21359198,Miesięczny koniec miesiąca,Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 			&lt;field name=&quot;SIC_CD&quot;/&gt; 			&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CUST_READ_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RECOMMEND_DEP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ACTION_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;HIDE_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;PROTECT_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;INTEREST_RT&quot;&gt;0.0000000&lt;/field&gt; 			&lt;field name=&quot;COPY_SA_ID&quot;/&gt; 			&lt;field name=&quot;COPY_SA_VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_1_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_2_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;STOP_COPY_SA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 			&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 			&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_LBL&quot;&gt;Kwota obciążenia cyklicznego&lt;/field&gt; 			&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 			&lt;field name=&quot;DEP_CL_CD&quot;/&gt; 			&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SIC_INFO&quot;/&gt; 			&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 			&lt;field name=&quot;START_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;GEO_VAL_INFO&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="FA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">FA_ID&quot;:&quot;(\d+)&quot;,&quot;PFA_DT_FILT_FLG&quot;:&quot;ALL</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak FA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_INFO" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_INFO</stringProp>
              <stringProp name="RegexExtractor.regex">false,&quot;SA_INFO&quot;:&quot;(.*)&quot;,&quot;PREM_INFO&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_INFO</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;SA_ID&quot;:&quot;(.*)&quot;,&quot;START_STOP_DT&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Dane_kont_VKI_PG/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
            </ResultCollector>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Działanie terenowe po rozpoczęciu umowy]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;SI&lt;/field&gt; 	&lt;list name=&quot;FA_STEP&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_STEP_SEQ_NBR&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CD&quot;&gt;ODCZYT&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CHANGE_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;W_FA_STATUS_BEFORE&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot; &quot;&gt; 			&lt;field name=&quot;STEP_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;STP_ENTITY_FLG&quot;&gt;MR&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILOFACP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Oczekująca na rozpoczęcie C23" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Rozpoczęcie/zatrzymanie]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;/&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt;                                                                     	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Dane_kont_VKI_PG/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
            </ResultCollector>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Potwierdzenie rozpoczęcia umowy]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;&gt;NOLOAD&lt;/field&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt; 	&lt;list name=&quot;SA_TO_STRT&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 			&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 			&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 			&lt;field name=&quot;STRT_FROM_STOP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_COPY_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_SP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;LAST_CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;LAST_SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;LAST_SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SP_ID&quot;/&gt; 			&lt;field name=&quot;STARTSA_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;SATYSPTY_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 			&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 			&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;&gt;${SA_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;START_OPT_CD&quot;/&gt; 			&lt;field name=&quot;END_DT&quot;/&gt; 			&lt;field name=&quot;SS_INFO&quot;&gt;Ta umowa zostanie powiązana z 1 punktami poboru o typach punktu poboru: EE-TPA (1) Informacje o punkcie poboru: 4804748438 Energia  elektryczna - TPA,PLENED806435769808_EZYE02451253_21359198,Miesięczny koniec miesiąca,Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 			&lt;field name=&quot;SIC_CD&quot;/&gt; 			&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CUST_READ_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RECOMMEND_DEP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ACTION_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;HIDE_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;PROTECT_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;INTEREST_RT&quot;&gt;0.0000000&lt;/field&gt; 			&lt;field name=&quot;COPY_SA_ID&quot;/&gt; 			&lt;field name=&quot;COPY_SA_VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_1_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_2_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;STOP_COPY_SA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 			&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 			&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_LBL&quot;&gt;Kwota obciążenia cyklicznego&lt;/field&gt; 			&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 			&lt;field name=&quot;DEP_CL_CD&quot;/&gt; 			&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SIC_INFO&quot;/&gt; 			&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 			&lt;field name=&quot;START_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;GEO_VAL_INFO&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="FA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">FA_ID&quot;:&quot;(\d+)&quot;,&quot;PFA_DT_FILT_FLG&quot;:&quot;ALL</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak FA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_INFO" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_INFO</stringProp>
              <stringProp name="RegexExtractor.regex">false,&quot;SA_INFO&quot;:&quot;(.*)&quot;,&quot;PREM_INFO&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_INFO</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;SA_ID&quot;:&quot;(.*)&quot;,&quot;START_STOP_DT&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Dane_kont_VKI_PG/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
            </ResultCollector>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Działanie terenowe po rozpoczęciu umowy]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;&gt;NOLOAD&lt;/field&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt; 	&lt;list name=&quot;SA_TO_STRT&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 			&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 			&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 			&lt;field name=&quot;STRT_FROM_STOP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_COPY_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_SP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;LAST_CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;LAST_SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;LAST_SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SP_ID&quot;/&gt; 			&lt;field name=&quot;STARTSA_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;SATYSPTY_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 			&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 			&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;&gt;${SA_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;START_OPT_CD&quot;/&gt; 			&lt;field name=&quot;END_DT&quot;/&gt; 			&lt;field name=&quot;SS_INFO&quot;&gt;Ta umowa zostanie powiązana z 1 punktami poboru o typach punktu poboru: EE-TPA (1) Informacje o punkcie poboru: 4804748438 Energia  elektryczna - TPA,PLENED806435769808_EZYE02451253_21359198,Miesięczny koniec miesiąca,Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 			&lt;field name=&quot;SIC_CD&quot;/&gt; 			&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CUST_READ_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RECOMMEND_DEP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ACTION_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;HIDE_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;PROTECT_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;INTEREST_RT&quot;&gt;0.0000000&lt;/field&gt; 			&lt;field name=&quot;COPY_SA_ID&quot;/&gt; 			&lt;field name=&quot;COPY_SA_VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_1_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_2_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;STOP_COPY_SA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 			&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 			&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_LBL&quot;&gt;Kwota obciążenia cyklicznego&lt;/field&gt; 			&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 			&lt;field name=&quot;DEP_CL_CD&quot;/&gt; 			&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SIC_INFO&quot;/&gt; 			&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 			&lt;field name=&quot;START_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;GEO_VAL_INFO&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILOFACP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Oczekująca na rozpoczęcie C22A" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Rozpoczęcie/zatrzymanie]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;/&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt;                                                                     	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Dane_kont_VKI_PG/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
            </ResultCollector>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Potwierdzenie rozpoczęcia umowy]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;&gt;NOLOAD&lt;/field&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt; 	&lt;list name=&quot;SA_TO_STRT&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 			&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 			&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 			&lt;field name=&quot;STRT_FROM_STOP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_COPY_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_SP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;LAST_CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;LAST_SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;LAST_SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SP_ID&quot;/&gt; 			&lt;field name=&quot;STARTSA_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;SATYSPTY_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 			&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 			&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;&gt;${SA_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;START_OPT_CD&quot;/&gt; 			&lt;field name=&quot;END_DT&quot;/&gt; 			&lt;field name=&quot;SS_INFO&quot;&gt;Ta umowa zostanie powiązana z 1 punktami poboru o typach punktu poboru: EE-TPA (1) Informacje o punkcie poboru: 4804748438 Energia  elektryczna - TPA,PLENED806435769808_EZYE02451253_21359198,Miesięczny koniec miesiąca,Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 			&lt;field name=&quot;SIC_CD&quot;/&gt; 			&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CUST_READ_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RECOMMEND_DEP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ACTION_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;HIDE_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;PROTECT_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;INTEREST_RT&quot;&gt;0.0000000&lt;/field&gt; 			&lt;field name=&quot;COPY_SA_ID&quot;/&gt; 			&lt;field name=&quot;COPY_SA_VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_1_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_2_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;STOP_COPY_SA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 			&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 			&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_LBL&quot;&gt;Kwota obciążenia cyklicznego&lt;/field&gt; 			&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 			&lt;field name=&quot;DEP_CL_CD&quot;/&gt; 			&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SIC_INFO&quot;/&gt; 			&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 			&lt;field name=&quot;START_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;GEO_VAL_INFO&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="FA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">FA_ID&quot;:&quot;(\d+)&quot;,&quot;PFA_DT_FILT_FLG&quot;:&quot;ALL</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak FA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_INFO" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_INFO</stringProp>
              <stringProp name="RegexExtractor.regex">false,&quot;SA_INFO&quot;:&quot;(.*)&quot;,&quot;PREM_INFO&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_INFO</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;SA_ID&quot;:&quot;(.*)&quot;,&quot;START_STOP_DT&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="false">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Dane_kont_VKI_PG/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
            </ResultCollector>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Działanie terenowe]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;SI&lt;/field&gt; 	&lt;list name=&quot;FA_STEP&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_STEP_SEQ_NBR&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CD&quot;&gt;ODCZYT&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CHANGE_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;W_FA_STATUS_BEFORE&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot; &quot;&gt; 			&lt;field name=&quot;STEP_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;STP_ENTITY_FLG&quot;&gt;MR&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILOFACP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Oczekująca na rozpoczęcie C22B" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Rozpoczęcie/zatrzymanie]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;/&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt;                                                                     	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Dane_kont_VKI_PG/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
            </ResultCollector>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Potwierdzenie rozpoczęcia umowy]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ACCT_INFO&quot;&gt;Biznesowy, 0,00zł, Przedsiębiorstwo transportowe Jakkolwiek&lt;/field&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;/&gt; 	&lt;field name=&quot;CURRENCY_CD&quot;&gt;PLN&lt;/field&gt; 	&lt;field name=&quot;STRT_START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 	&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STRT_PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 	&lt;field name=&quot;STRT_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;STRT_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_STRT_REQ_BY&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_1_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;STRT_SP_TYPE_2_CD&quot;&gt; 		&lt;![CDATA[&lt;NOSP&gt;]]&gt;&lt;/field&gt; 	&lt;field name=&quot;ADDRESS1&quot;&gt;${ADDRESS1}&lt;/field&gt; 	&lt;field name=&quot;CITY&quot;&gt;${CITY}&lt;/field&gt; 	&lt;field name=&quot;SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_PREM_INFO&quot;&gt;Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 	&lt;field name=&quot;C1_ALLOW_VAL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;C1_VAL_SCR_CD&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 	&lt;field name=&quot;CD_TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 	&lt;field name=&quot;STOP_END_DT&quot;/&gt; 	&lt;field name=&quot;STOP_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 	&lt;field name=&quot;STOP_PREM_ID&quot;/&gt; 	&lt;field name=&quot;STOP_SA_ID&quot;/&gt; 	&lt;field name=&quot;STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SA_INFO&quot;/&gt; 	&lt;field name=&quot;ACTION_START_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;ACTION_STOP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;BUILD_START_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;START_PREM_SP_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;START_SELECT_SA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ERROR_CREATE_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CREATE_START_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CREATE_STOP_FA_SW&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECTED_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;STOP_SELECT_SA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;UPDATE_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;CANCEL_SEL_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PSA_ACT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PSA_TO_DT&quot;/&gt; 	&lt;field name=&quot;PSA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PSA_SATY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;PSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PSA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_SP_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;PFA_DT_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SCHED_FROM_DT&quot;/&gt; 	&lt;field name=&quot;PFA_SCHED_TO_DT&quot;/&gt; 	&lt;field name=&quot;PFA_PREM_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;PFA_SPTY_FILT_FLG&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_SP_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;PFA_GEO_TYPE_CD&quot;&gt;ALL&lt;/field&gt; 	&lt;field name=&quot;PFA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PSA_START_STOP_DT&quot;/&gt; 	&lt;field name=&quot;ACCT_ID2&quot;&gt;${ACCT_ID}&lt;/field&gt; 	&lt;field name=&quot;ADDRESS12&quot;/&gt; 	&lt;field name=&quot;ADDRESS2&quot;/&gt; 	&lt;field name=&quot;ADDRESS3&quot;/&gt; 	&lt;field name=&quot;ADDRESS4&quot;/&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTE_TYPE_CD&quot;&gt;WWM&lt;/field&gt; 	&lt;field name=&quot;CITY2&quot;/&gt; 	&lt;field name=&quot;COUNTRY&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;COUNTY&quot;/&gt; 	&lt;field name=&quot;EMAILID&quot;/&gt; 	&lt;field name=&quot;GEO_CODE&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE&quot;/&gt; 	&lt;field name=&quot;IN_CITY_LIMIT&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;NUM1&quot;/&gt; 	&lt;field name=&quot;NUM2&quot;/&gt; 	&lt;field name=&quot;POSTAL&quot;/&gt; 	&lt;field name=&quot;STATE&quot;/&gt; 	&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MAIN_CUST_PER_ID&quot;&gt;${PER_ID}&lt;/field&gt; 	&lt;field name=&quot;BILL_ADDR_SRCE_FLG2&quot;&gt;PREM&lt;/field&gt; 	&lt;field name=&quot;BILL_RTG_METH_FLG&quot;&gt;P&lt;/field&gt; 	&lt;field name=&quot;QTE_RTG_METH_FLG&quot;/&gt; 	&lt;field name=&quot;MAILING_PREM_ID&quot;/&gt; 	&lt;field name=&quot;UPDATE_ADDR_FLDS&quot;/&gt; 	&lt;field name=&quot;STATE_DESCR&quot;/&gt; 	&lt;field name=&quot;STATE_POSTAL&quot;/&gt; 	&lt;field name=&quot;QUOTE_RTE_TYPE_MSG&quot;/&gt; 	&lt;field name=&quot;MSG_TEXT&quot;/&gt; 	&lt;field name=&quot;MESSAGE_CAT_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;MESSAGE_NBR&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;RELOAD_ADDR_OVRD_SW&quot;&gt;NOLOAD&lt;/field&gt; 	&lt;field name=&quot;PHONE_COLL_FR_DFLT&quot;&gt;Y&lt;/field&gt; 	&lt;field name=&quot;COUNTRY2&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;ADDR1_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR2_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR3_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;ADDR4_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;CITY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;VERSION2&quot;&gt;5&lt;/field&gt; 	&lt;field name=&quot;NUM1_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;NUM2_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;HOUSE_TYPE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;COUNTY_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;STATE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;POSTAL_AVAIL&quot;&gt;true&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;GEO_CODE_AVAIL&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;LANGUAGE_CD&quot;&gt;POL&lt;/field&gt; 	&lt;field name=&quot;DESCR&quot;&gt;Polska&lt;/field&gt; 	&lt;field name=&quot;ADDR1_LBL&quot;&gt;Adres łączony&lt;/field&gt; 	&lt;field name=&quot;ADDR2_LBL&quot;&gt;Ulica&lt;/field&gt; 	&lt;field name=&quot;ADDR3_LBL&quot;&gt;Nr Domu&lt;/field&gt; 	&lt;field name=&quot;ADDR4_LBL&quot;&gt;Nr lokalu&lt;/field&gt; 	&lt;field name=&quot;CITY_LBL&quot;&gt;Miejscowość&lt;/field&gt; 	&lt;field name=&quot;NUM1_LBL&quot;/&gt; 	&lt;field name=&quot;NUM2_LBL&quot;/&gt; 	&lt;field name=&quot;HOUSE_TYPE_LBL&quot;/&gt; 	&lt;field name=&quot;COUNTY_LBL&quot;&gt;Poczta&lt;/field&gt; 	&lt;field name=&quot;STATE_LBL&quot;/&gt; 	&lt;field name=&quot;POSTAL_LBL&quot;&gt;Kod pocztowy&lt;/field&gt; 	&lt;field name=&quot;IN_CITY_LIM_LBL&quot;/&gt; 	&lt;field name=&quot;GEO_CODE_LBL&quot;/&gt; 	&lt;field name=&quot;COLL_TYPE_FLG&quot;&gt;D&lt;/field&gt; 	&lt;field name=&quot;START_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;STOP_REC_CNT&quot;&gt;0&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_REQED_BY&quot;/&gt; 	&lt;field name=&quot;SSA_STOP_RSN_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 	&lt;field name=&quot;SSA_STOP_DT&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_INFO&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_PREM_ID&quot;/&gt; 	&lt;field name=&quot;SSA_SATY_FILT_FLG&quot;/&gt; 	&lt;field name=&quot;SSA_CIS_DIVISION&quot;/&gt; 	&lt;field name=&quot;SSA_SA_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_TYPE_CD&quot;/&gt; 	&lt;field name=&quot;SSA_GEO_VAL&quot;/&gt; 	&lt;field name=&quot;PREM_ID&quot;/&gt; 	&lt;field name=&quot;CUSTOM_AREA&quot;/&gt; 	&lt;field name=&quot;ENABLE_ADDR_SRCE_FLG&quot;&gt;N&lt;/field&gt; 	&lt;list name=&quot;SA_TO_STRT&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;START_DT&quot;&gt;${RECEIVE_DT}&lt;/field&gt; 			&lt;field name=&quot;STRT_TYPE_FLG&quot;&gt;PR&lt;/field&gt; 			&lt;field name=&quot;PREM_ID&quot;&gt;${PREM_ID}&lt;/field&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_REQED_BY&quot;/&gt; 			&lt;field name=&quot;STRT_FROM_STOP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_COPY_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;STRT_FROM_SP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CREATE_FA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;LAST_CIS_DIVISION&quot;/&gt; 			&lt;field name=&quot;LAST_SA_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;LAST_SA_ID&quot;/&gt; 			&lt;field name=&quot;LAST_SP_ID&quot;/&gt; 			&lt;field name=&quot;STARTSA_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;SATYSPTY_MORE_ROWS_SW&quot;/&gt; 			&lt;field name=&quot;STRT_SPTY_FILT_FLG&quot;/&gt; 			&lt;field name=&quot;STRT_SP_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_TYPE_CD&quot;/&gt; 			&lt;field name=&quot;STRT_GEO_VAL&quot;/&gt; 			&lt;field name=&quot;STRT_SVC_EXST_FLG&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;CIS_DIVISION&quot;&gt;${CIS_DIVISION}&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_CD&quot;&gt;${SA_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;START_OPT_CD&quot;/&gt; 			&lt;field name=&quot;END_DT&quot;/&gt; 			&lt;field name=&quot;SS_INFO&quot;&gt;Ta umowa zostanie powiązana z 1 punktami poboru o typach punktu poboru: EE-TPA (1) Informacje o punkcie poboru: 4804748438 Energia  elektryczna - TPA,PLENED806435769808_EZYE02451253_21359198,Miesięczny koniec miesiąca,Bartoszyce 93-906 ul.Zeromskiego 38/68, Obiekt produkcyjny, 4804748447&lt;/field&gt; 			&lt;field name=&quot;SIC_CD&quot;/&gt; 			&lt;field name=&quot;ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;CUST_READ_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RECOMMEND_DEP_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;TOT_TO_BILL_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;TOT_AMT_TOBILL_LBL&quot;&gt;Razem do zapłaty&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_AMT&quot;&gt;0.00&lt;/field&gt; 			&lt;field name=&quot;NBR_PYMNT_PERIODS&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;ACTION_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;HIDE_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;PROTECT_CALC_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;INTEREST_RT&quot;&gt;0.0000000&lt;/field&gt; 			&lt;field name=&quot;COPY_SA_ID&quot;/&gt; 			&lt;field name=&quot;COPY_SA_VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;SP_ID&quot;&gt;${SP_ID}&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_1_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;SP_TYPE_2_CD&quot;&gt;EE-TPA&lt;/field&gt; 			&lt;field name=&quot;STOP_COPY_SA_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SA_TYPE_INFO&quot;&gt;Polska / Umowa sprzedaży energii elekt&lt;/field&gt; 			&lt;field name=&quot;START_OPT_INFO&quot;/&gt; 			&lt;field name=&quot;ALLOW_RCR_CHG_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;RCR_CHG_LBL&quot;&gt;Kwota obciążenia cyklicznego&lt;/field&gt; 			&lt;field name=&quot;REQ_AMT_BILL_FLG&quot;&gt;N&lt;/field&gt; 			&lt;field name=&quot;SPECIAL_ROLE_FLG&quot;/&gt; 			&lt;field name=&quot;DEP_CL_CD&quot;/&gt; 			&lt;field name=&quot;PREM_REQ_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;SA_ALLOW_EST_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;START_OPT_REQ_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;SIC_INFO&quot;/&gt; 			&lt;field name=&quot;BUS_ACTIVITY_DESC&quot;/&gt; 			&lt;field name=&quot;START_SW&quot;&gt;true&lt;/field&gt; 			&lt;field name=&quot;GEO_VAL_INFO&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; 	&lt;list name=&quot;OVRD_PHONE&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_SEQ_NUM&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot;A&quot;&gt; 			&lt;field name=&quot;ACCT_ID&quot;&gt;${ACCT_ID}&lt;/field&gt; 			&lt;field name=&quot;SEQ_NUM&quot;&gt;1&lt;/field&gt; 			&lt;field name=&quot;PHONE_TYPE_CD&quot;&gt;${PHONE_TYPE_CD}&lt;/field&gt; 			&lt;field name=&quot;COUNTRY_CODE&quot;/&gt; 			&lt;field name=&quot;PHONE&quot;&gt;${PHONE}&lt;/field&gt; 			&lt;field name=&quot;EXTENSION&quot;/&gt; 			&lt;field name=&quot;VERSION&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;PHONE_FORMAT&quot;/&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageChange?service=CILCSSEP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="FA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">FA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">FA_ID&quot;:&quot;(\d+)&quot;,&quot;PFA_DT_FILT_FLG&quot;:&quot;ALL</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak FA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_INFO" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_INFO</stringProp>
              <stringProp name="RegexExtractor.regex">false,&quot;SA_INFO&quot;:&quot;(.*)&quot;,&quot;PREM_INFO&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_INFO</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="SA_ID" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">SA_ID</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;SA_ID&quot;:&quot;(.*)&quot;,&quot;START_STOP_DT&quot;:</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Brak SA_ID</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>false</time>
                  <latency>false</latency>
                  <timestamp>false</timestamp>
                  <success>false</success>
                  <label>false</label>
                  <code>false</code>
                  <message>false</message>
                  <threadName>false</threadName>
                  <dataType>false</dataType>
                  <encoding>false</encoding>
                  <assertions>false</assertions>
                  <subresults>false</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>false</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                </value>
              </objProp>
              <stringProp name="filename">Dane_kont_VKI_PG/Test_${__time(YMDHMS)}/dane_konta.csv </stringProp>
            </ResultCollector>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="[Działanie terenowe po rozpoczęciu umowy]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="pageBody" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageBody</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; ?&gt; &lt;pageBody&gt; 	&lt;field name=&quot;DEFAULT_FOR_FLG&quot;&gt;SI&lt;/field&gt; 	&lt;list name=&quot;FA_STEP&quot;&gt; 		&lt;listHeader&gt; 			&lt;field name=&quot;FA_ID&quot;&gt;${FA_ID}&lt;/field&gt; 			&lt;field name=&quot;LAST_STEP_SEQ_NBR&quot;&gt;10&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CD&quot;&gt;ODCZYT&lt;/field&gt; 			&lt;field name=&quot;FA_TYPE_CHANGE_SW&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;W_FA_STATUS_BEFORE&quot;/&gt; 			&lt;field name=&quot;moreRows&quot;&gt;false&lt;/field&gt; 			&lt;field name=&quot;remainingRows&quot;&gt;0&lt;/field&gt; 			&lt;field name=&quot;lastInfo&quot;/&gt; 		&lt;/listHeader&gt; 		&lt;listBody action=&quot; &quot;&gt; 			&lt;field name=&quot;STEP_ID&quot;&gt;${MR_ID}&lt;/field&gt; 			&lt;field name=&quot;STP_ENTITY_FLG&quot;&gt;MR&lt;/field&gt; 		&lt;/listBody&gt; 	&lt;/list&gt; &lt;/pageBody&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ouafSecurityToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ouafSecurityToken</stringProp>
                  <stringProp name="Argument.value">${SecurityToken}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userProfileXML" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">userProfileXML</stringProp>
                  <stringProp name="Argument.value">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;profile&gt;&lt;portalProfileUserId&gt;&lt;/portalProfileUserId&gt;&lt;currencyCode&gt;PLN&lt;/currencyCode&gt;&lt;timeFormat&gt;HH:mm:ss&lt;/timeFormat&gt;&lt;moneyFormat&gt;-1.1&lt;/moneyFormat&gt;&lt;showAllPremises&gt;N&lt;/showAllPremises&gt;&lt;numberGroupSeparator&gt;S&lt;/numberGroupSeparator&gt;&lt;decimalSeparator&gt;,&lt;/decimalSeparator&gt;&lt;isTemplateUser&gt;false&lt;/isTemplateUser&gt;&lt;dateDisplayFormat&gt;dd-MM-yyyy&lt;/dateDisplayFormat&gt;&lt;numberFormat&gt;-1.1&lt;/numberFormat&gt;&lt;moneyDecimalDigits&gt;2&lt;/moneyDecimalDigits&gt;&lt;dashboardWidth&gt;200&lt;/dashboardWidth&gt;&lt;userTimeZone&gt;CET&lt;/userTimeZone&gt;&lt;homePage&gt;CI0000001399&lt;/homePage&gt;&lt;userTag&gt;&lt;/userTag&gt;&lt;/profile&gt;</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain"></stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="HTTPSampler.protocol"></stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/ouaf/pageDefault?service=CILOFACP</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.monitor">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">pl</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.1; WOW64; Trident/6.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0; .NET4.0C; .NET4.0E; InfoPath.2)</stringProp>
                </elementProp>
                <elementProp name="DNT" elementType="Header">
                  <stringProp name="Header.name">DNT</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://10.7.72.55:6500/ouaf/cisMain.jsp?language=POL</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="983930459">resultCode....E..</stringProp>
              </collectionProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">6</intProp>
            </ResponseAssertion>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="[RE] Synchronizacja" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1369395109000</longProp>
        <longProp name="ThreadGroup.end_time">1369395109000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Synchronizacja" enabled="true"/>
        <hashTree>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Test Action" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">0</stringProp>
          </TestAction>
          <hashTree>
            <SyncTimer guiclass="TestBeanGUI" testclass="SyncTimer" testname="Synchronizing Timer" enabled="true">
              <stringProp name="groupSize">${__threadNum}</stringProp>
            </SyncTimer>
            <hashTree/>
            <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${gaussianTimerConstantDelay}</stringProp>
              <stringProp name="RandomTimer.range">${gaussianTimerDeviation}</stringProp>
            </GaussianRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="[RE] Debug Mode" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1383138731000</longProp>
        <longProp name="ThreadGroup.end_time">1383138731000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Debug Mode" enabled="true"/>
        <hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Jeśli wartość debugMode = true" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(&quot;${debugMode}&quot;==&quot;true&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="Jeśli wartość debugMode = false" enabled="true">
            <stringProp name="IfController.condition">${__javaScript(&quot;${debugMode}&quot;==&quot;false&quot;)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
          </IfController>
          <hashTree>
            <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="false">
        <stringProp name="FileSaver.filename">Odpowiedzi/Test_${__time(YMDHMS)}/resp</stringProp>
        <boolProp name="FileSaver.errorsonly">true</boolProp>
        <boolProp name="FileSaver.skipautonumber">false</boolProp>
        <boolProp name="FileSaver.skipsuffix">false</boolProp>
        <boolProp name="FileSaver.successonly">false</boolProp>
      </ResultSaver>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>false</time>
            <latency>false</latency>
            <timestamp>false</timestamp>
            <success>false</success>
            <label>false</label>
            <code>false</code>
            <message>false</message>
            <threadName>false</threadName>
            <dataType>false</dataType>
            <encoding>false</encoding>
            <assertions>false</assertions>
            <subresults>false</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Dane zagregowane" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>true</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">Logi/Test_${__time(YMDHMS)}/dane_zagregowane.jtl</stringProp>
      </ResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ThreadsStateOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Active Threads Over Time" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">Logi/Test_${__time(YMDHMS)}/ActiveThreadsOverTime.jtl</stringProp>
        <longProp name="interval_grouping">5000</longProp>
        <boolProp name="graph_aggregated">true</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseTimesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Times Over Time" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">Logi/Test_${__time(YMDHMS)}/ResponseTimesOverTime.jtl</stringProp>
        <longProp name="interval_grouping">5000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.TransactionsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Transactions per Second" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">Logi/Test_${__time(YMDHMS)}/TransactionsPerSecond.jtl</stringProp>
        <longProp name="interval_grouping">5000</longProp>
        <boolProp name="graph_aggregated">true</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.BytesThroughputOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Bytes Throughput Over Time" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">Logi/Test_${__time(YMDHMS)}/BytesThroughputOverTime.jtl</stringProp>
        <longProp name="interval_grouping">5000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.LatenciesOverTimeGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Latencies Over Time" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">Logi/Test_${__time(YMDHMS)}/ResponseLatenciesOverTime.jtl</stringProp>
        <longProp name="interval_grouping">5000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.HitsPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Hits per Second" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">Logi/Test_${__time(YMDHMS)}/HitsPerSecond.jtl</stringProp>
        <longProp name="interval_grouping">5000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.vizualizers.CorrectedResultCollector guiclass="kg.apc.jmeter.vizualizers.ResponseCodesPerSecondGui" testclass="kg.apc.jmeter.vizualizers.CorrectedResultCollector" testname="jp@gc - Response Codes per Second" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename">Logi/Test_${__time(YMDHMS)}/ResponseCodesPerSecond.jtl</stringProp>
        <longProp name="interval_grouping">5000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
      </kg.apc.jmeter.vizualizers.CorrectedResultCollector>
      <hashTree/>
      <kg.apc.jmeter.perfmon.PerfMonCollector guiclass="kg.apc.jmeter.vizualizers.PerfMonGui" testclass="kg.apc.jmeter.perfmon.PerfMonCollector" testname="jp@gc - PerfMon Metrics Collector" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>false</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
        <longProp name="interval_grouping">1000</longProp>
        <boolProp name="graph_aggregated">false</boolProp>
        <stringProp name="include_sample_labels"></stringProp>
        <stringProp name="exclude_sample_labels"></stringProp>
        <collectionProp name="metricConnections">
          <collectionProp name="917712290">
            <stringProp name="-1204607085">localhost</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="66952">CPU</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="-1383002031">
            <stringProp name="-1204607085">localhost</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="-1993889503">Memory</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
          <collectionProp name="-1270662015">
            <stringProp name="-1204607085">localhost</stringProp>
            <stringProp name="1600768">4444</stringProp>
            <stringProp name="-274342153">Network I/O</stringProp>
            <stringProp name="0"></stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.perfmon.PerfMonCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="[RE] Odczyty" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1383557769000</longProp>
        <longProp name="ThreadGroup.end_time">1383557769000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
